279. bug report number : ['2777']
comment number: 102584534 
body: This does not have enough information for debugging, and I never managed to reproduce this. Due to frequent changes in the shutdown/init sequence I'm also unsure if it's still relevant, so closing this issue.
 

280. bug report number : ['2773']
comment number: 19857665 
body: the Proxy-function is still Broken / unusable 1!
 

comment number: 19857683 
body: It looks like there is a node out there that tries to connect to your through Tor, which doesn't support the extra bool flag in the version message. I don't think there's a fault on your side. Running through tor works fine for me.
 

comment number: 19864415 
body: since this Pullrequest it conflics with  -discover parameter .

without the parametr all is ok
 

comment number: 20109021 
body: What works okay?
 

comment number: 20109346 
body: I made ​​a mistake. it is not fixed. the error appears anyway.
 

comment number: 32601891 
body: Problem statement is not clear.

Bitcoin+Tor is working for many people. I think you just had a bad peer, that happens sometimes and especially on Tor because the number of nodes is more limited there.
 

281. bug report number : ['2770']
comment number: 19517272 
body: I am also still having this problem again with 0.8.2.  Previously I had the problem with prior 0.8 builds and had to downgrade.  0.8.2 looked good for a while, but I've once again gotten this.
 

comment number: 19523114 
body: @rebroad you're using a mac?
 

comment number: 19523427 
body: I don't believe you've ever previously disclosed that you were running it on truecrypt. Can you reproduce your failures with it not on truecrypt?
 

comment number: 20692754 
body: Bump. I am also getting this issue. OS X 0.8.3
 

comment number: 20870191 
body: I still think it's time to upgrade to the latest LevelDB code and see if that helps.
 

comment number: 20870287 
body: ...

@Diapolo  If a new version of LevelDB has changed in ways we don't understand, then those changes could result in chain forking.  If we understand how its changed we could reason about how they may or may not have helped OSX/Windows and there is no need to just guess.
 

comment number: 20870672 
body: @gmaxwell You are most likely correct in what you say, but doing nothing about the crashes seems to just bring people away from bitcoind or Bitcoin-Qt in the end :-/.
 

comment number: 22474152 
body: I got a chainstate corruption this morning on my Mac, and have spent most of the day debugging.
@sipa @gmaxwell @jgarzik : here is what I've found so far:

My MANIFEST- file is corrupted (corrupted file: http://skypaint.com/bitcoin/MANIFEST-076191 ). I wrote a little python tool to dump the log records (http://skypaint.com/bitcoin/dumplogfile.py ), and something odd happened at bytes 65,506-65.536: there are 30 zero bytes.

So the records look like (output from my dumplogfile.py ):

  FULL length 1012 (position: 64490)
  0 length 0 (position: 65509)
  0 length 0 (position: 65516)
  0 length 0 (position: 65523)
BLOCK 2
  LAST length 1121 (position: 65536)

... and leveldb is very upset that there is no FIRST record before the LAST record at the beginning of block 2 (block as in "leveldb 32,768-byte block of records", not bitcoin block).

WHY those 30 zero bytes were written.... I dunno.
 

comment number: 22474213 
body: ...or not written, as mmap'd pages often default to all-zero.

Gah.
 

comment number: 22474814 
body: This looks like the same issue:  https://code.google.com/p/leveldb/issues/detail?id=197
 

comment number: 22476681 
body: @gavinandresen Did this happen with a build, which includes the recent LevelDB update?
 

comment number: 22534779 
body: @Diapolo: yes, I got corruption running git HEAD which includes latest LevelDB.

I've reached the edge of my LevelDB/filesystem knowledge, so I'm done debugging this for now and moving on to other things.
 

comment number: 22534982 
body: @gavinandresen Were you able to reliably reproduce the corruption?
 

comment number: 22535566 
body: Guys, thanks again for finally looking into this and acknowledging that something is seriously amiss.

Given that it seems we have a fairly serious and profound bug to squash here, and we've apparently (momentarily?) reached the edge of your time/knowledge to debug this, would it make sense as a stopgap measure to release a backport v0.7.3 Mac client?

https://bitcointalk.org/index.php?topic=199699.msg2128991#msg2128991

Windows and Linux versions were released back in May, even though their v0.8.x releases seem to work pretty good.  From what I've seen, none of the v0.8.x Mac releases with LevelDB work reliably.

I've made some noise after each of the v0.8.x Mac releases that they are not working reliably, but this is the first time I've seen any of the devs semi-publically acknowledge it.

I'm sure there are plenty of Mac users downloading and running these buggy releases every day, with no idea there may be a problem, and the number of posts to the bitcointalk Tech Support forum about this confirm it.

I am well-informed and technical enough to know to use v0.7.2 and install the "May 15 workaround", but I'm sure there are PLENTY of other Mac users who are not.

A public announcement that the existing v0.8.x Mac releases are bad and an official release of a v0.7.3 Mac backport I think is probably the right next step.
 

comment number: 22535988 
body: @toffoo I am not comfortable releasing a 0.7.3 final until the May15 hardfork has actually split from the older clients and the backport has proven reliable. I also don't have a Mac, so I cannot even build v0.7.3rc3 for it.
 

comment number: 22538532 
body: @toffoo : I'd rather drop Bitcoin-Qt on OSX than recommend an old release; we don't have the resources to support multiple releases.

Whether this bug is serious enough to drop the OSX release until somebody figures out what is wrong and fixes it is debatable-- I've had two corruptions in the last six months, the seriousness of this problem seems to be different depending either on particular hardware or luck (I have no idea which).
 

comment number: 22686426 
body: Could this be a result of relying on fsync on Mac OSX for write guarantees? 

https://developer.apple.com/library/mac/documentation/Darwin/Reference/ManPages/man2/fsync.2.html

> Note that while fsync() will flush all data from the host to the drive (i.e. the "permanent storage
> device"), the drive itself may not physically write the data to the platters for quite some time and it
> may be written in an out-of-order sequence.
> 
> Specifically, if the drive loses power or the OS crashes, the application may find that only some or
> none of their data was written.  The disk drive may also re-order the data so that later writes may be
> present, while earlier writes are not.

If so, the fix would be to use fcntl F_FULLFSYNC instead, although that can cause significant slowdown as it will flush _all_ buffered data, not just that of the particular file.

https://developer.apple.com/library/mac/documentation/Darwin/Reference/ManPages/man2/fcntl.2.html

> F_FULLFSYNC        Does the same thing as fsync(2) then asks the drive to flush all buffered data to
>                         the permanent storage device (arg is ignored).  This is currently implemented on
>                         HFS, MS-DOS (FAT), and Universal Disk Format (UDF) file systems.  The operation may
>                         take quite a while to complete.  Certain FireWire drives have also been known to
>                         ignore the request to flush their buffered data.

other references:
http://lists.apple.com/archives/Darwin-dev/2005/Feb/msg00087.html
http://shaver.off.net/diary/2008/05/25/fsyncers-and-curveballs/

If this is the cause, I believe the fix is a simple patch to leveldb's port/port_posix.h along the lines of:

> #if defined(OS_MACOSX)
> #define fdatasync(fd) fcntl(fd, F_FULLFSYNC, 0)
> #endif
 

comment number: 22690135 
body: I think we should try that patch. The fact that fsync doesn't fsync is ... unfortunate. I guess if writes can arrive to disk out of order and at some arbitrary later time could would line up with what I've seen which is that the corruptions only happen when something goes wrong at the OS level, like a kernel panic during resume from suspend. I will ask Sanjay to weigh in on the LevelDB bug as well. He is not a Mac expert but could probably provide advice.
 

comment number: 23056448 
body: Please try:
  https://sourceforge.net/projects/bitcoin/files/Bitcoin/bitcoin-0.8.4/test/
... and let us know if the corruption issues disappear.
 

comment number: 23228811 
body: I gave 0.8.4 a try but I am still getting the same error.  I am just one user though, and not a programmer, so better wait for another response to confirm. 
 

comment number: 23230494 
body: @medicinebottle Did you restart from scratch? (start with -reindex option, or wiped your blocks + chainstate directories).
 

comment number: 23232783 
body: Hi, yes I would also like to try out this new test release, but I was curious which would be the most scientific method of indexing the block data:
1. reindex my existing v0.7.2 blockchain
2. download jgarzik's blockchain bittorrent bootstrap.dat  https://bitcointalk.org/index.php?topic=145386.0
3. re-download from scratch the entire blockchain with the fresh install of v0.8.4test

In all my previous tests of v0.8.x releases I did method #1.

For this one I was thinking of trying #2.  Would that in any way ruin the scientific integrity of this test?

How long should a complete sync of the blockchain thru bitcoin-qt take these days?
 

comment number: 23545508 
body: As per sipa's suggestion, I've gone with #1 above and reindexed my existing v0.7.2 blockchain.

Almost 3 days now running v0.8.4rc2 here and: zero corruption

Thanks again guys for all this Mac client attention.  Whatever you did seems to be working.
 

comment number: 23549676 
body: @toffoo If you're up for another experiment to make sure the 0.8.4 changes are the cause here: can you try doing a reindex with 0.8.3 again, and see whether it fails?
 

comment number: 23643151 
body: Okay, done.  This afternoon I reindexed with 0.8.3 no problem and it has continued to run (on/off several times) tonight with no crashes or corruption.

When I started this Issue it was 0.8.2 that had corrupted 6 times on me.  I don't think I ever tried 0.8.3 when it came out, because I understood that nothing had changed that might address this issue, and I was fed up after all my problems with 0.8.0, 0.8.1, and 0.8.2.

I will continue running both this 0.8.3 and 0.8.4rc2 on and off and will report back here if I can get either to corrupt or crash.
 

comment number: 23644146 
body: ::sigh:: we fixed a file descriptor exhaustion bug that caused corruption on OSX previously.
 

comment number: 23798884 
body: Ok, experiment complete: 0.8.3 just corrupted on me.  Reindexing worked fine and ran perfect for about 2 days, now upon restart today it opened with "Database corrupted", closed "unexpectedly", and didn't offer to reindex.

Like before, this was the only interesting line in debug.log:

LevelDB read failure: Corruption: block checksum mismatch
**\* System error: Database corrupted

I will go install the newly released 0.8.4 and report again here if this problem resurfaces again.
 

comment number: 23801257 
body: Ok, now things are getting interesting.  With the newly installed 0.8.4, first it came up saying my wallet.dat is corrupted (that's a first) but fortunately I have a backup copy.

With restored wallet.dat in place, now it offers to re-index, but now actually crashes/corrupts during re-index (at least during the beginning!):

LevelDB read failure: Corruption: block checksum mismatch
**\* System error: Database corrupted
Reindexing block file blk00000.dat...
LevelDB read failure: Corruption: block checksum mismatch
**\* System error: Database corrupted
ERROR: AcceptBlock() : AddToBlockIndex failed
ERROR: ProcessBlock() : AcceptBlock FAILED
Reindexing block file blk00001.dat...

So I've tried this a few times now and I cannot get it to re-index the crashed 0.8.3 blockchain.

So now I will try again from scratch with a fresh copy of my good 0.7.2 blockchain.
 

comment number: 24437169 
body: I just tried out the new 0.8.5 Mac release by reindexing my good 0.7.2 blockchain.

It reindexed fine in about 3 hours and I left it running with no problems for several hours.

Upon the first restart I got the "Corrupted block database detected.  Do you want to rebuilt the block database now?" message and this (new!) error in debug.log:

Opened LevelDB successfully
LoadBlockIndexDB(): last block file = 6
LoadBlockIndexDB(): last block file info: CBlockFileInfo(blocks=42, size=4201183, heights=257815...257856, time=2013-09-13...2013-09-14)
LoadBlockIndexDB(): transaction index disabled
LoadBlockIndexDB(): hashBestChain=0000000000000027ff96c78ed8363a5b300cbaf4cd04d2188ea2a696372f5561  height=257856 date=2013-09-14 03:01:03
init message: Verifying blocks...
Verifying last 288 blocks at level 3
ERROR: bool CBlock::ReadFromDisk(const CDiskBlockPos&)() : deserialize or I/O error
ERROR: VerifyDB() : **\* block.ReadFromDisk failed at 257814, hash=0000000000000002fad60b4a9a338aa7e736d4305e15d631d5fb38986f58cc41
Flush(false)
DBFlush(false) ended               0ms
StopNode()
Flushed 0 addresses to peers.dat  1ms
Committing 8731 changed transactions to coin database...
Flush(true)
DBFlush(true) ended               0ms
 

comment number: 24437678 
body: "block.ReadFromDisk failed" is what it sounds like: it tried to read block data from disk and it couldn't.

That sounds very much like bad hardware to me, the block-writing code is incredibly straightforward (blocks are written as received in append-only fashion to the blk*.dat files).
 

282. bug report number : ['2745']
comment number: 19021900 
body: Looks like the same error as #2550 and #2664, except they were on OS X
 

comment number: 19470966 
body: @fanquake yes, but this is with 0.8.2
 

comment number: 19913338 
body: @gruez #2664 was on 0.8.2 also
 

comment number: 35286345 
body: This sounds like a leveldb corruption, run bitcoin-qt.exe with the -reindex command-line option to fix.
 

283. bug report number : ['2739']
comment number: 18952773 
body: The thread code plays nicely with boost::asio.

I would guess any solution that keeps the calls to std::getline() will be problematic, because they don't get interrupted by boost::thread::interrupt.
 

comment number: 103014464 
body: As of 0.10, command line argument `-rpckeepalive=0` can be used to disable the keep-alive behavior. The underlying issue will only be solved by switching to another HTTP server. e.g. #5677.
 

comment number: 151460571 
body: HTTP server has been switched to libevent, which properly times out connections, this issue should be solved now.
 

284. bug report number : ['2726']
comment number: 18801296 
body: The hash of block 228388 is 00000000000000821df4084902335c1736e715c1d2fa62e5655bbdb9276e6604
 

comment number: 18801663 
body: ok, so what does this mean? Why do I still continue to get invalid blocks, even today? e.g.:-

2013-06-02 03:40:03 received block 000000000000014400eae885c5d28444caff6910d2d863728d527f530e47e563
2013-06-02 03:40:03 InvalidChainFound: invalid block=000000000000014400eae885c5d28444caff6910d2d863728d527f530e47e563  height=239195  log2_work=70.200777  date=2013-06-02 03:28:25

Surely there is not a complete invalid chain from 228388 to 239195 is there?
 

comment number: 18801710 
body: Ah, I just noticed the typo in the issue title. It is block 228338, not block 228388. Now corrected the title.
 

comment number: 18804846 
body: @rebroad I assume you chainstate database got corrupted. You can rebuild it by starting with the -reindex command-line option.
 

comment number: 18820271 
body: I will try this, but I literally just did a reindex before this issue occurred as part of an upgrade from 0.6.3 to 0.8.2, so I#m skeptical, plus I think perhaps it gets too easily corrupted given this.
 

comment number: 18953914 
body: @sipa ok, I have done the reindex now, but the problem still exists, although the block it got stuck at is different (it managed a further 3 days and is stuck at 1st April 2013 now). Does this mean i need to keep reindexing each time? if so, this will take forever!
 

comment number: 18955390 
body: @rebroad You wouldn't happen to be near a train yard? (http://jakepoz.com/soviet_debugging.html)
 

comment number: 19143793 
body: Another potential issue with this is that no warning is displayed in the GUI - only in the debug.log.
 

comment number: 19160629 
body: I have tried reindexing again, and using the latest downloadable bitcoin client for windows, but it's still stuck.

2013-06-08 08:52:18 SetBestChain: new best=00000000000001abe4ec1d257b30edb23b3e5d05397cc01089ff4a5750266347  height=229659  log2_work=69.694998  tx=15516508  date=2013-04-04 13:47:29 progress=0.513570
2013-06-08 08:52:18 ProcessBlock: ACCEPTED
2013-06-08 08:52:20 ERROR: CScriptCheck() : 51de91a4fd671baae0a33fbe36cc34898c3bd5aa4e45169ab8e3e9ba07a5a8bf VerifySignature failed
2013-06-08 08:52:21 InvalidChainFound: invalid block=00000000000001ca78f39a60d424b5d39716cd8b874d1d67f8e5946c44fe74ba  height=229660  log2_work=69.695041  date=2013-04-04 14:04:18
2013-06-08 08:52:21 InvalidChainFound:  current best=00000000000001abe4ec1d257b30edb23b3e5d05397cc01089ff4a5750266347  height=229659  log2_work=69.694998  date=2013-04-04 13:47:29
2013-06-08 08:52:21 InvalidChainFound: invalid block=00000000000001ca78f39a60d424b5d39716cd8b874d1d67f8e5946c44fe74ba  height=229660  log2_work=69.695041  date=2013-04-04 14:04:18
2013-06-08 08:52:21 InvalidChainFound:  current best=00000000000001abe4ec1d257b30edb23b3e5d05397cc01089ff4a5750266347  height=229659  log2_work=69.694998  date=2013-04-04 13:47:29
2013-06-08 08:52:21 ERROR: SetBestBlock() : ConnectBlock 00000000000001ca78f39a60d424b5d39716cd8b874d1d67f8e5946c44fe74ba failed
2013-06-08 08:52:21 ERROR: AcceptBlock() : AddToBlockIndex failed
2013-06-08 08:52:21 ERROR: ProcessBlock() : AcceptBlock FAILED
 

comment number: 19161717 
body: @rebroad Can you try reindexing again, with par=1 in your bitcoin.conf file, or with -par=1 on the command line? I just want to rule out this is an issue caused by multithreaded verification, but my best guess is still that this is a hardware problem.
 

comment number: 19165095 
body: @sipa i will try that next. Just to also clarify. I've also tried removing the database entirely and redownloading the blockchain previously. i've now just tried another reindex, and this time it's stuck again, but again on a more recent block:-

2013-06-09 07:57:18 SetBestChain: new best=0000000000000007e967587557d2c26fbd6259a6bdad4f2943d1f23f5fec2517  height=232631  work=1057302097488701699688  tx=16563589  date=2013-04-22 20:27:57
2013-06-09 07:57:18 ProcessBlock: ACCEPTED
2013-06-09 07:57:19 ERROR: CScriptCheck() : e50c94cf77 VerifySignature failed
2013-06-09 07:57:19 InvalidChainFound: invalid block=0000000000000141686ceba58449a93c304b07aac8188583fbbf35aa66fff586  height=232632  work=1057340642384738704203  date=2013-04-22 20:36:24
2013-06-09 07:57:19 InvalidChainFound:  current best=0000000000000007e967587557d2c26fbd6259a6bdad4f2943d1f23f5fec2517  height=232631  work=1057302097488701699688  date=2013-04-22 20:27:57
2013-06-09 07:57:19 InvalidChainFound: invalid block=0000000000000141686ceba58449a93c304b07aac8188583fbbf35aa66fff586  height=232632  work=1057340642384738704203  date=2013-04-22 20:36:24
2013-06-09 07:57:19 InvalidChainFound:  current best=0000000000000007e967587557d2c26fbd6259a6bdad4f2943d1f23f5fec2517  height=232631  work=1057302097488701699688  date=2013-04-22 20:27:57
2013-06-09 07:57:19 ERROR: SetBestBlock() : ConnectBlock 0000000000000141686ceba58449a93c304b07aac8188583fbbf35aa66fff586 failed
2013-06-09 07:57:19 ERROR: AcceptBlock() : AddToBlockIndex failed
2013-06-09 07:57:19 ERROR: ProcessBlock() : AcceptBlock FAILED
 

comment number: 19165137 
body: @sipa what sort of hardware problem would cause this? and surely if I had such a hardware problem wouldn't other applications crash and it'd be unlikely I'd have a system uptime of several weeks.
 

comment number: 19382376 
body: I've re-run bitcoin-qt 0.8.2 with the -par=1 option and after completely removing the database so that it downloaded the blockchain from the genesis block. This time it got stuck on 23rd March 2013, marking that as in invalid block. I've had enough of this, so I'm reverting back to 0.6.3 and will see how I go with that.
 

comment number: 19851366 
body: 0.6.3 is also having the same problem now. I've deleted the database and re-run the latest version:

SetBestChain: new best=000000000000022f951a82f1e2d8fe06378edd5cef926d39c09d44ac25c5e5d5  height=231305  log2_work=69.773668  tx=16119387  date=2013-04-14 12:15:08 progress=0.533195
init message: Loading addresses...
Loaded 14683 addresses from peers.dat  219ms
mapBlockIndex.size() = 231307
nBestHeight = 231305
setKeyPool.size() = 100
mapWallet.size() = 0
mapAddressBook.size() = 1
dnsseed thread start
upnp thread start
Loading addresses from DNS seeds (could take a while)
init message: Done loading
msghand thread start
addcon thread start
dumpaddr thread start
net thread start
opencon thread start
Added 19 addresses from x.x.x.x: 68 tried, 14618 new
refreshWallet
GetMyExternalIP() received [x.x.x.x] x.x.x.x:0
GetMyExternalIP() returned x.x.x.x
AddLocal(x.x.x.x:8333,4)
Flushed 14686 addresses to peers.dat  328ms
trying connection x.x.x.x:8333 lastseen=6.4hrs
UPnP: ExternalIPAddress = x.x.x.x
AddLocal(x.x.x.x:8333,3)
UPnP Port Mapping successful.
Added 24 addresses from 0:0:0:0:0:0:0:0: 68 tried, 14621 new
Added 12 addresses from 173.242.112.53: 68 tried, 14622 new
Added 10 addresses from 0:0:0:0:0:0:0:0: 68 tried, 14624 new
93 addresses found from DNS seeds
dnsseed thread exit
connection timeout
received block 000000000000015d0c5bc75517a586be19f3b4bd6f91fde4659127f96464f3af
InvalidChainFound: invalid block=000000000000015d0c5bc75517a586be19f3b4bd6f91fde4659127f96464f3af  height=231307  log2_work=69.773762  date=2013-04-14 12:55:06
InvalidChainFound:  current best=000000000000022f951a82f1e2d8fe06378edd5cef926d39c09d44ac25c5e5d5  height=231305  log2_work=69.773668  date=2013-04-14 12:15:08
ProcessBlock: ACCEPTED

It always seems to get stuck in March or April 2013, so there seems to be some significance here perhaps.

Can perhaps some facility be added so that it can re-check a block that fails just to see if it fails the same way a second time?
 

comment number: 20548864 
body: I am now running bitcoin-qt 0.8.3 on a different machine, and a different OS (ubuntu 64bit rather than Windows XP), and I am still seeing this problem. Am only I getting this?!
 

comment number: 20548923 
body: You did see my earlier post— right? :p  

No, people really aren't getting this. I would be _fascinated_ in knowing what is unusual in your configuration beyond you!
 

comment number: 21368520 
body: I had exactly this issue.  I tried running `bitcoind -daemon -reindex` more times than I can count.  I even tried deleting my whole `~/.bitcoin` directory twice.  Every time I got to about April 2013 and then the "InvalidChainFound" errors appear in `debug.log`.  From this point onwards, `bitcoind getinfo` shows the error:

> Warning: Displayed transactions may not be correct! You may need to upgrade, or other nodes may need to upgrade

I just wanted to confirm that adding `par=1` to `bitcoin.conf` _has fixed the problem for me_.

(I should add, though, that I'm running bitcoind 8.3 from Debian sid, which has had [some patches](http://sources.debian.net/src/bitcoin/0.8.3-1/debian/patches) applied to it.)
 

comment number: 21378396 
body: @edam Interesting. This is a case of database error that goes undetected likely, so incorrect data is read back at some point, which mismatches the chain spends.

I'd very much like to know whether it is consistently the same block that triggers it (and if so, which). Can you try to reproduce the problem again, and report the exact InvalidChainFound errors reported (in particular "InvalidChainFound:  current best=%s  height=%d  log2_work=%.8g  date=%s" lines)?

That would be very helpful.
 

comment number: 21379622 
body: @sipa: I don't think it was the same place, but I'll have to re-run it to find out.  I'll report back with some logfile text after a couple of failed attempts.
 

comment number: 21435623 
body: Here are the results of two separate runs, each taking approx. 6+ hrs before `InvalidChainFound` error messages started appearing in the logs.  The following is the first occurrence of those errors in the logs for each run...

First run:

```
SetBestChain: new best=000000000000012a2ebbc76eb1bcdeffceafbac248faaebd10c45a1400fabad6  height=225967  log2_work=69.549673  tx=14452116  date=2013-03-15 09:18:16 progress=0.280715
ERROR: CScriptCheck() : 406168d4647a3fc8c9b85d256efd88a7ce4506f8145e0cd2cc0951827e62dff8 VerifySignature failed
InvalidChainFound: invalid block=0000000000000299ca28abcc46ecc4bc3b8ea307d2a03a53def1ead1ba5af36e  height=225968  log2_work=69.549708  date=2013-03-15 09:29:04
InvalidChainFound:  current best=000000000000012a2ebbc76eb1bcdeffceafbac248faaebd10c45a1400fabad6  height=225967  log2_work=69.549673  date=2013-03-15 09:18:16
```

Second run:

```
received block 0000000000000223d53ab405d956434482daa9055e08ea7e425551a88969025d
SetBestChain: new best=0000000000000223d53ab405d956434482daa9055e08ea7e425551a88969025d  height=225902  log2_work=69.547411  tx=14428878  date=2013-03-14 23:49:37 progress=0.278031
ProcessBlock: ACCEPTED
received block 000000000000008b4bde87880e58fb9c4a633f571a327d5e69786db6a524eff0
ERROR: CScriptCheck() : 3fd9b0a92a72dfa7d733e6c78db957871eb8e31c3867e266800afcbe1ba6e5a0 VerifySignature failed
InvalidChainFound: invalid block=000000000000008b4bde87880e58fb9c4a633f571a327d5e69786db6a524eff0  height=225903  log2_work=69.547446  date=2013-03-15 00:04:37
InvalidChainFound:  current best=0000000000000223d53ab405d956434482daa9055e08ea7e425551a88969025d  height=225902  log2_work=69.547411  date=2013-03-14 23:49:37
```

So it looks like a different place, which tallies with what other people have said as well.

I don't know if it's relevant, but I thought I'd mention that there had been `InvalidChainFound` messages in the logs for a couple of hours when I came back to check on the first run this morning, and `bitcoind getinfo` _wasn't_ reporting an error.  It was only after I restarted it (via `bitcoind stop` and `bitcoind -daemon`), and then for a connection to register, that the "Warning: Displayed transactions [...]" error started showing up.  I seem to remember that this is what was happening before, as well.  But the transaction verification process was clearly stuck at progress=0.280715 regardless.  For the second run, `bitcoind getinfo` was reporting the error when I went back to check it.

I still have all the logs from both failed runs.  Is there any more info I can provide, or further tests I can run?
 

comment number: 21450986 
body: @edam To exclude the possibility that the Debian patches were the cause, could you try the same thing with the released bitcoind binaries on sourceforge?
 

comment number: 21518130 
body: @sipa: OK, built from `bitcoin-0.8.3-linux.tar.gz`, obtained from sourceforge (against DB5.1, as there is no `libdb4.8-dev` package in Debain unstable). I started getting `InvalidChainFound` in `debug.log` after about 5hrs.  First occurrence is shown below:

```
SetBestChain: new best=00000000000002e795c6ad77bd81d9599147eda74b54c96bd841716020b2d3df  height=226197  log2_work=69.557647  tx=14514594  date=2013-03-16 17:00:55 progress=0.284534
ProcessBlock: ACCEPTED
received block 0000000000000295b44d976591991b889faf5407c621c961a98132b6bd529f1b
ERROR: CScriptCheck() : 2328ffd25c0344ed8ed2b455a4bdfbf466326bbabcbbbe12b81502b76161a750 VerifySignature failed
InvalidChainFound: invalid block=0000000000000295b44d976591991b889faf5407c621c961a98132b6bd529f1b  height=226198  log2_work=69.557681  date=2013-03-16 17:11:15
InvalidChainFound:  current best=00000000000002e795c6ad77bd81d9599147eda74b54c96bd841716020b2d3df  height=226197  log2_work=69.557647  date=2013-03-16 17:00:55
```

So the three runs have failed at 14th, 15th and 16th April, 2013!  Strange that the points of failure are so close together.
 

comment number: 21518428 
body: @edam  Can you try running the binaries in that tar?  They are statically linked and will isolate out weirdness with your compiler and system libraries.

If you're concerned about the provenance of random binaries, they're built using a determinist build process which you can run yourself (needs an ubuntu VM, however).  They've also been built by several independent parties who have uploaded signatures here: https://github.com/bitcoin/gitian.sigs
 

comment number: 21573321 
body: @gmaxwell: thanks, I was concerned about that, yes (gitian's a clever idea, though!).  Anyway, I've run the pre-built binary now and I still get the same results:

```
SetBestChain: new best=000000000000019a6cd4b53febbe8c0521496c9cd1015b089fdcc1c78d920a77  height=228172  log2_work=69.628947  tx=15013716  date=2013-03-26 23:14:26 progress=0.332393
ProcessBlock: ACCEPTED
stored orphan tx 9b2ba43727008fa8af0c46c4c5389409beceb3fca52b8fd7485c0b6ad8f09443 (mapsz 6735)
received block 0000000000000121cb62f9ba2039908031c9ca324b9caf01f5efb6ff41bdc01d
ERROR: CScriptCheck() : 0e3d910bbc2c801ac59e350b681c85a83ad7aa44f328238d8b04d2eb7f17ec47 VerifySignature failed
InvalidChainFound: invalid block=0000000000000121cb62f9ba2039908031c9ca324b9caf01f5efb6ff41bdc01d  height=228173  log2_work=69.628993  date=2013-03-26 23:17:53
InvalidChainFound:  current best=000000000000019a6cd4b53febbe8c0521496c9cd1015b089fdcc1c78d920a77  height=228172  log2_work=69.628947  date=2013-03-26 23:14:26
```
 

comment number: 21573542 
body: Just to be clear; you restarted from scratch with the pre-built binary?

May I ask you to run memtest86 for a few hours on your system?
 

comment number: 21622639 
body: @sipa: that is correct.  I deleted (renamed, actually) `~/.bitcoin`, re-ran `bitcoind -daemon` using the pre-built binary in the tarball (and again, after setting the `rpcuser`/`rcppassword`), left it running for several hours and then checked `bitcoind getinfo` and the logs for errors.

The machine this is running on is well used and has not shown any memory- or cpu-like errors.  All the same, I ran memtest86+ for over an hour without error, just to be sure.  If it's something odd about my system that's causing this, it may be that I am using Debian sid/unstable (with a few packages from experimental).  So I wouldn't rule out the kernel or the few shared libraries that the pre-built binary uses from the system.  Should I try the pre-built binary on a live-CD of, say, Ubuntu 13.04 to see if it exhibits the same problems?
 

comment number: 22067376 
body: @edam  I'm running out of guesses, so yes— starting "something else" would be an interesting thing to test.

Thank you for being so helpful on this.
 

comment number: 22090602 
body: Memtest86+ can run for many hours before showing faulty RAM.
 

comment number: 22220134 
body: Exactly the same problem here.
Debian Squeeze amd64 using precompiled bitcoind 8.3 binary.

Yesterday, it randomly started to show (in getinfo):

> Warning: Displayed transactions may not be correct! You may need to upgrade, or other nodes may need to upgrade

Removed the whole .bitcoin folder, but during rebuilding, the above mentioned errors appeared in debug.log.

Currently trying with the par=1 option.

Edit: Worked with the par=1 option without a problem. Thanks!
 

comment number: 22255338 
body: @sipa Does this mean we may have a problem with the parallel verification code?
 

285. bug report number : ['2719']
comment number: 18723800 
body: while trying to fix my issue with installing 8.2 i noticed my 8.1 had been locked down and that while bitcoin was in its default location, the database and logs and such are in the user /C:\Users\XXXXXX\AppData\Roaming\Bitcoin
but i still have been unable to get 8.2 to work due to lock down of 8.1 and so far no answer on issue 2707 if i uninstall 8.1 if the database and wallet will be lost  or not ---but look in that location and i believe you will find what your looking for but that it may be locked down as well---

does anyone know why these files have been locked?
 

comment number: 18728788 
body: @jafoal 
i just found a fix for my issue by downloading the zip version of the 8.2 client upgrade and  it worked without any errors or issues and loaded with no problems. so if you installed using the exe version , try using the zip version.
Hope this helps you out.
 

comment number: 28298160 
body: Is this still an issue with 0.8.5?
 

286. bug report number : ['2706']
comment number: 18724664 
body: Fixed by #2716
 

287. bug report number : ['2704']
comment number: 18724207 
body: Uh oh, likely another shutdown order issue.
 

comment number: 19151198 
body: Looks like this is happening when you close the program with an encrypted wallet which remains unlocked.

The issue is reproducible.
 

comment number: 19151214 
body: Oh, and it also happens on v0.8.2-beta final.
 

comment number: 28300953 
body: There seems to be a few issues regarding wallet related pthread_mutex_lock( assertions, though not obvious duplicates: #2472, #2375, #1663
 

comment number: 32619298 
body: Should be solved in master, as we use boost::asio deadline timers to keep track of re-locking the wallet.
Also tested this and it works fine.
 

288. bug report number : ['2701']
comment number: 18632125 
body: It seems you're missing the necessary database/ subdir for this wallet. Recover using -salvagewallet.
 

comment number: 18633545 
body: I suppose Bitcoin should more gracefully handle this failure instead of being told this cyptic message.
 

comment number: 18633692 
body: Agree, except BDB is so arcane that I don't think we have a way to know what the actual problem is (except for trying to parse db.log itself).

A generic "Your wallet failed to open, want to try salvaging now?" would be nice, though. Then again, I really hope to get rid of BDB entirely soon anyway.
 

289. bug report number : ['2691']
comment number: 18396224 
body: I use Ubuntu exclusively (both 12.04 and 13.04), and I've never noticed this. Then again, I compile from source.

Is this with the precompiled / statically linked version?

This must be an issue with appmenu-qt, ie the Qt plugin that exports the menu to Ubuntu the tray. 
 

comment number: 18397355 
body: See also #1242 

This is a long-running issue without a clear cause or solution... Some people even switched to GNOME in frustration :)
 

comment number: 18398566 
body: I'm not sure at the moment if this is also with the precompiled version from the PPA (I use both). I'll keep an eye on this.

It appears randomly at about 10% of app starts (very rough guess). Normally its not that much of a bother because all you need to do is quit and start bitcoin-qt again. But yesterday I had it twice in a row so I thought it might be worth to report this.
 

comment number: 18946261 
body: I have this problem on Ubuntu 12.10. When I first log in to Unity, then start bitcoin up, the systray icon is gone. However, once the application appears, I can close it and restart it. The systray icon starts working.

The Qt4 systray feature places an icon in the /tmp folder. It's quite possible that the first time it runs, the icon isn't placed properly. I have played around with the QSystrayIcon class before and if your image isn't the right size (16x16), the icon just won't appear. The next time I restart, I'll test this theory and check to see if the icon is there or not.

For example, on my current run, the systray icon is here on my system:
/tmp/sni-qt_bitcoin-qt_3492-oWuoa7/icons/hicolor/16x16/apps/bitcoin-qt_3492_9a114a7b8a7f55c82a4ec988525f9be5.png
 

comment number: 18947211 
body: By the way, this exact issue happens for me when I compile the litecoin gui from the git archive. Restart it, and the systray icon magically appears...
 

comment number: 19026652 
body: 16x16? Isn't the default height of the tray 22, or 24?
Did you change the tray size from the default?
If so, that in combination with the issue that you mention can explain why it happens to some people and not others.

This seems an upstream QSystrayIcon issue (at least the Unity plugin)... we can hardly account for all possible tray sizes and give a custom-sized icon (maybe we could somehow pre-resize it after quering?...) :-/
 

comment number: 19138356 
body: I first thought the tray icon didn't appear at all, then I noticed:

![wtf](https://f.cloud.github.com/assets/126646/626683/9eba5cae-cfc9-11e2-8aad-d1d0ba47088f.png)

Despite the strange position, the icon is fully functional... :confused: This started happening for me today on my laptop (ubuntu 13.04). Don't know what triggered it, a week ago when I just upgraded my Ubuntu I think it was fine. There's no way bitcoin is doing this, we don't manually position the tray icon.
 

comment number: 31721042 
body: duplicate of #1242
 

290. bug report number : ['2667']
291. bug report number : ['2664']
comment number: 18083176 
body: Repeated and error is reproduced this time after block 3572 is processed. Odd.
 

comment number: 18093572 
body: Are you running 0.8.1 or 0.8.2rc1?
 

comment number: 18097269 
body: Bitcoin 0.8.2 BETA

from doc/README
 

comment number: 18097985 
body: Ok, repeated differently and problem avoided thus far. I was redirecting datadir to an external drive.
 

comment number: 18122729 
body: I am also seeing this issue on Arch with package "bitcoin-daemon-0.8.1-2". I also have the data files on an external drive, accessed through encfs. Could that have something to do with it?
 

comment number: 18122755 
body: Sounds likely, beyond my pay-grade though. I guess as it's a niche issue it won't be high on anyone's list.
 

comment number: 18122793 
body: Well, if it helps, I've seen this crash several times (I'm not sure whether it's the same block each time, this time the best height is 155152), and then when I re-run bitcoind I see:

Opened LevelDB successfully
LoadBlockIndex(): last block file = 5
LoadBlockIndex(): last block file: CBlockFileInfo(blocks=6722, size=120930866, heights=149037..155758, time=2011-10-12..2011-12-02)
LoadBlockIndex(): transaction index disabled
LoadBlockIndex(): hashBestChain=0000000000000c32151b017099b3e20899f6be3ec964731a28a30f6c4f16dad3  height=155152 date=2011-11-29 00:06:17
init message: Verifying block database integrity...
Verifying last 288 blocks at level 3
LevelDB read failure: Corruption: block checksum mismatch
: Error opening block database.
Do you want to rebuild the block database now?
Flush(false)
DBFlush(false) ended               1ms
StopNode()

Each time I've just nuked the directory and tried again.

@kerzane Did you get it working by using a different drive?
 

comment number: 18122826 
body: Yeah I just ran it on my internal drive and downloaded a few 100MB of the blockchain for experimenting with.
 

comment number: 18122907 
body: Bleck. I'm running it on a Raspberry Pi, so I don't exactly have an internal hard drive. 

Do you know what version this much-cited "file descriptors" fix is in? 
 

comment number: 18122944 
body: Hm, planning to run on a pi soon, so my sympathy is raised again, :).

Not heard of the file descriptors fix I'm afraid.
 

comment number: 18123048 
body: https://github.com/bitcoin/bitcoin/search?q=%22file+descriptors%22&type=Issues

@gavinandresen Care to comment?
 

comment number: 18132407 
body: @kerzane @hjfreyer There are file descriptor fixes in 0.8.2

See issues #2517 #2522 
and pulls #2557 #2568 #2569 
 

comment number: 18154300 
body: <pre>
: Error opening block database.
Do you want to rebuild the block database now?
</pre>

@hjfreyer A -reindex will perhaps sort these issues out for you, can you give it a try?
 

comment number: 18158382 
body: @Diapolo I did reindex, and I also moved the block chain out of encfs (because why change one variable at a time when you can change two!). Regardless, I haven't seen the error again yet. 
 

comment number: 19949231 
body: I've just seen this issue. Running 0.8.2-beta on osx 10.8.4

Had a corrupted chain state, choose to abort the reindex. On the next startup Bitcoin-Qt crashes, and continues to crash on subsequent startups.

Apple Crashlog  - https://gist.github.com/fanquake/5855409

Bitcoin Debug Log - https://gist.github.com/fanquake/5855417
 

comment number: 28299451 
body: Is this still an issue with 0.8.5?
 

comment number: 28685713 
body: Yes, it is. Unfortunately.
 

comment number: 31189231 
body: My bitcoin server 0.8.5 has just crashed with that error:

```
Assertion failed: (internal_key.size() >= 8), function ExtractUserKey, file ./db                                           /dbformat.h, line 96
```

Disk space and RAM are okay.  Still happens on 0.8.6
 

comment number: 34036350 
body: +1 Happening to me on 0.8.6 on Linux Mint 14 x64.

```
bitcoind: ./db/dbformat.h:99: leveldb::Slice leveldb::ExtractUserKey(const leveldb::Slice&): Assertion `internal_key.size() >= 8' failed.
```
 

comment number: 52413177 
body: The solution to this problem (a single instance of it) is reindexing
(starting on the command line with `bitcoin-qt -reindex`). However, that
does not prevent the database corruption to reoccur later.
 

292. bug report number : ['2646']
comment number: 17782155 
body: bad_alloc sounds like out-of-memory - are you running very close to the amount of memory available on your system?

The "inputs already spent" error is probably the wrong message, and should "inputs not found", since it may be just due to not knowing any of the inputs, no DoS logic is triggered.
 

comment number: 17803191 
body: Memory can't be the issue there because I used to run Armory (very memory hungry) beside Bitcoin-Qt and never got "memory low" or some similar warning. Crashes happen on random, so far I haven't found any procedure to replicate them on will. It is like a lottery for me, client sometimes runs for 24+ hours without any issue but then starts acting strange for next few runs, eventualy crashing with some MS Visual C++ error returned. Bitcoin-Qt itself uses 8 - 128 MB on average depending on the task and datadir is located on the partition that has 25+ GB free space at all times.

Note that node spamming orphan stuff, address adds and spent inputs (or whatever it is) reported 0 blocks upon connect:

2013-05-12 14:46:36 receive version message: version 70001, blocks=0, us=95.178.183.119:12954, them=85.17.239.32:8333, peer=85.17.239.32:8333

Full debug log for second run: http://www.filedropper.com/debug2 in line 100

Intentional misbehaviour?
 

comment number: 17806291 
body: Well `bad_alloc` is indeed memory related, it's an `Exception thrown on failure allocating memory`, see http://www.cplusplus.com/reference/new/bad_alloc. The problem here is, where does it come from... how many nodes were connected and what is your exact command-line (if any)?

@sipa Take a look, seems to happen in ProcessMessages()

<pre>
2013-05-12 15:01:41 Committing 4247 changed transactions to coin database...
2013-05-12 15:01:41 
************************
EXCEPTION: St9bad_alloc       
std::bad_alloc       
C:\Program Files\Bitcoin\bitcoin-qt.exe in ProcessMessages()       
2013-05-12 15:01:41 ProcessMessage(block, 451118 bytes) FAILED
</pre>
 

comment number: 17818726 
body: -datadir=E:\BitcoinData added to shortcut used to run Bitcoin-Qt, bitcoin.conf contains the following lines:

keypool=1000
maxconnections=16
banscore=20
logtimestamps=1

I'm increasing or decreasing maxconnections based on if I'm in a need for upload bandwidth or not but it does not seem to affect the occurence of crashes. The same goes for keypool, I used to have it on default earlier and client was still crashing. I have reduced and increased swap file size, added it to all other partitions besides system one (C:) and even shuffled physical RAM DIMMs (4x 512MB, Dual channel enabled) but situation stayed the same.

There is also this bad_alloc in http://www.filedropper.com/debug3

---

EXCEPTION: St9bad_alloc
std::bad_alloc
C:\Program Files\Bitcoin\bitcoin-qt.exe in ThreadDumpAddress()

Bitcoin-Qt and all other cryptocoin clients are attempting to access all processes running on a computer regulary every 15 minutes or so which is not usual Win applications behaviour so I disabled process memory injection for all of them on firewall. Could it be that is the cause of problems? If yes, why other clients never crashed and what exactly Bitcoin-Qt gains by messing with memory of let's say firefox.exe or notepad.exe?
 

comment number: 17826520 
body: Are you sure you are using 0.8.2 RC1? AFAIK there is no `ThreadDumpAddress()` anymore in the client...
 

comment number: 17930490 
body: Error with ThreadDumpAddress() occured with 0.8.1which I used after deinstalling 0.8.2rc1
 

comment number: 18062393 
body: Node on 85.17.239.32 which was and is still spamming my node with crap is using some weird Bitcoin client:

{
"addr" : "85.17.239.32:8333",
"services" : "00000000",
"lastsend" : 1368798401,
"lastrecv" : 1368798405,
"conntime" : 1368792822,
"version" : 70001,
"subver" : "/Bitpeer:0.2.3/", <--- ???
"inbound" : false,
"releasetime" : 0,
"startingheight" : 0,
"banscore" : 0
}

IP blacklisted on firewall, for now.
 

293. bug report number : ['2639']
comment number: 17762402 
body: Another transaction where this happens is the example transaction [here](http://bitcoin.stackexchange.com/questions/3374/how-to-redeem-a-basic-tx). I get this error even if I include the private key and previous transaction id:

``` sh
curl --user USERNAME --data-binary '{"id":"t0", "method": "signrawtransaction", "params": [
"0100000001eccf7e3034189b851985d871f91384b8ee357cd47c3024736e5676eb2debb3f2010000001976a914010966776006953d5567439e5e39f86a0d273bee88acffffffff01605af405000000001976a914097072524438d003d23a2f23edb65aae1bb3e46988ac0000000001000000", 
["f2b3eb2deb76566e7324307cd47c35eeb88413f971d88519859b1834307ecfec"], 
["2g82vgrZTviKG5sN1g2VM7FHgHTm16ej4gmr8ECMzab6"]
]}' http://127.0.0.1:8332/
```

Again, `decoderawtransaction` has no issues with this transaction.
 

comment number: 17764966 
body: I added this code to decoderawtransaction:

```
if (!ssData.empty()) {
     fprintf(stderr, "Extra data in ssData: %s\n",
            HexStr(ssData.begin(), ssData.end()).c_str());
}
```

... and get:
Extra data in ssData: 01000000

Instead of ignoring extra bytes, decoderawtransaction should at the very least warn about them.
 

comment number: 17766371 
body: Legend! That's extremely helpful. Now I'm able to sign my own transaction. The sample transaction results in an "invalid private key" message, but I can live with that.

I'm a bit puzzled about why these last 4 bytes aren't allowed. Is [step 13 in this tutorial](http://bitcoin.stackexchange.com/questions/3374/how-to-redeem-a-basic-tx) wrong? Or does the QT client add them automatically before it signs the transaction?
 

comment number: 17766537 
body: Don't know why that tutorial says to add a hash code to the transaction, I think it is wrong (but their python code is correct).  See https://en.bitcoin.it/wiki/Transaction for the format.
 

comment number: 17768152 
body: Not the final transaction, but the intermediate form that is signed. I'm afraid I'll have to dive in the client C code to figure out what exactly is going on. My goal is to do the signing in ruby:

https://bitcointalk.org/index.php?topic=202271.0
 

comment number: 17774795 
body: @Sjors I think you're confusing the transaction itself with its intermediate form used for signing. Among many other modifications, the hashtype is indeed appended to a transaction before computing the hash being signed, but this hashtype field is not part of the transaction itself. There are other modifications made, like clearing the other inputs of a transaction, and replacing the input script being signed with the output script being redeemed.

Just to be clear, sendrawtransaction/createrawtransaction/... take transactions. The modifications made to compute the hash being signed are done on-the-fly when necessary (they are different for the different inputs, for example, so you can't provide a single intermediate form anyway).
 

294. bug report number : ['2631']
comment number: 17621229 
body: Looks like a LevelDB error I've never seen before... are you overclocking your system? Did you perhaps mine while using the client?
 

comment number: 19030709 
body: I experienced the same error. And I'm running the Bitcoin and the Litecoin client side by side... Maybe it's related to that...
 

comment number: 19033129 
body: Same as #2533
 

comment number: 27201016 
body: @kartcl14 Can you try starting your client with -reindex added once, so it can rebuild the block-database. If this issue is solved or didn't occur again, please close this ticket.
 

comment number: 33356227 
body: @kartcl14 Anything to add, any news?
 

comment number: 36681727 
body: I have the latest version: 0.8.6, and I'm still getting this error. So clearly it has _not_ been fixed. I've attached a screencap of the error I got today. I'm running Windows 7 Pro SP1, with 32GB of RAM. If anyone knows how to fix this on the client end, can they please include step-by-step instructions?
![bitcoin-qt-error-message](https://f.cloud.github.com/assets/6855349/2326674/de510016-a3e5-11e3-80ce-f26cb3c4192a.jpg)
 

comment number: 37515658 
body: Try running with -reindex command line argument. That should fix the corruption.
 

295. bug report number : ['2608']
comment number: 17355045 
body: Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/b357a71cfaf99dd2e7d203a12edfcc5df4a93386 for binaries and test log.
This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please check timestamps to verify that the test.log is moving at http://jenkins.bluematt.me/pull-tester/current/
Contact BlueMatt on freenode if something looks broken.
 

comment number: 17355863 
body: ACK, fixes the issue.
 

comment number: 17357480 
body: Looks good, but didn't test.
 

comment number: 17379707 
body: ACK
 

296. bug report number : ['2605']
comment number: 17349416 
body: Just had a look at it.
The problem might be the "cachedPath".
Before loading the configfile, the original path will be cached and not rewritten by the value defined in the config file.
So it will somehow need a "clear path cache" after loading the config.

I try to implement something...

But why this bug is not affecting bitcoind? The bug seams to be in util.cpp?
 

comment number: 17364178 
body: Couldn't that be considered a wanted behaviour if you explicitly specify a -datadir when using testnet? Forget it, seems more reasonable to fix this ;).
 

comment number: 17366699 
body: @Diapolo : no
 

comment number: 17366784 
body: @Diapolo  In the case of it being "wanted" the correct behavior is at least harmless, in the case where it's not wanted the incorrect (current) behavior is dangerous.  So even admitting that sometimes people might want it, the less risky behavior is the one we want.
 

297. bug report number : ['2597']
comment number: 17421128 
body: Should be fixed by #2599 
 

298. bug report number : ['2594']
comment number: 17560563 
body: Hmm strange, this happens in GetNextWorkRequired, while scanning for the last 14 days of blocks (for retargetting the difficulty). 

https://github.com/bitcoin/bitcoin/blob/master/src/main.cpp#L1145

You haven't enabled the internal miner by accident (-gen)?
 

comment number: 17568951 
body: Duplicate of #2547
 

comment number: 17569030 
body: Perhaps related to IBD then?
 

comment number: 17774905 
body: Closing as duplicate of #2547 
 

comment number: 17774913 
body: Did you ever play with testnet before?
 

299. bug report number : ['2593']
300. bug report number : ['2570']
comment number: 17049313 
body: I think that's always been an artifact.  I bet reorg behaves the same way.
 

comment number: 17067694 
body: It has always been the case, until 0.8 (see 231b39995). If it still happens, there is a bug.
 

comment number: 17070316 
body: @gavinandresen Why do you assume it's caused by the wallet code? (not saying you're wrong, just wondering whether some information is missing here)
 

comment number: 17082812 
body: I think it is the wallet code because it happens immediately after a fresh, clean start, so I assume an unconfirmed transaction in the wallet is getting added to the memory pool (it isn't a weird edge case during re-orgs or something).

Let me know if you have debugging bandwidth, I'll send you the wallet.
 

comment number: 19861893 
body: I'm running Bitcoin-Qt version v0.8.2.2-g09e437b-beta

Not sure if this has been fixed in the latest release, but this happened to me.  It was just running in the background, scrolling debug messages in a window, when it crashed, with this error:

```
sending: inv (37 bytes)
received: inv (37 bytes)
  got inventory: tx c140253a4aeab6e4db5bdbd6c0a1d7d240490c241d86d01a819d5c9f16eb22fd  have
received: inv (37 bytes)
  got inventory: tx c140253a4aeab6e4db5bdbd6c0a1d7d240490c241d86d01a819d5c9f16eb22fd  have
sending: inv (397 bytes)
ERROR: mempool transaction missing input
bitcoin-qt: src/main.cpp:4241: CBlockTemplate* CreateNewBlock(CReserveKey&): Assertion `"mempool transaction missing input" == 0' failed.
```

I then restarted Bitcoin manually, and all seemed well.
 

comment number: 19862942 
body: Should be fixed in head by #2769.
 

301. bug report number : ['2550']
comment number: 16841779 
body: Can you upload the debug.log somewhere? There may be more info in there.

On first look it looks like a leveldb issue, it is calling abort.

```
Thread 7 Crashed:
0   libsystem_kernel.dylib          0x00007fff807c1212 __pthread_kill + 10
1   libsystem_c.dylib               0x00007fff8b216b54 pthread_kill + 90
2   libsystem_c.dylib               0x00007fff8b25adce abort + 143
3   libsystem_c.dylib               0x00007fff8b25be2a __assert_rtn + 146
4   org.bitcoinfoundation.Bitcoin-Qt    0x0000000100227158 leveldb::InternalKeyComparator::Compare(leveldb::Slice const&, leveldb::Slice const&) const + 218
5   org.bitcoinfoundation.Bitcoin-Qt    0x0000000100239096 leveldb::(anonymous namespace)::MergingIterator::FindSmallest() + 152
6   org.bitcoinfoundation.Bitcoin-Qt    0x00000001002393f6 leveldb::(anonymous namespace)::MergingIterator::Next() + 264
```
 

comment number: 16850284 
body: Your right, I deleted the local blockchain and bitcoin-qt worked again - but I switched to a different client because of the frist randomly appearing bug with sending transactions.
The debug.log shows nothing out of the ordinary, I'm not uploading it, because of all my transaction-ids in it and the fuzz to remove them all.
 

comment number: 16850819 
body: There is really nothing we can do to help debugging if you don't trust us
with the debug.log output (you could send it privately or encrypted if you
want)

Good that removing the block chain solved it. These leveldb corruptions on
OSX are strange. Maybe it has something with the file descriptor issue.
 

comment number: 16851260 
body: You got mail
 

comment number: 16884018 
body: @laanwj Anything useful?
 

comment number: 17387302 
body: I could not reproduce this bug. Must be a special configuration.

Problems reaches surface at:
`Assertion failed: (internal_key.size() >= 8), function ExtractUserKey, file ./db/dbformat.h, line 96.`
 

comment number: 17415522 
body: I found no error messages or strange things in the debug.log he sent.

@jonasschnelli  where do you get/see that assertion?
 

comment number: 17428736 
body: @laanwj crashlogs line 19.
 

comment number: 17567574 
body: Duplicate; hopefully fixed by the "don't use too many file descriptors" fix.
 

302. bug report number : ['2547']
comment number: 16892141 
body: Are you mining?

EDIT: I mean solo-mining (or p2pool), against Bitcoin-qt?
 

comment number: 16915970 
body: Nope, not against my local bitcoin-qt -- a different machine is mining against a pool, local client just receives the resulting bitcoins (they appear as "mined" transactions since Eligius does it that way).
 

comment number: 16917054 
body: For the record: @gmaxwell noticed yesterday that this can only be cause by the retargetting code. That should narrow down the problem a lot.
 

comment number: 16937149 
body: Would retargeting code only run on an instance of Bitcoin intended for mining?

In that case, I have to clarify: I have in the past, used this Bitcoin instance for mining too, and now that I checked, as a historic leftover, "rpcuser" and "rpcpassword" are still set in "bitcoin.conf".
 

comment number: 16937261 
body: Sorry for the confusion. It is unrelated to mining - I asked that question before it was discovered that this assertion failure is caused by the retargetting code. I just added it here so we don't forget.
 

comment number: 16937338 
body: However, to further clarify, I am not starting it with a "-server" command line option, so anything that results from that code path, should be excluded.
 

comment number: 16937441 
body: Aha, thanks. If you have any additional questions, just ask. I'll check back about once a day, even if the problem is not disturbing my activities in any manner.
 

comment number: 17277189 
body: @sipa any workaround/fix regarding this problem? I too have this issue for more than 2 weeks now.
![assertion_failed](https://f.cloud.github.com/assets/4311082/448597/8b3c34ae-b250-11e2-8589-350820a68082.jpg)
 

comment number: 17327323 
body: The part of the code which triggers your problem is (in GetNextWorkRequired()):

<pre>
    // Go back by what we want to be 14 days worth of blocks
    const CBlockIndex* pindexFirst = pindexLast;
    for (int i = 0; pindexFirst && i < nInterval-1; i++)
        pindexFirst = pindexFirst->pprev;
    assert(pindexFirst);
</pre>

But this needs to be looked at by a core dev...
 

comment number: 17428252 
body: @gavinandresen 

Can you please take a look the problem stated by @Diapolo above?

thanks
 

comment number: 17567542 
body: Duplicate; hopefully fixed by the "don't use too many file descriptors" fix.
 

comment number: 17567742 
body: @gavinandresen That's very unlikely on Windows. 
 

comment number: 17639696 
body: @bitcoinstarter You have this problem for more than two weeks now. Does that mean that you fix it, and it re-appears, or after it happened the first time, it just doesn't go away?
 

comment number: 17681430 
body: @sipa @gavinandresen Im still having issues. The problem still persist and I cannot finish synchronizing because of the issue. Below is the latest screenshot of my wallet showing the error.

![still problem](https://f.cloud.github.com/assets/4311082/484383/1ce6b654-b8d7-11e2-9255-d2a0b58406d7.jpg)
 

comment number: 17681844 
body: @sipa  @gavinandresen no matter what button I choose from the error above, bitcoin-qt.exe has stopped working. This is my problem since I started downloading the client for more than 2 weeks now and I keep having this problem no matter how many times I have re-download the client whether I using the install version or the zip version. same issues.

![not responding](https://f.cloud.github.com/assets/4311082/484413/d35aa2b0-b8d7-11e2-8f5e-6420ebcb79c9.jpg)

btw, I using windows 7 Ultimate with 4GB RAM  (just for reference).
 

comment number: 17691149 
body: Is this an error that appears immediately at startup, every time? If so, start with -reindex on the command line, once. That will rebuild the database from scratch.
 

comment number: 17704903 
body: @sipa Yes, that is an error after I fire up the exe. the error appears after a few minutes of initialization.

btw, how do I start wit -reindex on the command line?

Is there a command line version for the wallet? or are you referring to the Windows CMD prompt?
 

comment number: 17705051 
body: @sipa Ok I think youre referring to the Windows CMD prompt so Im giving it a shot. Hope it works and will let you know :)

![reindex](https://f.cloud.github.com/assets/4311082/486704/bc39f3f0-b932-11e2-8744-8aa37178cb38.jpg)
 

comment number: 17774918 
body: Did you ever play with testnet before?
 

comment number: 32602049 
body: User hasn't reported back after 8 months, likely the -reindex solved the problem.
 

comment number: 252984854 
body: -reindex worked for me!
 

303. bug report number : ['2544']
comment number: 181920235 
body: Closing this as it is a specific, unreproducable case of a corrupted wallet.
 

304. bug report number : ['2543']
comment number: 17570484 
body: @jonasschnelli Can you take a look, if this is graphics related perhaps?
 

comment number: 17601551 
body: okay. Let me install XFCE on my ubuntu vm to analyze this issue...
 

comment number: 17602840 
body: @nextgenthemes i do not have XFCE experience. How do i add bitcoin to the app menu? How did you install bitcoin (assume apt-get)?
 

comment number: 17642992 
body: I confirm nextgenthemes's observations. I'm running Xfce 4.10 under Xubuntu Raring 13.04 (amd64).
 

comment number: 17656720 
body: @jonasschnelli as I said right at the first line of this issue.

> Running Xubuntu 12.10 and current stable bitcoin from ppa:bincoin/bitcoin

so yes with apt-get install. It adds itself to the menu so I did nothing manually.

This has to be something about the .xpm file and how they are created. I have no idea about this format but I try to look into this when I have time. Pretty busy atm. Maybe someone else is faster or has already knowledge about this format.
 

comment number: 17656884 
body: @nextgenthemes sorry for overlooking your first line. Okay. I try to reproduce it with Xubuntu 12.10. 
 

comment number: 17657958 
body: found the issue. will solve it soon and also use the new icon style.
 

comment number: 17796828 
body: fix before a new .deb release:
- `curl https://raw.github.com/jonasschnelli/bitcoin/new_xpm_icons/share/pixmaps/bitcoin128.png > /usr/share/pixmaps/bitcoin128.png`
- open "Settings Manager"->"Main Menu"->"Office"
- open "Bitcoin" Properties
- click on "Icon" and select the new bitcoin128.png file.
 

comment number: 17797057 
body: Thanks Jonas. That was kind.
 

comment number: 26985235 
body: Closing as #2650 is merged
 

305. bug report number : ['2542']
comment number: 16715083 
body: #1382 fixes this issue... but never got merged.
 

comment number: 16715119 
body: @rebroad It does not fix the issue, it breaks the network.
 

comment number: 16725849 
body: I also used the : listen=0  setting, and I'm up to blocks 139 days old now, 21k+ blocks to go.

Yesterday I tried upping to maxconnections=2, but it didn't take long for duplicates to show up.

So far with maxconnections=1, I've only noticed 2 duplicate blocks error messages
(yesterday before I tried maxconnections=2)
 

comment number: 16733486 
body: @gmaxwell How does it break the network? And how does it not fix the issue? Certainly, from my testing (11 months of testing now against the latest bitcoin master) it doesn't break the network and does fix the issue.
 

comment number: 16884682 
body: @rebroad I hope it won't break the network if you're the only one running it! I don't know whether it fixes the issue (and will not claim it doesn't), but killing connections because nodes do what you ask them is not the correct way to deal with the issue.
 

comment number: 17118529 
body: @sipa I agree it's not the ideal way, but it's a start. The ideal solution is to change the protocol so that a node can abort a block download without aborting the connection, but as this isn't currently part of the protocol, the only way it can currently be done is by aborting the connection.
 

comment number: 17118748 
body: @rebroad No offence, but it's not. Of course you can cancel a block sync without aborting the connection: just stop asking for blocks. Or even better, don't ask for the same block twice to begin with. That's the only correct solution. As I (and others) have told you many times before: killing a connection because the peer does what you asked is not going to happen.
 

comment number: 19143855 
body: @sipa - what you talk about is indeed a better solution, but since no one seems interested in making those changes, then i still argue that my fix is better than doing nothing - and will benefit the network too IMHO as current much traffic is wasted on nodes sending and receiving duplicate blocks. I'm not aware that my patch can be exploited to cause any network splits - which would be a good reason for not implementing it.
 

306. bug report number : ['2484']
comment number: 16017600 
body: That is another weird problem I can't reproduce! Are you sure your PC is not infected by some malware?
Focus on the send coins page is the address input field, which is fine IMHO (you can paste via ctrl+v if you have an address in the clipboard there anyway).
 

comment number: 16018018 
body: ...I think nope but i'm going to scan the whole system with Norton since you said so... Are you using 0.8.1 beta and did you enable snap to option in control panel?
 

comment number: 16018039 
body: http://puu.sh/2vFJZ
 

comment number: 16034439 
body: I never used that "snap to default button" option, but now it is possible to debug your problem :).
 

comment number: 16041413 
body: :)
 

comment number: 16048977 
body: Okay, I tried that option and can confirm that the official 0.8.1 version is behaving like you described. Clicking send leads my mouse to the send button and clicking overview moves the mouse to where that button was in the send coins page. This can be related to our used Qt version (4.8.3 with the 0.8.1 client), as my own local build (using Qt 5.0.1) doesn't suffer from this.

I suggest to just disable that mouse option ;).
 

comment number: 16054218 
body: Kthx :). BTW 
22:39:13: Running steps for project bitcoin-qt...
22:39:13: Configuration unchanged, skipping qmake step.
22:39:13: Starting: "F:\Program Files (x86)\CodeBlocks\MinGW\bin\mingw32-make.exe" 
F:/Program Files (x86)/CodeBlocks/MinGW/bin/mingw32-make -f Makefile.Debug
mingw32-make[1]: Entering directory `E:/QtProj/bitcoin-qt-build-Desktop_Qt_5_0_1_MinGW_32bit-Debug'
cd E:/QtProj/bitcoin-master/src/leveldb && CC=gcc CXX=g++ TARGET_OS=OS_WINDOWS_CROSSCOMPILE F:/Program Files (x86)/CodeBlocks/MinGW/bin/mingw32-make OPT="-pipe -fno-keep-inline-dllexport -D_FORTIFY_SOURCE=2 -O2" libleveldb.a libmemenv.a && ranlib E:/QtProj/bitcoin-master/src/leveldb/libleveldb.a && ranlib E:/QtProj/bitcoin-master/src/leveldb/libmemenv.a
'CC' is not recognized as an internal or external command,
operable program or batch file.
Why is Qt creator getting that error? (Like it tried to run CC which I guess is a parameter)
 

comment number: 16054267 
body: Oh and Qt Creator freezes after I copied that and came to Google Chrome. Weird.
 

comment number: 16054593 
body: http://puu.sh/2wgIq but it is not responding to my clicks on the icon on taskbar!
 

comment number: 16055027 
body: I didn't force close it. Then after I generated a new receiving address in bitcoin qt and copy that address, bitcoin qt stopped working. The Qt creator came back to life.
 

comment number: 16852233 
body: Sorry, how do I build bitcoin-qt inside windows with qt creator 5.02 MinGW? I always get the error of leveldb.a error1
 

307. bug report number : ['2480']
comment number: 16451754 
body: This is your fix. You can't trail like that in Boost(yet): http://stackoverflow.com/questions/11505811/creating-a-separate-boost-thread-for-endpoint-listen-in-a-multithreaded-progra

Sorry i'm not at my workstation to test but I have had that issue before and those directions fixed it
 

comment number: 17029511 
body: There are two issues here. The first is the reported problem (-salvagewallet not working with encrypted wallets due the the keypool initialization failing, see #2566 for a fix). The other seems a problem with exceptional exits in combination with Gavin's thread rewrite in Bitcoin-Qt.
 

comment number: 17347657 
body: I'm testing a fix for the second issue; it is being caused by destructors being called after main() exits.
 

comment number: 17420053 
body: Can confirm that this is solved by #2566
 

comment number: 17515639 
body: Sipa, you have 0.010945 BTC waiting for you on bitcoinbounties.com. Please login with your Github account and provide a payout Bitcoin address so we can send it to you.

Thanks! :-)
 

comment number: 17516621 
body: @ryepdx Great, but the "Complete registration" button after entering my address doesn't really seem to do anything...
 

comment number: 17518226 
body: Hmm, okay. What browser are you in? Can you email me at (redacted)? I don't want to spam up this issue page.

EDIT: Looks like Github started requiring a User-Agent string in their API calls. Updated the Github API library I was using and everything seems to be working now. How does it look on your end?
 

comment number: 349950908 
body: How can you open a *.bak file created by --salvagewallet? 
 

308. bug report number : ['2472']
comment number: 15999263 
body: I get a temporal workaround.

Running:

```
strace -eopen bitcoin-qt
```

I see that the las file corrupted was blk00004.dat:

```
open("/home/myuser/.bitcoin/wallet.dat", O_RDONLY|O_LARGEFILE) = 153
open("/home/myuser/.bitcoin/wallet.dat", O_RDONLY|O_CREAT|O_LARGEFILE, 0) = 153
open("/home/myuser/.bitcoin/wallet.dat", O_RDWR|O_CREAT|O_LARGEFILE, 0) = 153
open("/home/myuser/.bitcoin/database/log.0000001337", O_RDWR|O_LARGEFILE) = 154
open("/home/myuser/.bitcoin/database/log.0000001337", O_RDONLY|O_LARGEFILE) = 155
open("/home/myuser/.bitcoin/database/log.0000001337", O_RDONLY|O_LARGEFILE) = 155
open("/home/myuser/.bitcoin/blocks/blk00004.dat", O_RDWR|O_LARGEFILE) = 155
open("/home/myuser/.bitcoin/blocks/blk00004.dat", O_RDWR|O_LARGEFILE) = 143
open("/home/myuser/.bitcoin/blocks/blk00004.dat", O_RDWR|O_LARGEFILE) = 143
open("/home/myuser/.bitcoin/blocks/blk00004.dat", O_RDWR|O_LARGEFILE) = 143
open("/home/myuser/.bitcoin/blocks/blk00004.dat", O_RDWR|O_LARGEFILE) = 143
open("/home/myuser/.bitcoin/blocks/blk00004.dat", O_RDWR|O_LARGEFILE) = 143
open("/home/myuser/.bitcoin/blocks/blk00004.dat", O_RDWR|O_LARGEFILE) = 143
open("/home/myuser/.bitcoin/blocks/blk00004.dat", O_RDWR|O_LARGEFILE) = 143
open("/home/myuser/.bitcoin/blocks/blk00004.dat", O_RDWR|O_LARGEFILE) = 143
open("/home/myuser/.bitcoin/blocks/blk00004.dat", O_RDWR|O_LARGEFILE) = 143
```

So I move the file:

```
mv ~/.bitcoin/blocks/blk00004.dat ~/blk00004.dat-backup
```

and start again bitcoin-qt and it did a reindex. After wait a couple of hours, it works again. But the bug probably could happen again.
 

309. bug report number : ['2471']
comment number: 15994111 
body: Perhaps we should not allow the internal miner, while running reindex, import (and IBD?).
 

comment number: 16013157 
body: @sipa @gavinandresen Can you take a look at this?
 

comment number: 16169613 
body: @jgarzik Perhaps you can take a look or try to reproduce, as I know you are using the internal-miner :).
 

comment number: 56486144 
body: This seems fixed, as I couldn't reproduce it yesterday, while testing again.
 

310. bug report number : ['2445']
comment number: 15795634 
body: Are you synchronized and the transactions shown confirmed?
 

comment number: 16054040 
body: @sipa yes
 

comment number: 17772728 
body: looks like I'm going to have to issue the patch for this one myself...
 

comment number: 17772941 
body: Seeing #2122 ... are you talking about initial block download here?? That isn't at all clear from the above.
 

comment number: 17774761 
body: ResendWalletTransactions() shouldn't be called during IBD at all...
 

comment number: 17777770 
body: It shouldn't. Unless there is something wrong on #2259
 

comment number: 17790460 
body: This occurs when the node has downloaded the most recently mined block.
 

comment number: 18071585 
body: I can't reproduce this. Reindexing and forcing a IBD on a used wallet seems to work as expected on my tests.

@rebroad: can you explain more thoroughly how you're triggering this?
 

comment number: 30991707 
body: @rdponticelli I'm just running bitcoin-qt as normal. It's retransmitting two old transactions whenever it runs ResendWalletTransactions(). I see this by the fact that it shows up in debug.log, and then shortly after the connected nodes request these old transactions.
 

comment number: 30993500 
body: @rebroad Can you debug why the retransmission logic decides to broadcast them?
I have the suspicion that they're part of vtxPrev of some other transaction that was included long ago.

In CWalletTx::RelayWalletTransactions ( https://github.com/bitcoin/bitcoin/blob/master/src/wallet.cpp#L900 ) you'll see that it will transmit vtxPrevs _without_ checking if the transaction itself should be broadcasted.
 

comment number: 36205850 
body: @laanwj Sorry for the delay in replying. I'm not seeing this happen any more since using newer code, so it looks like something fixed it.
 

comment number: 36847860 
body: @rebroad so you can close this issue?
 

comment number: 36876941 
body: The recent removal of vfSpent probably solved this; no longer are parent transactions of old transactions re-transmitted.
 

311. bug report number : ['2435']
comment number: 16329759 
body: same issue
 

comment number: 16358197 
body: Same here, 0.8.1 on 10.8.3 on a rMBP.  I can't get it to rebuild; fails every time.  Then crashes, here's the log:

https://gist.github.com/JustinAiken/cd49bdc69ce96f04ee94
 

comment number: 16358932 
body: @gavinandresen Can you take a look here?
 

comment number: 16756763 
body: Same error for me. I'm on an iMac with SSD. Downloaded the whole block chain a couple of times and getting this error almost every week when using 0.8.1
 

comment number: 17019780 
body: Same problem here on my MacPro, OS: 10.8.3
 

comment number: 17136521 
body: Same problem here too. Macbook Pro OS X 10.8.3. Contents of debug.log in Bitcoin data directory are here: 

https://gist.github.com/watchedman/5477355

The pertinent error message in the log as far as I can tell:

"LevelDB read failure: Corruption: block checksum mismatch"

Like the OP, this began after rebuilding the blockchain because Bitcoin-QT prompted me to do so.
 

comment number: 17222945 
body: I'm trying to reproduce that problem without success. @watchedman which version do you use? 0.8.1? downloaded from where? built by yourself?
Does the error only happens when the blockchain is "mostly" downloaded? Or also when you just have some transaction stored?
 

comment number: 17226970 
body: @jonasschnelli Yes I'm on 0.8.1. I did not build it, I just downloaded the Mac OS X binary executable for that version.

Strangely enough, this error ended up going away by itself. After I posted here the other day, I tried opening Bitcoin-QT again, and that time it successfully rebuilt everything, and now everything is working fine. 

I guess that's why it says "beta" at the end of the version number! This turned out to be just a hiccup for me, but I still hope that the Gist I posted can help someone figure out the root cause.

As far as blockchain and transactions, this error started happening after I already had a bunch of transactions and the full blockchain. Then I rebuilt the whole blockchain when prompted (like the OP) and then I finally got the "corrupt database" error after that finished, then I posted here, then I tried one last time and it started working again.

For others having this issue, it sounds crazy, but the solution might be to just keep trying until it works!
 

comment number: 17234368 
body: Yes, my issue randomly went away too.
 

comment number: 17440965 
body: I've been having this problem for the last several weeks.  
 

comment number: 17567557 
body: Duplicate; hopefully fixed by the "don't use too many file descriptors" fix.
 

comment number: 24009627 
body: Nope. Still having the same problem.
 

comment number: 24120338 
body: Having this problem, 8.1.4
 

comment number: 28145289 
body: I'm having this problem, OSX 10.8.4
 

comment number: 348333072 
body: I was getting the same, with IO error in the log "Could not rename file". I am using a USB external hard drive. It would go away upon reinstall. **I ran as administrator** and that did it. I know it sounds silly but give that a try. 

312. bug report number : ['2434']
comment number: 15775317 
body: I would recommend creating a BSD hardlink instead. Reading up on alias (an Apple "shortcut" file, not using any *nix construct), it looks potentially dangerous anyway, as it can search your hard drive when files are changed, and might just as easily pick another datadir:

"Since any of these properties can change without the computer's knowledge, as a result of user activity, various search algorithms are used to find the most plausible target. This fault-tolerance sets the alias apart from similar functions in some other operating systems, such as the Unix symbolic link or the Microsoft Windows shortcut, at the expense of increased complexity and unpredictability." (wikipedia)
 

comment number: 15784779 
body: Workaround: symbolic link the chainstate/ and blocks/ subfolders using the Terminal.

I don't know nuthin about how OSX aliases work under the covers, are they just symlinks?
 

comment number: 15804702 
body: @gavinandresen: they are more than symlinks, they are designed not to (easily) break if you move the target.

@qubez You cannot - from the GUI - create hard or symlinks in MacOS. As a Mac user, you create Aliases. Symlinking worked for me, but how many Maccies will go to the terminal and symlink the new position of the Bitcoins folder?

https://en.wikipedia.org/wiki/Alias_%28Mac_OS%29
https://developer.apple.com/library/mac/#documentation/Carbon/Reference/Alias_Manager/Reference/reference.html
 

comment number: 16135443 
body: it would be fixable... but i'm not sure if it's worth.
Mac aliases are files with a very specify steve-jobs-like format.
It's readable with some mac foundation frameworks (code examples: https://github.com/rentzsch/bdalias).
The BDAlias helper (see link above) gives some access point on how to handle the aliases.
BDAlias could be used as based (MIT license).

One way would be:
- on mac...
- check with C++ if the data dir (on mac: ~/Library/Application Support/Bitcoin) is a file
- check with a Cocoa/Foundation bridge class (.mm file) if the class is a Mac Alias an get the real path as String
- reset the data dir variable

If someone thinks, this is worth coding,.. i'll do it. :)
Remember: most mac apps (especially multiplatform apps) won't work with non-bsd-like symlinks (mac aliases).
 

comment number: 16163515 
body: IMO not worth it. We'd like to have less platform-specific code, not more,
especially in the core code (GUI is excusable in some cases).
 

comment number: 16163705 
body: @laanwj agree.
Close?
 

comment number: 25101681 
body: +1 to close
 

313. bug report number : ['2429']
comment number: 15670283 
body: If the workflow for receiving coins is "1) create a new receiving address..." then  maybe the message could be improved as well, it's currently: "These are your Bitcoin addresses for receiving payments. You may want to give a different one to each sender so you can keep track of who is paying you."

When we're in this discussion anyway: the send UI also encourages address reuse, by offering an "address book" of past sending addresses. But TBH I don't think much can be done here until there is a standardized payment protocol of some kind.
 

comment number: 15674764 
body: Agreed. The default address should be shown on Qt as it was in the original client. However the language should indicate the temporal nature of the current address shown; "Your Bitcoin Address" makes it seem like this is the only one that you get and it won't be automatically changing. (screenshot for wx reference)
![oldAddress](https://f.cloud.github.com/assets/1425520/358444/45acc102-a142-11e2-9c98-71c7a001e428.png)

Probably what is easiest to interpret would be an upper pane on "Receive coins" that shows the "current receiving address" with a "label this address" option, and a lower pane called "previous addresses" where labeled addresses are moved. They can be marked "used" when an address has received a payment (to discourage multiple payments and reduce the balance-containing addresses with their pubkeys previously broadcast).

The text "You may want to give a different one to each sender..." -> "you should give out a new address for each payment you wish to receive."
 

comment number: 15687170 
body: No, the "default address" will not be back. It encourages unlabeled addresses, it causes automatic empty labels to be created, and confuses users because there is a "changing address". No way we're going back there.

I'd propose changing the "Receive" tab so that the primary function is not a list, but a form in which a payment request can be created. Similar to what is now the QR code dialog. A workflow of 

1) fill in label
2) fill in amount (optional)
3) click "Make payment request"
4) show  the new receiving address that can be copy/pasted as well as a QR code and Bitcoin: URI

It is then made clear to the user that he should give this address to the person that wants to send him coins. 

Listing the current receiving addresses is secondary; it could remain at the bottom of the tab, or behind a special menu item.
 

comment number: 15701578 
body: How about showing "your last used" bitcoins address, and "your new bitcoin address" for one which has not been used? I've already encountered problems with "new address" giving me an address that's already been used for change. I think "new address" should only ever give unused addresses.
 

comment number: 15989902 
body: Adding to this,  apparently the address use triggers some OCD in some users and they _really_ want to "delete" addresses which are "cluttering" the list.  Any revisions here should be mindful of that and help those people out without creating a coinloss risk.
 

comment number: 16357842 
body: @rebroad: dealing out change addresses as "new" sounds like something that warrants a seperate issue
 

comment number: 16910088 
body: Ugh. More indications that low-level abstractions such as addresses and individual keypairs are dangerous to users. They should just regard a wallet as a wallet.

https://bitcointalk.org/index.php?topic=185185.msg1927752#msg1927752
 

314. bug report number : ['2405']
comment number: 15337803 
body: Exactly the same issue. Upgraded from 0.8.0-beta.

```
Process:         Bitcoin-Qt [5707]
Path:            /Applications/Bitcoin-Qt.app/Contents/MacOS/Bitcoin-Qt
Identifier:      com.yourcompany.Bitcoin-Qt
Version:         ??? (???)
Code Type:       X86 (Native)
Parent Process:  launchd [236]

Date/Time:       2013-03-23 10:18:36.325 -0400
OS Version:      Mac OS X 10.7.5 (11G63)
Report Version:  9

Crashed Thread:  0  Dispatch queue: com.apple.main-thread

Exception Type:  EXC_CRASH (SIGABRT)
Exception Codes: 0x0000000000000000, 0x0000000000000000

Application Specific Information:
objc[5707]: garbage collection is OFF
Assertion failed: (pfork != NULL), function SetBestChain, file src/main.cpp, line 1742.


Thread 0 Crashed:: Dispatch queue: com.apple.main-thread
0   libsystem_kernel.dylib          0x90c319c6 __pthread_kill + 10
1   libsystem_c.dylib               0x9b65ef78 pthread_kill + 106
2   libsystem_c.dylib               0x9b64fbdd abort + 167
3   libsystem_c.dylib               0x9b68420b __assert_rtn + 351
4   com.yourcompany.Bitcoin-Qt      0x000d1656 SetBestChain(CValidationState&, CBlockIndex*) + 2454
5   com.yourcompany.Bitcoin-Qt      0x000d3526 ConnectBestBlock(CValidationState&) + 598
6   com.yourcompany.Bitcoin-Qt      0x0011cbd7 AppInit2() + 16839
7   com.yourcompany.Bitcoin-Qt      0x000229e3 main + 7603
8   com.yourcompany.Bitcoin-Qt      0x0001f921 start + 53

Thread 1:: Dispatch queue: com.apple.libdispatch-manager
0   libsystem_kernel.dylib          0x90c3290a kevent + 10
1   libdispatch.dylib               0x96a12e04 _dispatch_mgr_invoke + 969
2   libdispatch.dylib               0x96a11853 _dispatch_mgr_thread + 53

Thread 2:
0   libsystem_kernel.dylib          0x90c31b42 __select + 10
1   QtCore                          0x019dea90 qt_safe_select(int, fd_set*, fd_set*, fd_set*, timeval const*) + 320
2   QtCore                          0x019e2dda QEventDispatcherUNIXPrivate::doSelect(QFlags<QEventLoop::ProcessEventsFlag>, timeval*) + 394
3   QtCore                          0x019e326f QEventDispatcherUNIX::processEvents(QFlags<QEventLoop::ProcessEventsFlag>) + 175
4   QtCore                          0x019ac471 QEventLoop::processEvents(QFlags<QEventLoop::ProcessEventsFlag>) + 65
5   QtCore                          0x019ac84a QEventLoop::exec(QFlags<QEventLoop::ProcessEventsFlag>) + 314
6   QtCore                          0x0188aa45 QThread::exec() + 261
7   QtCore                          0x0188e0d3 QThread::terminate() + 787
8   libsystem_c.dylib               0x9b65ced9 _pthread_start + 335
9   libsystem_c.dylib               0x9b6606de thread_start + 34

Thread 3:
0   libsystem_kernel.dylib          0x90c3183e __psynch_cvwait + 10
1   libsystem_c.dylib               0x9b660e21 _pthread_cond_wait + 827
2   libsystem_c.dylib               0x9b61142c pthread_cond_wait$UNIX2003 + 71
3   com.yourcompany.Bitcoin-Qt      0x000af522 boost::condition_variable::wait(boost::unique_lock<boost::mutex>&) + 226
4   com.yourcompany.Bitcoin-Qt      0x0010fa0d CCheckQueue<CScriptCheck>::Loop(bool) + 413
5   com.yourcompany.Bitcoin-Qt      0x000bf55f ThreadScriptCheck(void*) + 79
6   libboost_thread-mt.dylib        0x00cd4845 boost::detail::thread_data_base::~thread_data_base() + 779
7   libsystem_c.dylib               0x9b65ced9 _pthread_start + 335
8   libsystem_c.dylib               0x9b6606de thread_start + 34

Thread 4:
0   libsystem_kernel.dylib          0x90c3202e __workq_kernreturn + 10
1   libsystem_c.dylib               0x9b65eccf _pthread_wqthread + 773
2   libsystem_c.dylib               0x9b6606fe start_wqthread + 30

Thread 5:

Thread 6:
0   libsystem_kernel.dylib          0x90c3183e __psynch_cvwait + 10
1   libsystem_c.dylib               0x9b660e21 _pthread_cond_wait + 827
2   libsystem_c.dylib               0x9b6113e0 pthread_cond_timedwait$UNIX2003 + 70
3   libboost_thread-mt.dylib        0x00cdbe2b boost::condition_variable::do_timed_wait(boost::unique_lock<boost::mutex>&, timespec const&) + 289
4   libboost_thread-mt.dylib        0x00cd54f8 boost::this_thread::sleep(boost::posix_time::ptime const&) + 548
5   com.yourcompany.Bitcoin-Qt      0x00165994 ThreadFlushWalletDB(void*) + 420
6   libboost_thread-mt.dylib        0x00cd4845 boost::detail::thread_data_base::~thread_data_base() + 779
7   libsystem_c.dylib               0x9b65ced9 _pthread_start + 335
8   libsystem_c.dylib               0x9b6606de thread_start + 34

Thread 0 crashed with X86 Thread State (32-bit):
  eax: 0x00000000  ebx: 0x07c06000  ecx: 0xbfffe6ac  edx: 0x90c319c6
  edi: 0xad0c02c0  esi: 0x00000006  ebp: 0xbfffe6c8  esp: 0xbfffe6ac
   ss: 0x00000023  efl: 0x00200246  eip: 0x90c319c6   cs: 0x0000000b
   ds: 0x00000023   es: 0x00000023   fs: 0x00000000   gs: 0x0000000f
  cr2: 0x07c06000
Logical CPU: 0

Binary Images:
    0x1000 -   0x5b3fef +com.yourcompany.Bitcoin-Qt (??? - ???) <B353FA8B-4A03-D8BC-EAC8-E1DA0E20F48A> /Applications/Bitcoin-Qt.app/Contents/MacOS/Bitcoin-Qt
  0x87e000 -   0x883fe7 +libqrencode.3.dylib (5.1.0 - compatibility 5.0.0) <9627FE72-1198-798B-1841-A64F967F32FB> /Applications/Bitcoin-Qt.app/Contents/Frameworks/libqrencode.3.dylib
  0x887000 -   0x88eff7 +libminiupnpc.8.dylib (??? - ???) <2DBB7FA6-2198-8004-2ECF-F504F2081317> /Applications/Bitcoin-Qt.app/Contents/Frameworks/libminiupnpc.8.dylib
  0x892000 -   0x8defff +libssl.1.0.0.dylib (??? - ???) <641EBBF5-C97C-1D6C-EFF0-EB02A7FF7629> /Applications/Bitcoin-Qt.app/Contents/Frameworks/libssl.1.0.0.dylib
  0x8f8000 -   0xa30fef +libcrypto.1.0.0.dylib (??? - ???) <0943ABB0-E2CA-20EC-B52D-E3D5E2340F02> /Applications/Bitcoin-Qt.app/Contents/Frameworks/libcrypto.1.0.0.dylib
  0xa99000 -   0xbf2fff +libdb_cxx-4.8.dylib (??? - ???) <A2028F0C-1E73-00A3-BA80-2DEF2EAC9ECB> /Applications/Bitcoin-Qt.app/Contents/Frameworks/libdb_cxx-4.8.dylib
  0xc1c000 -   0xc1fff3 +libboost_system-mt.dylib (??? - ???) <DC2F474D-A848-B1CA-5E46-EAB30E94A639> /Applications/Bitcoin-Qt.app/Contents/Frameworks/libboost_system-mt.dylib
  0xc23000 -   0xc36ffb +libboost_filesystem-mt.dylib (??? - ???) <ED32F1B3-0C00-9EA8-A6E4-B4D69BBB090B> /Applications/Bitcoin-Qt.app/Contents/Frameworks/libboost_filesystem-mt.dylib
  0xc41000 -   0xc85ff3 +libboost_program_options-mt.dylib (??? - ???) <DAE91877-14DE-370A-9571-A2EC1D7AF3D8> /Applications/Bitcoin-Qt.app/Contents/Frameworks/libboost_program_options-mt.dylib
  0xcd0000 -   0xce2ff3 +libboost_thread-mt.dylib (??? - ???) <4F1F450A-6305-F698-98AC-E82075E11758> /Applications/Bitcoin-Qt.app/Contents/Frameworks/libboost_thread-mt.dylib
  0xd02000 -  0x1692fe3 +QtGui (4.8.4 - compatibility 4.8.0) <C70071A5-F36B-C018-9BEB-181811A0759F> /Applications/Bitcoin-Qt.app/Contents/Frameworks/QtGui.framework/Versions/4/QtGui
 0x1869000 -  0x1b18ffb +QtCore (4.8.4 - compatibility 4.8.0) <204CC6C5-048C-4746-D9AD-DF6FA3204CE7> /Applications/Bitcoin-Qt.app/Contents/Frameworks/QtCore.framework/Versions/4/QtCore
 0x1b8a000 -  0x1b9bfe7 +libz.1.dylib (1.2.7 - compatibility 1.0.0) <04F507FA-B0BF-CD40-DB2E-CBF29500AF19> /Applications/Bitcoin-Qt.app/Contents/Frameworks/libz.1.dylib
 0x1b9f000 -  0x1bc0fe7 +libpng15.15.dylib (30.0.0 - compatibility 30.0.0) <2E174E7D-8E8B-9F51-6A39-53D3243C159E> /Applications/Bitcoin-Qt.app/Contents/Frameworks/libpng15.15.dylib
 0x2e93000 -  0x2e97ff3 +libqgif.dylib (??? - ???) <88247A6C-7963-6E25-F271-07D15F98CF45> /Applications/Bitcoin-Qt.app/Contents/PlugIns/imageformats/libqgif.dylib
 0x2e9c000 -  0x2ea0fff +libqico.dylib (??? - ???) <7AE39AE4-C88A-D835-F6DB-43C38C12D8C9> /Applications/Bitcoin-Qt.app/Contents/PlugIns/imageformats/libqico.dylib
 0x2ea5000 -  0x2ea9fff +libqjpeg.dylib (??? - ???) <0D0902B6-EB00-4DEA-37B8-43EEB3552921> /Applications/Bitcoin-Qt.app/Contents/PlugIns/imageformats/libqjpeg.dylib
 0x2eaf000 -  0x2edffe7 +libjpeg.8.dylib (13.0.0 - compatibility 13.0.0) <96B28C90-BE02-5517-87BC-EC348C2EE25C> /Applications/Bitcoin-Qt.app/Contents/Frameworks/libjpeg.8.dylib
 0x2eec000 -  0x2f27ff3 +libqtaccessiblewidgets.dylib (??? - ???) <D256CDF3-59B6-AAC8-D553-A348D30AFD9C> /Applications/Bitcoin-Qt.app/Contents/PlugIns/accessible/libqtaccessiblewidgets.dylib
 0x2fe7000 -  0x2feaff7 +libqmng.dylib (??? - ???) <AED7B482-BE3B-C70A-3E5B-7575C58DBCE3> /Applications/Bitcoin-Qt.app/Contents/PlugIns/imageformats/libqmng.dylib
 0x2fef000 -  0x2ff1ffb +libqtga.dylib (??? - ???) <DF371BC0-F930-689E-9654-D687DE08B059> /Applications/Bitcoin-Qt.app/Contents/PlugIns/imageformats/libqtga.dylib
 0x2ff5000 -  0x2ff9ffb +libqtiff.dylib (??? - ???) <D9486AA9-E3DB-C1BF-A248-E5689EC8B768> /Applications/Bitcoin-Qt.app/Contents/PlugIns/imageformats/libqtiff.dylib
 0x780a000 -  0x7857fe7 +libmng.1.dylib (2.0.0 - compatibility 2.0.0) <1A7593E8-6C76-5533-E1BE-51976CB1873C> /Applications/Bitcoin-Qt.app/Contents/Frameworks/libmng.1.dylib
 0x786c000 -  0x7894fe7 +liblcms.1.dylib (2.19.0 - compatibility 2.0.0) <81794FD6-C0FC-79D3-7188-36318A86427A> /Applications/Bitcoin-Qt.app/Contents/Frameworks/liblcms.1.dylib
 0x789e000 -  0x78f0fe7 +libtiff.3.dylib (13.7.0 - compatibility 13.0.0) <27FC7F5B-604D-360A-9D36-7567BEA4D1AD> /Applications/Bitcoin-Qt.app/Contents/Frameworks/libtiff.3.dylib
0x8fe5f000 - 0x8fe91aa7  dyld (195.6 - ???) <3A866A34-4CDD-35A4-B26E-F145B05F3644> /usr/lib/dyld
0x90142000 - 0x90193ff9  com.apple.ScalableUserInterface (1.0 - 1) <3E650401-FB58-3704-8A24-E0B2F3914884> /System/Library/Frameworks/QuartzCore.framework/Versions/A/Frameworks/ScalableUserInterface.framework/Versions/A/ScalableUserInterface
0x90194000 - 0x901b6ffe  com.apple.framework.familycontrols (3.0 - 300) <6735D7ED-7053-3AB8-B144-E7F70A124CCD> /System/Library/PrivateFrameworks/FamilyControls.framework/Versions/A/FamilyControls
0x901b7000 - 0x901c5fff  com.apple.opengl (1.8.1 - 1.8.1) <766AFB12-A2CB-3A55-B662-FC9FFCAE0008> /System/Library/Frameworks/OpenGL.framework/Versions/A/OpenGL
0x901c6000 - 0x9022efff  libc++.1.dylib (28.4.0 - compatibility 1.0.0) <B24814AB-CA77-3B9D-8FAB-58C9B4FD3A16> /usr/lib/libc++.1.dylib
0x9022f000 - 0x902d3fff  com.apple.QD (3.40 - ???) <3881BEC6-0908-3073-BA44-346356E1CDF9> /System/Library/Frameworks/ApplicationServices.framework/Versions/A/Frameworks/QD.framework/Versions/A/QD
0x905af000 - 0x905baff3  libCSync.A.dylib (600.0.0 - compatibility 64.0.0) <D6E17FD4-ECA0-3EEE-BFC5-F6A42A21AB5D> /System/Library/Frameworks/ApplicationServices.framework/Versions/A/Frameworks/CoreGraphics.framework/Versions/A/Resources/libCSync.A.dylib
0x905bb000 - 0x906d9fec  com.apple.vImage (5.1 - 5.1) <7757F253-B281-3612-89D4-F2B04061CBE1> /System/Library/Frameworks/Accelerate.framework/Versions/A/Frameworks/vImage.framework/Versions/A/vImage
0x906da000 - 0x906e2fff  com.apple.DiskArbitration (2.4.1 - 2.4.1) <28D5D8B5-14E8-3DA1-9085-B9BC96835ACF> /System/Library/Frameworks/DiskArbitration.framework/Versions/A/DiskArbitration
0x906e3000 - 0x906eeffe  libbz2.1.0.dylib (1.0.5 - compatibility 1.0.0) <4A7FCD28-9C09-3120-980A-BDF6EDFAAC62> /usr/lib/libbz2.1.0.dylib
0x906ef000 - 0x9070bff1  libPng.dylib (??? - ???) <F084226B-14F0-36C0-B5EC-22C78406D2B6> /System/Library/Frameworks/ApplicationServices.framework/Versions/A/Frameworks/ImageIO.framework/Versions/A/Resources/libPng.dylib
0x9070c000 - 0x9070dfff  com.apple.TrustEvaluationAgent (2.0 - 1) <4BB39578-2F5E-3A50-AD59-9C0AB99472EB> /System/Library/PrivateFrameworks/TrustEvaluationAgent.framework/Versions/A/TrustEvaluationAgent
0x9070e000 - 0x90712fff  libGIF.dylib (??? - ???) <2ADFED97-2228-343D-9A53-207CBFDE7984> /System/Library/Frameworks/ApplicationServices.framework/Versions/A/Frameworks/ImageIO.framework/Versions/A/Resources/libGIF.dylib
0x90713000 - 0x9079afff  com.apple.print.framework.PrintCore (7.1 - 366.3) <EEC03CAB-7F79-3931-87FE-4DF0B767BF47> /System/Library/Frameworks/ApplicationServices.framework/Versions/A/Frameworks/PrintCore.framework/Versions/A/PrintCore
0x9079b000 - 0x9079bfff  com.apple.audio.units.AudioUnit (1.7.3 - 1.7.3) <2E71E880-25D1-3210-8D26-21EC47ED810C> /System/Library/Frameworks/AudioUnit.framework/Versions/A/AudioUnit
0x908cf000 - 0x908fdff7  com.apple.DictionaryServices (1.2.1 - 158.3) <8D03D180-D834-39F3-A106-78E0B22A7893> /System/Library/Frameworks/CoreServices.framework/Versions/A/Frameworks/DictionaryServices.framework/Versions/A/DictionaryServices
0x908fe000 - 0x908fffff  libDiagnosticMessagesClient.dylib (??? - ???) <DB3889C2-2FC2-3087-A2A2-4C319455E35C> /usr/lib/libDiagnosticMessagesClient.dylib
0x90900000 - 0x90911fff  libbsm.0.dylib (??? - ???) <54ACF696-87C6-3652-808A-17BE7275C230> /usr/lib/libbsm.0.dylib
0x90912000 - 0x90913ff7  libquarantine.dylib (36.7.0 - compatibility 1.0.0) <46980EC2-149D-3CF7-B29A-401FB89C275D> /usr/lib/system/libquarantine.dylib
0x9092a000 - 0x9093fff7  com.apple.ImageCapture (7.1.0 - 7.1.0) <E5FCA336-7E47-343E-A82D-CCCA5BCD5929> /System/Library/Frameworks/Carbon.framework/Versions/A/Frameworks/ImageCapture.framework/Versions/A/ImageCapture
0x90c19000 - 0x90c37ff7  libsystem_kernel.dylib (1699.32.7 - compatibility 1.0.0) <79179F83-457A-3539-A76B-E960D2108109> /usr/lib/system/libsystem_kernel.dylib
0x90c52000 - 0x90c56ffa  libcache.dylib (47.0.0 - compatibility 1.0.0) <9DFB61F2-9B1F-31B2-BF41-099994D74E1F> /usr/lib/system/libcache.dylib
0x90c57000 - 0x90c5eff9  libsystem_dnssd.dylib (??? - ???) <EBEAF723-84F8-3544-8FB2-31B7771B50D0> /usr/lib/system/libsystem_dnssd.dylib
0x90fea000 - 0x90fedff9  libCGXType.A.dylib (600.0.0 - compatibility 64.0.0) <16DCE20A-9790-369A-94C1-B7954B418C77> /System/Library/Frameworks/ApplicationServices.framework/Versions/A/Frameworks/CoreGraphics.framework/Versions/A/Resources/libCGXType.A.dylib
0x91030000 - 0x91040ff7  libCRFSuite.dylib (??? - ???) <B68CDEA4-8D6E-3625-B80F-3489E321E858> /usr/lib/libCRFSuite.dylib
0x91041000 - 0x91048ff7  libsystem_notify.dylib (80.1.0 - compatibility 1.0.0) <47DB9E1B-A7D1-3818-A747-382B2C5D9E1B> /usr/lib/system/libsystem_notify.dylib
0x91049000 - 0x91074fff  com.apple.GSS (2.2 - 2.0) <2C468B23-FA87-30B5-B9A6-8C5D1373AA30> /System/Library/Frameworks/GSS.framework/Versions/A/GSS
0x910ff000 - 0x911bcff3  ColorSyncDeprecated.dylib (4.6.0 - compatibility 1.0.0) <726898F5-E718-3F27-B415-D6FDCDE09174> /System/Library/Frameworks/ApplicationServices.framework/Frameworks/ColorSync.framework/Versions/A/Resources/ColorSyncDeprecated.dylib
0x911c8000 - 0x911d5fff  libGL.dylib (??? - ???) <A72F14F7-1836-34AB-9F08-67836CB966E4> /System/Library/Frameworks/OpenGL.framework/Versions/A/Libraries/libGL.dylib
0x911e5000 - 0x911e9ff7  com.apple.OpenDirectory (10.7 - 146) <3D3D30CE-6D82-3681-AA98-4E3AEFFA4229> /System/Library/Frameworks/OpenDirectory.framework/Versions/A/OpenDirectory
0x911ea000 - 0x911eafff  com.apple.Accelerate (1.7 - Accelerate 1.7) <4192CE7A-BCE0-3D3C-AAF7-6F1B3C607386> /System/Library/Frameworks/Accelerate.framework/Versions/A/Accelerate
0x915cf000 - 0x915d0ff4  libremovefile.dylib (21.1.0 - compatibility 1.0.0) <6DE3FDC7-0BE0-3791-B6F5-C15422A8AFB8> /usr/lib/system/libremovefile.dylib
0x915ff000 - 0x91658fff  com.apple.HIServices (1.21 - ???) <91EC636D-AC27-3332-BA1C-FD7301917429> /System/Library/Frameworks/ApplicationServices.framework/Versions/A/Frameworks/HIServices.framework/Versions/A/HIServices
0x91696000 - 0x916f4ff7  com.apple.coreui (1.2.2 - 165.11) <340B0B83-1407-3AB4-BCAB-505C29303EE2> /System/Library/PrivateFrameworks/CoreUI.framework/Versions/A/CoreUI
0x916f5000 - 0x91733fff  libRIP.A.dylib (600.0.0 - compatibility 64.0.0) <AF1174F9-4402-31EB-9C84-AB644E5865DF> /System/Library/Frameworks/ApplicationServices.framework/Versions/A/Frameworks/CoreGraphics.framework/Versions/A/Resources/libRIP.A.dylib
0x91734000 - 0x91737ffc  libpam.2.dylib (3.0.0 - compatibility 3.0.0) <6FFDBD60-5EC6-3EFA-996B-EE030443C16C> /usr/lib/libpam.2.dylib
0x91738000 - 0x91754ff5  com.apple.GenerationalStorage (1.0 - 126.1) <E622F823-7D98-3D13-9C3D-7EA482567394> /System/Library/PrivateFrameworks/GenerationalStorage.framework/Versions/A/GenerationalStorage
0x91755000 - 0x917c4fff  com.apple.Heimdal (2.2 - 2.0) <2E1B8779-36D4-3C62-A67E-0034D77D7707> /System/Library/PrivateFrameworks/Heimdal.framework/Versions/A/Heimdal
0x917c5000 - 0x917c5fff  libOpenScriptingUtil.dylib (??? - ???) <E4C22B65-9493-31D5-9D46-19BD70975587> /usr/lib/libOpenScriptingUtil.dylib
0x917c6000 - 0x91862fff  com.apple.ink.framework (10.7.5 - 113) <05CAFB64-D3B8-3973-87EA-CB8BBE580F6B> /System/Library/Frameworks/Carbon.framework/Versions/A/Frameworks/Ink.framework/Versions/A/Ink
0x9187c000 - 0x91884ff5  libcopyfile.dylib (85.1.0 - compatibility 1.0.0) <97E73059-F645-33F4-BCC5-1FEA367D60D4> /usr/lib/system/libcopyfile.dylib
0x918c6000 - 0x918d1ffb  com.apple.speech.recognition.framework (4.0.21 - 4.0.21) <A1764D2F-EB84-33DC-9ED5-CDA3B468FF3E> /System/Library/Frameworks/Carbon.framework/Versions/A/Frameworks/SpeechRecognition.framework/Versions/A/SpeechRecognition
0x918d2000 - 0x91992ffb  com.apple.ColorSync (4.7.4 - 4.7.4) <0A68AF35-15DF-3A0A-9B17-70CE2A106A6C> /System/Library/Frameworks/ApplicationServices.framework/Versions/A/Frameworks/ColorSync.framework/Versions/A/ColorSync
0x91993000 - 0x919dcff7  libGLU.dylib (??? - ???) <9AF7AD51-16E3-3674-B60E-30EE499D7B46> /System/Library/Frameworks/OpenGL.framework/Versions/A/Libraries/libGLU.dylib
0x919dd000 - 0x91a41fff  com.apple.framework.IOKit (2.0 - ???) <94827954-5906-36C4-819B-24CDAFD85C72> /System/Library/Frameworks/IOKit.framework/Versions/A/IOKit
0x91a80000 - 0x91dc6ff3  com.apple.HIToolbox (1.9 - ???) <E5EA9EEF-3CCA-36A0-8688-DA2E64E2256C> /System/Library/Frameworks/Carbon.framework/Versions/A/Frameworks/HIToolbox.framework/Versions/A/HIToolbox
0x91dc7000 - 0x91de7ff7  com.apple.RemoteViewServices (1.5 - 44.2) <11C87337-FF29-3976-A230-6387D96563C5> /System/Library/PrivateFrameworks/RemoteViewServices.framework/Versions/A/RemoteViewServices
0x91f4c000 - 0x921c0ff3  com.apple.CoreImage (7.99.1 - 1.0.1) <C4B2DD2A-8E45-31CD-9B25-2AC1CA252B14> /System/Library/Frameworks/QuartzCore.framework/Versions/A/Frameworks/CoreImage.framework/Versions/A/CoreImage
0x921c2000 - 0x92318fff  com.apple.audio.toolbox.AudioToolbox (1.7.3 - 1.7.3) <F09C7075-2C4E-3A4F-A372-95D700125513> /System/Library/Frameworks/AudioToolbox.framework/Versions/A/AudioToolbox
0x9235e000 - 0x9262dffb  com.apple.security (7.0 - 55148.6) <8DF67BDD-C98F-3B7E-AC63-D468407FA82D> /System/Library/Frameworks/Security.framework/Versions/A/Security
0x9262e000 - 0x92641ff8  com.apple.MultitouchSupport.framework (231.4 - 231.4) <083F7787-4C3B-31DA-B5BB-1993D9A9723D> /System/Library/PrivateFrameworks/MultitouchSupport.framework/Versions/A/MultitouchSupport
0x92647000 - 0x92687ff7  libauto.dylib (??? - ???) <984C81BE-FA1C-3228-8F7E-2965E7E5EB85> /usr/lib/libauto.dylib
0x9293b000 - 0x92a11aab  libobjc.A.dylib (228.0.0 - compatibility 1.0.0) <2E272DCA-38A0-3530-BBF4-47AE678D20D4> /usr/lib/libobjc.A.dylib
0x92a12000 - 0x92a77ff7  libvDSP.dylib (325.4.0 - compatibility 1.0.0) <4B4B32D2-4F66-3B0D-BD61-FA8429FF8507> /System/Library/Frameworks/Accelerate.framework/Versions/A/Frameworks/vecLib.framework/Versions/A/libvDSP.dylib
0x92a7b000 - 0x92b8cff7  libJP2.dylib (??? - ???) <3B6A6D1C-5E4D-3814-892A-7C580E063268> /System/Library/Frameworks/ApplicationServices.framework/Versions/A/Frameworks/ImageIO.framework/Versions/A/Resources/libJP2.dylib
0x92ba6000 - 0x92bbcffe  libxpc.dylib (77.19.0 - compatibility 1.0.0) <0585AA94-F4FD-32C1-B586-22E7184B781A> /usr/lib/system/libxpc.dylib
0x92bfb000 - 0x92c71fff  com.apple.Metadata (10.7.0 - 627.37) <F54AED70-95C5-3561-8C87-D9E5539E98A4> /System/Library/Frameworks/CoreServices.framework/Versions/A/Frameworks/Metadata.framework/Versions/A/Metadata
0x92c72000 - 0x92c87fff  com.apple.speech.synthesis.framework (4.0.74 - 4.0.74) <361FB1E8-461F-3349-B56E-A8BDB28B0010> /System/Library/Frameworks/ApplicationServices.framework/Versions/A/Frameworks/SpeechSynthesis.framework/Versions/A/SpeechSynthesis
0x92c88000 - 0x930fdff7  FaceCoreLight (1.4.7 - compatibility 1.0.0) <3E2BF587-5168-3FC5-9D8D-183A9C7C1DED> /System/Library/PrivateFrameworks/FaceCoreLight.framework/Versions/A/FaceCoreLight
0x930fe000 - 0x93146ff7  com.apple.SystemConfiguration (1.11.3 - 1.11) <68B92FEA-F754-3E7E-B5E6-D512E26144E7> /System/Library/Frameworks/SystemConfiguration.framework/Versions/A/SystemConfiguration
0x93147000 - 0x93175fe7  libSystem.B.dylib (159.1.0 - compatibility 1.0.0) <07D9A827-9567-34C2-9022-AF4BF975C9A7> /usr/lib/libSystem.B.dylib
0x93176000 - 0x932a2ff9  com.apple.CFNetwork (520.5.1 - 520.5.1) <F3C606BF-6DCF-33CD-981B-7253C9E3113A> /System/Library/Frameworks/CoreServices.framework/Versions/A/Frameworks/CFNetwork.framework/Versions/A/CFNetwork
0x932ec000 - 0x934e4ff7  com.apple.CoreData (104.1 - 358.14) <C1730963-F75D-3338-B65F-D50235538B28> /System/Library/Frameworks/CoreData.framework/Versions/A/CoreData
0x934e5000 - 0x9357cff3  com.apple.securityfoundation (5.0 - 55116) <EB53CEF7-4836-39FD-B012-6BC122ED4CE9> /System/Library/Frameworks/SecurityFoundation.framework/Versions/A/SecurityFoundation
0x9357d000 - 0x9357dff2  com.apple.CoreServices (53 - 53) <7CB7AA95-D5A7-366A-BB8A-035AA9E582F8> /System/Library/Frameworks/CoreServices.framework/Versions/A/CoreServices
0x935bf000 - 0x935f5ff7  com.apple.AE (527.7 - 527.7) <7BAFBF18-3997-3656-9823-FD3B455056A4> /System/Library/Frameworks/CoreServices.framework/Versions/A/Frameworks/AE.framework/Versions/A/AE
0x93887000 - 0x93887ff0  com.apple.ApplicationServices (41 - 41) <45032433-76F6-365A-95CA-641C9427EAA1> /System/Library/Frameworks/ApplicationServices.framework/Versions/A/ApplicationServices
0x94994000 - 0x949d4ff7  com.apple.NavigationServices (3.7 - 193) <16A8BCC8-7343-3A90-88B3-AAA334DF615F> /System/Library/Frameworks/Carbon.framework/Versions/A/Frameworks/NavigationServices.framework/Versions/A/NavigationServices
0x949d5000 - 0x94a27ff7  libFontRegistry.dylib (??? - ???) <C2B84661-A62D-3FFF-8D8C-BC697E9BDF4C> /System/Library/Frameworks/ApplicationServices.framework/Versions/A/Frameworks/ATS.framework/Versions/A/Resources/libFontRegistry.dylib
0x94a28000 - 0x94af8ffb  com.apple.ImageIO.framework (3.1.2 - 3.1.2) <C3CB142F-BE91-3AFA-B052-409F776C0B9E> /System/Library/Frameworks/ApplicationServices.framework/Versions/A/Frameworks/ImageIO.framework/Versions/A/ImageIO
0x94af9000 - 0x94af9fff  com.apple.Accelerate.vecLib (3.7 - vecLib 3.7) <22997C20-BEB7-301D-86C5-5BFB3B06D212> /System/Library/Frameworks/Accelerate.framework/Versions/A/Frameworks/vecLib.framework/Versions/A/vecLib
0x94afa000 - 0x94b00ffd  com.apple.CommerceCore (1.0 - 17) <595A67CF-3546-35FD-8D2E-2861CB959379> /System/Library/PrivateFrameworks/CommerceKit.framework/Versions/A/Frameworks/CommerceCore.framework/Versions/A/CommerceCore
0x94d1e000 - 0x94e16ff7  libFontParser.dylib (??? - ???) <71B33EB1-27F8-3C68-B940-FC61A3CFE275> /System/Library/Frameworks/ApplicationServices.framework/Versions/A/Frameworks/ATS.framework/Versions/A/Resources/libFontParser.dylib
0x94eee000 - 0x950c5fe7  com.apple.CoreFoundation (6.7.2 - 635.21) <4D1D2BAF-1332-32DF-A81B-7E79D4F0A6CB> /System/Library/Frameworks/CoreFoundation.framework/Versions/A/CoreFoundation
0x9526b000 - 0x95575ff3  com.apple.Foundation (6.7.2 - 833.25) <4C52ED74-A1FD-3087-A2E1-035AB3CF9610> /System/Library/Frameworks/Foundation.framework/Versions/C/Foundation
0x9577c000 - 0x9577fff7  libcompiler_rt.dylib (6.0.0 - compatibility 1.0.0) <7F6C14CC-0169-3F1B-B89C-372F67F1F3B5> /usr/lib/system/libcompiler_rt.dylib
0x95780000 - 0x95782ff7  libdyld.dylib (195.5.0 - compatibility 1.0.0) <637660EA-8D12-3B79-B644-041FEADC9C33> /usr/lib/system/libdyld.dylib
0x960e4000 - 0x96a0f72b  com.apple.CoreGraphics (1.600.0 - ???) <DD7CDD67-FC4F-36FE-962F-2EA7EF3FC780> /System/Library/Frameworks/ApplicationServices.framework/Versions/A/Frameworks/CoreGraphics.framework/Versions/A/CoreGraphics
0x96a10000 - 0x96a1efff  libdispatch.dylib (187.10.0 - compatibility 1.0.0) <1B857064-288D-3919-B81A-38E9F4D19B54> /usr/lib/system/libdispatch.dylib
0x96d65000 - 0x96d68ffd  libCoreVMClient.dylib (??? - ???) <B8F8916D-F12A-3D95-ABF3-999D57B7D581> /System/Library/Frameworks/OpenGL.framework/Versions/A/Libraries/libCoreVMClient.dylib
0x96d72000 - 0x97174ff6  libLAPACK.dylib (??? - ???) <6FCC72E8-CCA1-3AFC-B2B4-CC47BC1F27D1> /System/Library/Frameworks/Accelerate.framework/Versions/A/Frameworks/vecLib.framework/Versions/A/libLAPACK.dylib
0x97175000 - 0x9717aff7  libmacho.dylib (800.0.0 - compatibility 1.0.0) <6DCCA207-8F4D-343A-B77D-C4FB905DADC4> /usr/lib/system/libmacho.dylib
0x9725d000 - 0x9725dfff  com.apple.vecLib (3.7 - vecLib 3.7) <8CCF99BF-A4B7-3C01-9219-B83D2AE5F82A> /System/Library/Frameworks/vecLib.framework/Versions/A/vecLib
0x9725e000 - 0x97560fff  com.apple.CoreServices.CarbonCore (960.25 - 960.25) <C613B0DA-B401-3DC7-B626-6E20D4DDC8A8> /System/Library/Frameworks/CoreServices.framework/Versions/A/Frameworks/CarbonCore.framework/Versions/A/CarbonCore
0x9760c000 - 0x9763bff7  libsystem_info.dylib (??? - ???) <37640811-445B-3BB7-9934-A7C99848250D> /usr/lib/system/libsystem_info.dylib
0x9777f000 - 0x97809ffb  com.apple.SearchKit (1.4.0 - 1.4.0) <CF074082-64AB-3A1F-831E-582DF1667827> /System/Library/Frameworks/CoreServices.framework/Versions/A/Frameworks/SearchKit.framework/Versions/A/SearchKit
0x97a11000 - 0x97a33ff8  com.apple.PerformanceAnalysis (1.11 - 11) <453463FF-7C42-3526-8C96-A9971EE07154> /System/Library/PrivateFrameworks/PerformanceAnalysis.framework/Versions/A/PerformanceAnalysis
0x97a34000 - 0x97a36ffb  libRadiance.dylib (??? - ???) <4721057E-5A1F-3083-911B-200ED1CE7678> /System/Library/Frameworks/ApplicationServices.framework/Versions/A/Frameworks/ImageIO.framework/Versions/A/Resources/libRadiance.dylib
0x97a70000 - 0x97a7bfff  libkxld.dylib (??? - ???) <14E79D7A-B6C2-35C5-B56D-D343BEC2A106> /usr/lib/system/libkxld.dylib
0x97a7c000 - 0x97a80ff3  libsystem_network.dylib (??? - ???) <62EBADDA-FC72-3275-AAB3-5EDD949FEFAF> /usr/lib/system/libsystem_network.dylib
0x97a81000 - 0x97a89ff3  liblaunch.dylib (392.39.0 - compatibility 1.0.0) <9E6135FF-C2B1-3BC9-A160-B32D71BFA77C> /usr/lib/system/liblaunch.dylib
0x97a8a000 - 0x97a93ff3  com.apple.CommonAuth (2.2 - 2.0) <C3FD6EC2-8EB3-38FB-BBB7-05009CA49024> /System/Library/PrivateFrameworks/CommonAuth.framework/Versions/A/CommonAuth
0x97bc9000 - 0x97c8cfff  com.apple.CoreServices.OSServices (478.50 - 478.50) <916A3B50-1033-3FFE-A9AF-3CC2B0F60EAE> /System/Library/Frameworks/CoreServices.framework/Versions/A/Frameworks/OSServices.framework/Versions/A/OSServices
0x97c8d000 - 0x97cd0ffd  libcommonCrypto.dylib (55010.0.0 - compatibility 1.0.0) <4BA1F5F1-F0A2-3FEB-BB62-F514DCBB3725> /usr/lib/system/libcommonCrypto.dylib
0x97d6c000 - 0x97dceffb  com.apple.datadetectorscore (3.0 - 179.4) <3A418498-C189-37A1-9B86-F0ECB33AD91C> /System/Library/PrivateFrameworks/DataDetectorsCore.framework/Versions/A/DataDetectorsCore
0x97eba000 - 0x97ebaffe  libkeymgr.dylib (23.0.0 - compatibility 1.0.0) <7F0E8EE2-9E8F-366F-9988-E2F119DB9A82> /usr/lib/system/libkeymgr.dylib
0x97ebb000 - 0x97ec9ff7  libxar-nossl.dylib (??? - ???) <5BF4DA8E-C319-354A-967E-A0C725DC8BA3> /usr/lib/libxar-nossl.dylib
0x97f64000 - 0x97f8eff1  com.apple.CoreServicesInternal (113.19 - 113.19) <F7A309D1-DCB4-38DE-8248-E16D0182AA6C> /System/Library/PrivateFrameworks/CoreServicesInternal.framework/Versions/A/CoreServicesInternal
0x97fdf000 - 0x97fe0ffd  libCVMSPluginSupport.dylib (??? - ???) <4B0476F9-950D-3EB7-BD83-F65AF0B05F0E> /System/Library/Frameworks/OpenGL.framework/Versions/A/Libraries/libCVMSPluginSupport.dylib
0x9802e000 - 0x98034fff  libGFXShared.dylib (??? - ???) <9C9834EB-B794-38C8-9B90-31D8CB234F86> /System/Library/Frameworks/OpenGL.framework/Versions/A/Libraries/libGFXShared.dylib
0x98035000 - 0x9803cffd  com.apple.NetFS (4.0 - 4.0) <144149F1-057D-3A6F-974B-357461F7E438> /System/Library/Frameworks/NetFS.framework/Versions/A/NetFS
0x9827c000 - 0x98290ff7  com.apple.CFOpenDirectory (10.7 - 144) <708CEADD-B38F-3D74-BFBA-D54477B8561D> /System/Library/Frameworks/OpenDirectory.framework/Versions/A/Frameworks/CFOpenDirectory.framework/Versions/A/CFOpenDirectory
0x98291000 - 0x982b4fff  com.apple.CoreVideo (1.7 - 70.3) <4234C11C-E8E9-309A-9465-27D6D7458895> /System/Library/Frameworks/CoreVideo.framework/Versions/A/CoreVideo
0x982b5000 - 0x982b5fff  libdnsinfo.dylib (395.11.0 - compatibility 1.0.0) <7EFAD88C-AFBC-3D48-BE14-60B8EACC68D7> /usr/lib/system/libdnsinfo.dylib
0x982b6000 - 0x98318ff3  libstdc++.6.dylib (52.0.0 - compatibility 7.0.0) <266CE9B3-526A-3C41-BA58-7AE66A3B15FD> /usr/lib/libstdc++.6.dylib
0x98df0000 - 0x98df2ff9  com.apple.securityhi (4.0 - 1) <BD367302-73C3-32F4-8080-E389AE89E434> /System/Library/Frameworks/Carbon.framework/Versions/A/Frameworks/SecurityHI.framework/Versions/A/SecurityHI
0x98df3000 - 0x98edbfff  libxml2.2.dylib (10.3.0 - compatibility 10.0.0) <1841196F-68B5-309F-8ED1-6714B1DFEC83> /usr/lib/libxml2.2.dylib
0x98edc000 - 0x98f69ff7  com.apple.CoreText (220.22.0 - ???) <EA7210A7-DECC-3F76-8A66-D4E41859B3C6> /System/Library/Frameworks/ApplicationServices.framework/Versions/A/Frameworks/CoreText.framework/Versions/A/CoreText
0x98f6a000 - 0x98fb1ff5  com.apple.opencl (2.0.19 - 2.0.19) <7689E7B9-EE5A-3F74-8699-4CDED9162260> /System/Library/Frameworks/OpenCL.framework/Versions/A/OpenCL
0x98fb2000 - 0x98fcffff  libresolv.9.dylib (46.1.0 - compatibility 1.0.0) <2870320A-28DA-3B44-9D82-D56E0036F6BB> /usr/lib/libresolv.9.dylib
0x98fd0000 - 0x9902dffb  com.apple.htmlrendering (76 - 1.1.4) <792F1D51-3A88-3430-8A32-F252FAAE0D13> /System/Library/Frameworks/Carbon.framework/Versions/A/Frameworks/HTMLRendering.framework/Versions/A/HTMLRendering
0x9902e000 - 0x991e2ff3  libicucore.A.dylib (46.1.0 - compatibility 1.0.0) <4AFF6FC3-6283-3934-8EFC-CA227CA11164> /usr/lib/libicucore.A.dylib
0x99670000 - 0x99674fff  com.apple.CommonPanels (1.2.5 - 94) <DFA0D001-9890-32FB-B1BD-039DDA8F3E9E> /System/Library/Frameworks/Carbon.framework/Versions/A/Frameworks/CommonPanels.framework/Versions/A/CommonPanels
0x99675000 - 0x996d6ffb  com.apple.audio.CoreAudio (4.0.3 - 4.0.3) <7A14BE52-6789-3CE3-9AE9-B733F4903EB1> /System/Library/Frameworks/CoreAudio.framework/Versions/A/CoreAudio
0x996d7000 - 0x996e0fff  libc++abi.dylib (14.0.0 - compatibility 1.0.0) <FEB5330E-AD5D-37A0-8AB2-0820F311A2C8> /usr/lib/libc++abi.dylib
0x996e1000 - 0x996e1fff  com.apple.Carbon (153 - 153) <A75A970B-6D82-3451-8D3E-05B1A130ABDE> /System/Library/Frameworks/Carbon.framework/Versions/A/Carbon
0x9974f000 - 0x99750ff7  libsystem_sandbox.dylib (??? - ???) <26960D2B-BEA6-3B3B-9BC7-D73437EF4149> /usr/lib/system/libsystem_sandbox.dylib
0x9977d000 - 0x997a2ff9  libJPEG.dylib (??? - ???) <743578F6-8C0C-39CC-9F15-3A01E1616EAE> /System/Library/Frameworks/ApplicationServices.framework/Versions/A/Frameworks/ImageIO.framework/Versions/A/Resources/libJPEG.dylib
0x997a3000 - 0x99886ff7  libcrypto.0.9.8.dylib (44.0.0 - compatibility 0.9.8) <BD913D3B-388D-33AE-AA5E-4810C743C28F> /usr/lib/libcrypto.0.9.8.dylib
0x9990b000 - 0x99948ff7  libcups.2.dylib (2.9.0 - compatibility 2.0.0) <007A1877-E981-3007-A8FA-9B179F4ED6D1> /usr/lib/libcups.2.dylib
0x99949000 - 0x99963fff  com.apple.Kerberos (1.0 - 1) <D7920A1C-FEC4-3460-8DD0-D02491578CBB> /System/Library/Frameworks/Kerberos.framework/Versions/A/Kerberos
0x9a379000 - 0x9a37aff0  libunc.dylib (24.0.0 - compatibility 1.0.0) <9EF47F4C-32F6-3379-A3DD-89183D821B48> /usr/lib/system/libunc.dylib
0x9a37b000 - 0x9a3effff  com.apple.CoreSymbolication (2.2 - 73.2) <FA9305CA-FB9B-3646-8C41-FF8DF15AB2C1> /System/Library/PrivateFrameworks/CoreSymbolication.framework/Versions/A/CoreSymbolication
0x9a3f0000 - 0x9a3faff2  com.apple.audio.SoundManager (3.9.4.1 - 3.9.4.1) <2A089CE8-9760-3F0F-B77D-29A78940EA17> /System/Library/Frameworks/Carbon.framework/Versions/A/Frameworks/CarbonSound.framework/Versions/A/CarbonSound
0x9a3fb000 - 0x9a50aff7  com.apple.DesktopServices (1.6.5 - 1.6.5) <CEC069D7-37A3-3D25-A3BB-39DE99FDA46E> /System/Library/PrivateFrameworks/DesktopServicesPriv.framework/Versions/A/DesktopServicesPriv
0x9a50b000 - 0x9a511ffb  com.apple.print.framework.Print (7.4 - 247.3) <CB075EEE-FA1F-345C-A1B5-1AB266FC73A1> /System/Library/Frameworks/Carbon.framework/Versions/A/Frameworks/Print.framework/Versions/A/Print
0x9a5be000 - 0x9b053ff6  com.apple.AppKit (6.7.5 - 1138.51) <B9D3DCA0-9765-354E-9730-75A45A97DDFD> /System/Library/Frameworks/AppKit.framework/Versions/C/AppKit
0x9b0a8000 - 0x9b584ff6  libBLAS.dylib (??? - ???) <134ABFC6-F29E-3DC5-8E57-E13CB6EF7B41> /System/Library/Frameworks/Accelerate.framework/Versions/A/Frameworks/vecLib.framework/Versions/A/libBLAS.dylib
0x9b585000 - 0x9b5adff7  libxslt.1.dylib (3.24.0 - compatibility 3.0.0) <AB530FB2-8BD1-3328-95E8-CF449F0429CA> /usr/lib/libxslt.1.dylib
0x9b600000 - 0x9b6cbfff  libsystem_c.dylib (763.13.0 - compatibility 1.0.0) <52421B00-79C8-3727-94DE-62F6820B9C31> /usr/lib/system/libsystem_c.dylib
0x9b6cc000 - 0x9b6d0ffd  IOSurface (??? - ???) <EDDBEE65-1EB8-33A7-9972-E361A3508234> /System/Library/Frameworks/IOSurface.framework/Versions/A/IOSurface
0x9ba96000 - 0x9baa4fff  libz.1.dylib (1.2.5 - compatibility 1.0.0) <E73A4025-835C-3F73-9853-B08606E892DB> /usr/lib/libz.1.dylib
0x9c266000 - 0x9c283ff3  com.apple.openscripting (1.3.3 - ???) <0579A4CB-FD6F-3D7F-A17B-AC0F2CF11FC7> /System/Library/Frameworks/Carbon.framework/Versions/A/Frameworks/OpenScripting.framework/Versions/A/OpenScripting
0x9c284000 - 0x9c2d4ffa  libTIFF.dylib (??? - ???) <9511A31E-070C-313E-8320-AAB683AD0653> /System/Library/Frameworks/ApplicationServices.framework/Versions/A/Frameworks/ImageIO.framework/Versions/A/Resources/libTIFF.dylib
0x9c309000 - 0x9c3f9ff1  libiconv.2.dylib (7.0.0 - compatibility 7.0.0) <9E5F86A3-8405-3774-9E0C-3A074273C96D> /usr/lib/libiconv.2.dylib
0x9c3fa000 - 0x9c487fe7  libvMisc.dylib (325.4.0 - compatibility 1.0.0) <F2A8BBA3-6431-3CED-8CD3-0953410B6F96> /System/Library/Frameworks/Accelerate.framework/Versions/A/Frameworks/vecLib.framework/Versions/A/libvMisc.dylib
0x9c488000 - 0x9c48bff7  libmathCommon.A.dylib (2026.0.0 - compatibility 1.0.0) <69357047-7BE0-3360-A36D-000F55E39336> /usr/lib/system/libmathCommon.A.dylib
0x9c48c000 - 0x9c48dfff  libsystem_blocks.dylib (53.0.0 - compatibility 1.0.0) <B04592B1-0924-3422-82FF-976B339DF567> /usr/lib/system/libsystem_blocks.dylib
0x9c48e000 - 0x9c496ff3  libunwind.dylib (30.0.0 - compatibility 1.0.0) <E8DA8CEC-12D6-3C8D-B2E2-5D567C8F3CB5> /usr/lib/system/libunwind.dylib
0x9c497000 - 0x9c4a2ffc  com.apple.NetAuth (1.0 - 3.0) <E4844688-90B6-3834-9C36-395797CEBC69> /System/Library/PrivateFrameworks/NetAuth.framework/Versions/A/NetAuth
0x9c4a3000 - 0x9c4a6ffb  com.apple.help (1.3.2 - 42) <46BC94D1-14C4-3178-9BFB-85470F1ED805> /System/Library/Frameworks/Carbon.framework/Versions/A/Frameworks/Help.framework/Versions/A/Help
0x9c8d3000 - 0x9c90afef  com.apple.DebugSymbols (2.1 - 87) <EB951B78-31A5-379F-AFA1-B5C9A7BB3D23> /System/Library/PrivateFrameworks/DebugSymbols.framework/Versions/A/DebugSymbols
0x9c90c000 - 0x9c967ff3  com.apple.Symbolication (1.3 - 91) <4D12D2EC-5010-3958-A205-9A67E972C76A> /System/Library/PrivateFrameworks/Symbolication.framework/Versions/A/Symbolication
0x9c968000 - 0x9c9a5fef  libGLImage.dylib (??? - ???) <FC13D46F-69C4-3BA1-A5E8-52C2EC8B7D58> /System/Library/Frameworks/OpenGL.framework/Versions/A/Libraries/libGLImage.dylib
0x9cab5000 - 0x9cb30ffb  com.apple.ApplicationServices.ATS (317.12.0 - ???) <4D124B65-3D43-32E9-B296-3671347BB888> /System/Library/Frameworks/ApplicationServices.framework/Versions/A/Frameworks/ATS.framework/Versions/A/ATS
0x9cb31000 - 0x9cb41fff  com.apple.LangAnalysis (1.7.0 - 1.7.0) <8BE2D2EF-9AF0-3960-9845-052CCE04B53A> /System/Library/Frameworks/ApplicationServices.framework/Versions/A/Frameworks/LangAnalysis.framework/Versions/A/LangAnalysis
0x9cb42000 - 0x9cc52fe7  libsqlite3.dylib (9.6.0 - compatibility 9.0.0) <34E1E3CC-7B6A-3B37-8D07-1258D11E16CB> /usr/lib/libsqlite3.dylib
0x9cc53000 - 0x9cc54fff  liblangid.dylib (??? - ???) <C8C204E9-1785-3785-BBD7-22D59493B98B> /usr/lib/liblangid.dylib
0x9cc55000 - 0x9ccebff7  com.apple.LaunchServices (480.40 - 480.40) <D5C0DEF9-398C-3742-8C4E-875C3365EC8B> /System/Library/Frameworks/CoreServices.framework/Versions/A/Frameworks/LaunchServices.framework/Versions/A/LaunchServices
0x9cdb9000 - 0x9cf1bffb  com.apple.QuartzCore (1.7 - 270.5) <6D0EC7FC-11E5-35FB-A08A-3B438E89FBDB> /System/Library/Frameworks/QuartzCore.framework/Versions/A/QuartzCore

External Modification Summary:
  Calls made by other processes targeting this process:
    task_for_pid: 2
    thread_create: 0
    thread_set_state: 0
  Calls made by this process:
    task_for_pid: 0
    thread_create: 0
    thread_set_state: 0
  Calls made by all processes on this machine:
    task_for_pid: 3764
    thread_create: 1
    thread_set_state: 0

VM Region Summary:
ReadOnly portion of Libraries: Total=160.5M resident=54.0M(34%) swapped_out_or_unallocated=106.5M(66%)
Writable regions: Total=214.7M written=172.4M(80%) resident=191.8M(89%) swapped_out=0K(0%) unallocated=22.9M(11%)

REGION TYPE                      VIRTUAL
===========                      =======
CG backing stores                   424K
CG shared images                   1216K
CoreGraphics                          8K
CoreServices                       4188K
MALLOC                            185.5M
MALLOC guard page                    48K
Memory tag=240                        4K
Memory tag=242                       12K
Stack                              66.5M
Stack (reserved)                    516K        reserved VM address space (unallocated)
VM_ALLOCATE                        16.1M
__CI_BITMAP                          80K
__DATA                             7248K
__DATA/__OBJC                       124K
__IMAGE                             528K
__IMPORT                              4K
__LINKEDIT                         49.2M
__OBJC                             1476K
__OBJC/__DATA                        60K
__PAGEZERO                            4K
__TEXT                            111.3M
__UNICODE                           544K
mapped file                       188.4M
shared memory                       312K
shared pmap                        10.4M
===========                      =======
TOTAL                             643.8M
TOTAL, minus reserved VM space    643.3M
```
 

comment number: 15572740 
body: I have encountered the same issue with version 0.8.1

mba:MacOS fredrik$ ./Bitcoin-Qt 
Assertion failed: (pfork != NULL), function SetBestChain, file src/main.cpp, line 1742.

---

```
Process:         Bitcoin-Qt [15994]
Path:            /Applications/Bitcoin-Qt.app/Contents/MacOS/./Bitcoin-Qt
Identifier:      com.yourcompany.Bitcoin-Qt
Version:         ???
Code Type:       X86 (Native)
Parent Process:  bash [15906]
User ID:         501

Date/Time:       2013-03-28 08:38:44.042 +0100
OS Version:      Mac OS X 10.8.3 (12D78)
Report Version:  10

Crashed Thread:  0  Dispatch queue: com.apple.main-thread

Exception Type:  EXC_CRASH (SIGABRT)
Exception Codes: 0x0000000000000000, 0x0000000000000000

Application Specific Information:
Assertion failed: (pfork != NULL), function SetBestChain, file src/main.cpp, line 1742.


Thread 0 Crashed:: Dispatch queue: com.apple.main-thread
0   libsystem_kernel.dylib          0x91e39a6a __pthread_kill + 10
1   libsystem_c.dylib               0x9018eb2f pthread_kill + 101
2   libsystem_c.dylib               0x901c54ec abort + 168
3   libsystem_c.dylib               0x901d3d2b __assert_rtn + 326
4   com.yourcompany.Bitcoin-Qt      0x000d1656 SetBestChain(CValidationState&, CBlockIndex*) + 2454
5   com.yourcompany.Bitcoin-Qt      0x000d3526 ConnectBestBlock(CValidationState&) + 598
6   com.yourcompany.Bitcoin-Qt      0x0011cbd7 AppInit2() + 16839
7   com.yourcompany.Bitcoin-Qt      0x000229e3 main + 7603
8   com.yourcompany.Bitcoin-Qt      0x0001f921 start + 53

Thread 1:
0   libsystem_kernel.dylib          0x91e3a0ee __workq_kernreturn + 10
1   libsystem_c.dylib               0x901900ac _pthread_workq_return + 45
2   libsystem_c.dylib               0x9018fe79 _pthread_wqthread + 448
3   libsystem_c.dylib               0x90177d2a start_wqthread + 30

Thread 2:: Dispatch queue: com.apple.libdispatch-manager
0   libsystem_kernel.dylib          0x91e3a9ae kevent + 10
1   libdispatch.dylib               0x9000bc71 _dispatch_mgr_invoke + 993
2   libdispatch.dylib               0x9000b7a9 _dispatch_mgr_thread + 53

Thread 3:
0   libsystem_kernel.dylib          0x91e39be6 __select + 10
1   QtCore                          0x019dea90 qt_safe_select(int, fd_set*, fd_set*, fd_set*, timeval const*) + 320
2   QtCore                          0x019e2dda QEventDispatcherUNIXPrivate::doSelect(QFlags<QEventLoop::ProcessEventsFlag>, timeval*) + 394
3   QtCore                          0x019e326f QEventDispatcherUNIX::processEvents(QFlags<QEventLoop::ProcessEventsFlag>) + 175
4   QtCore                          0x019ac471 QEventLoop::processEvents(QFlags<QEventLoop::ProcessEventsFlag>) + 65
5   QtCore                          0x019ac84a QEventLoop::exec(QFlags<QEventLoop::ProcessEventsFlag>) + 314
6   QtCore                          0x0188aa45 QThread::exec() + 261
7   QtCore                          0x0188e0d3 QThread::terminate() + 787
8   libsystem_c.dylib               0x9018d5b7 _pthread_start + 344
9   libsystem_c.dylib               0x90177d4e thread_start + 34

Thread 4:
0   libsystem_kernel.dylib          0x91e398e2 __psynch_cvwait + 10
1   libsystem_c.dylib               0x90192280 _pthread_cond_wait + 833
2   libsystem_c.dylib               0x90218095 pthread_cond_wait$UNIX2003 + 71
3   com.yourcompany.Bitcoin-Qt      0x000af522 boost::condition_variable::wait(boost::unique_lock<boost::mutex>&) + 226
4   com.yourcompany.Bitcoin-Qt      0x0010fa0d CCheckQueue<CScriptCheck>::Loop(bool) + 413
5   com.yourcompany.Bitcoin-Qt      0x000bf55f ThreadScriptCheck(void*) + 79
6   libboost_thread-mt.dylib        0x00cd4845 boost::detail::thread_data_base::~thread_data_base() + 779
7   libsystem_c.dylib               0x9018d5b7 _pthread_start + 344
8   libsystem_c.dylib               0x90177d4e thread_start + 34

Thread 5:
0   libsystem_kernel.dylib          0x91e398e2 __psynch_cvwait + 10
1   libsystem_c.dylib               0x90192280 _pthread_cond_wait + 833
2   libsystem_c.dylib               0x90218095 pthread_cond_wait$UNIX2003 + 71
3   com.yourcompany.Bitcoin-Qt      0x000af522 boost::condition_variable::wait(boost::unique_lock<boost::mutex>&) + 226
4   com.yourcompany.Bitcoin-Qt      0x0010fa0d CCheckQueue<CScriptCheck>::Loop(bool) + 413
5   com.yourcompany.Bitcoin-Qt      0x000bf55f ThreadScriptCheck(void*) + 79
6   libboost_thread-mt.dylib        0x00cd4845 boost::detail::thread_data_base::~thread_data_base() + 779
7   libsystem_c.dylib               0x9018d5b7 _pthread_start + 344
8   libsystem_c.dylib               0x90177d4e thread_start + 34

Thread 6:
0   libsystem_kernel.dylib          0x91e398e2 __psynch_cvwait + 10
1   libsystem_c.dylib               0x90192280 _pthread_cond_wait + 833
2   libsystem_c.dylib               0x90218095 pthread_cond_wait$UNIX2003 + 71
3   com.yourcompany.Bitcoin-Qt      0x000af522 boost::condition_variable::wait(boost::unique_lock<boost::mutex>&) + 226
4   com.yourcompany.Bitcoin-Qt      0x0010fa0d CCheckQueue<CScriptCheck>::Loop(bool) + 413
5   com.yourcompany.Bitcoin-Qt      0x000bf55f ThreadScriptCheck(void*) + 79
6   libboost_thread-mt.dylib        0x00cd4845 boost::detail::thread_data_base::~thread_data_base() + 779
7   libsystem_c.dylib               0x9018d5b7 _pthread_start + 344
8   libsystem_c.dylib               0x90177d4e thread_start + 34

Thread 7:
0   libsystem_kernel.dylib          0x91e3a0ee __workq_kernreturn + 10
1   libsystem_c.dylib               0x901900ac _pthread_workq_return + 45
2   libsystem_c.dylib               0x9018fe79 _pthread_wqthread + 448
3   libsystem_c.dylib               0x90177d2a start_wqthread + 30

Thread 8:
0   libsystem_kernel.dylib          0x91e3a0ee __workq_kernreturn + 10
1   libsystem_c.dylib               0x901900ac _pthread_workq_return + 45
2   libsystem_c.dylib               0x9018fe79 _pthread_wqthread + 448
3   libsystem_c.dylib               0x90177d2a start_wqthread + 30

Thread 9:
0   libsystem_kernel.dylib          0x91e398e2 __psynch_cvwait + 10
1   libsystem_c.dylib               0x90192280 _pthread_cond_wait + 833
2   libsystem_c.dylib               0x902180e0 pthread_cond_timedwait$UNIX2003 + 70
3   libboost_thread-mt.dylib        0x00cdbe2b boost::condition_variable::do_timed_wait(boost::unique_lock<boost::mutex>&, timespec const&) + 289
4   libboost_thread-mt.dylib        0x00cd54f8 boost::this_thread::sleep(boost::posix_time::ptime const&) + 548
5   com.yourcompany.Bitcoin-Qt      0x00165994 ThreadFlushWalletDB(void*) + 420
6   libboost_thread-mt.dylib        0x00cd4845 boost::detail::thread_data_base::~thread_data_base() + 779
7   libsystem_c.dylib               0x9018d5b7 _pthread_start + 344
8   libsystem_c.dylib               0x90177d4e thread_start + 34

Thread 0 crashed with X86 Thread State (32-bit):
  eax: 0x00000000  ebx: 0xac01613c  ecx: 0xbfffe27c  edx: 0x91e39a6a
  edi: 0xac01ba28  esi: 0x00000006  ebp: 0xbfffe298  esp: 0xbfffe27c
   ss: 0x00000023  efl: 0x00200206  eip: 0x91e39a6a   cs: 0x0000000b
   ds: 0x00000023   es: 0x00000023   fs: 0x00000000   gs: 0x0000000f
  cr2: 0x054fc000
Logical CPU: 0

Binary Images:
    0x1000 -   0x5b3fef +com.yourcompany.Bitcoin-Qt (???) <B353FA8B-4A03-D8BC-EAC8-E1DA0E20F48A> /Applications/Bitcoin-Qt.app/Contents/MacOS/Bitcoin-Qt
  0x87e000 -   0x883fe7 +libqrencode.3.dylib (5.1) <9627FE72-1198-798B-1841-A64F967F32FB> /Applications/Bitcoin-Qt.app/Contents/Frameworks/libqrencode.3.dylib
  0x887000 -   0x88eff7 +libminiupnpc.8.dylib (0) <2DBB7FA6-2198-8004-2ECF-F504F2081317> /Applications/Bitcoin-Qt.app/Contents/Frameworks/libminiupnpc.8.dylib
  0x892000 -   0x8defff +libssl.1.0.0.dylib (1) <641EBBF5-C97C-1D6C-EFF0-EB02A7FF7629> /Applications/Bitcoin-Qt.app/Contents/Frameworks/libssl.1.0.0.dylib
  0x8f8000 -   0xa30fef +libcrypto.1.0.0.dylib (1) <0943ABB0-E2CA-20EC-B52D-E3D5E2340F02> /Applications/Bitcoin-Qt.app/Contents/Frameworks/libcrypto.1.0.0.dylib
  0xa99000 -   0xbf2fff +libdb_cxx-4.8.dylib (0) <A2028F0C-1E73-00A3-BA80-2DEF2EAC9ECB> /Applications/Bitcoin-Qt.app/Contents/Frameworks/libdb_cxx-4.8.dylib
  0xc1c000 -   0xc1fff3 +libboost_system-mt.dylib (0) <DC2F474D-A848-B1CA-5E46-EAB30E94A639> /Applications/Bitcoin-Qt.app/Contents/Frameworks/libboost_system-mt.dylib
  0xc23000 -   0xc36ffb +libboost_filesystem-mt.dylib (0) <ED32F1B3-0C00-9EA8-A6E4-B4D69BBB090B> /Applications/Bitcoin-Qt.app/Contents/Frameworks/libboost_filesystem-mt.dylib
  0xc41000 -   0xc85ff3 +libboost_program_options-mt.dylib (0) <DAE91877-14DE-370A-9571-A2EC1D7AF3D8> /Applications/Bitcoin-Qt.app/Contents/Frameworks/libboost_program_options-mt.dylib
  0xcd0000 -   0xce2ff3 +libboost_thread-mt.dylib (0) <4F1F450A-6305-F698-98AC-E82075E11758> /Applications/Bitcoin-Qt.app/Contents/Frameworks/libboost_thread-mt.dylib
  0xd02000 -  0x1692fe3 +QtGui (4.8.4) <C70071A5-F36B-C018-9BEB-181811A0759F> /Applications/Bitcoin-Qt.app/Contents/Frameworks/QtGui.framework/Versions/4/QtGui
 0x1869000 -  0x1b18ffb +QtCore (4.8.4) <204CC6C5-048C-4746-D9AD-DF6FA3204CE7> /Applications/Bitcoin-Qt.app/Contents/Frameworks/QtCore.framework/Versions/4/QtCore
 0x1b8a000 -  0x1b9bfe7 +libz.1.dylib (1.2.7) <04F507FA-B0BF-CD40-DB2E-CBF29500AF19> /Applications/Bitcoin-Qt.app/Contents/Frameworks/libz.1.dylib
 0x1b9f000 -  0x1bc0fe7 +libpng15.15.dylib (30) <2E174E7D-8E8B-9F51-6A39-53D3243C159E> /Applications/Bitcoin-Qt.app/Contents/Frameworks/libpng15.15.dylib
 0x1e84000 -  0x1f42ff3  ColorSyncDeprecated.dylib (400) <35E3054C-5DF1-30D4-A368-C4FDB0992373> /System/Library/Frameworks/ApplicationServices.framework/Versions/A/Frameworks/ColorSync.framework/Versions/A/Resources/ColorSyncDeprecated.dylib
 0x1f91000 -  0x1f9eff3  com.apple.Librarian (1.1 - 1) <68F8F983-5F16-3BA5-BDA7-1A5451CC02BB> /System/Library/PrivateFrameworks/Librarian.framework/Versions/A/Librarian
 0x54ae000 -  0x54b2ff3 +libqgif.dylib (0) <88247A6C-7963-6E25-F271-07D15F98CF45> /Applications/Bitcoin-Qt.app/Contents/PlugIns/imageformats/libqgif.dylib
 0x54b7000 -  0x54bbfff +libqico.dylib (0) <7AE39AE4-C88A-D835-F6DB-43C38C12D8C9> /Applications/Bitcoin-Qt.app/Contents/PlugIns/imageformats/libqico.dylib
 0x54c0000 -  0x54c4fff +libqjpeg.dylib (0) <0D0902B6-EB00-4DEA-37B8-43EEB3552921> /Applications/Bitcoin-Qt.app/Contents/PlugIns/imageformats/libqjpeg.dylib
 0x54ed000 -  0x54f0ff7 +libqmng.dylib (0) <AED7B482-BE3B-C70A-3E5B-7575C58DBCE3> /Applications/Bitcoin-Qt.app/Contents/PlugIns/imageformats/libqmng.dylib
 0x54f5000 -  0x54f7ffb +libqtga.dylib (0) <DF371BC0-F930-689E-9654-D687DE08B059> /Applications/Bitcoin-Qt.app/Contents/PlugIns/imageformats/libqtga.dylib
 0x5e04000 -  0x5e34fe7 +libjpeg.8.dylib (13) <96B28C90-BE02-5517-87BC-EC348C2EE25C> /Applications/Bitcoin-Qt.app/Contents/Frameworks/libjpeg.8.dylib
 0x5f20000 -  0x5f5bff3 +libqtaccessiblewidgets.dylib (0) <D256CDF3-59B6-AAC8-D553-A348D30AFD9C> /Applications/Bitcoin-Qt.app/Contents/PlugIns/accessible/libqtaccessiblewidgets.dylib
 0x5f73000 -  0x5fc0fe7 +libmng.1.dylib (2) <1A7593E8-6C76-5533-E1BE-51976CB1873C> /Applications/Bitcoin-Qt.app/Contents/Frameworks/libmng.1.dylib
 0x5fd5000 -  0x5fd9ffb +libqtiff.dylib (0) <D9486AA9-E3DB-C1BF-A248-E5689EC8B768> /Applications/Bitcoin-Qt.app/Contents/PlugIns/imageformats/libqtiff.dylib
 0xa3de000 -  0xa406fe7 +liblcms.1.dylib (2.19) <81794FD6-C0FC-79D3-7188-36318A86427A> /Applications/Bitcoin-Qt.app/Contents/Frameworks/liblcms.1.dylib
 0xa410000 -  0xa462fe7 +libtiff.3.dylib (13.7) <27FC7F5B-604D-360A-9D36-7567BEA4D1AD> /Applications/Bitcoin-Qt.app/Contents/Frameworks/libtiff.3.dylib
0x8fe66000 - 0x8fe98e57  dyld (210.2.3) <23516BE4-29BE-350C-91C9-F36E7999F0F1> /usr/lib/dyld
0x90007000 - 0x90019ff7  libdispatch.dylib (228.23) <86EF7D45-2D97-3465-A449-95038AE5DABA> /usr/lib/system/libdispatch.dylib
0x9001a000 - 0x90112ff9  libsqlite3.dylib (138.1) <AD7C5914-35F0-37A3-9238-A29D2E26C755> /usr/lib/libsqlite3.dylib
0x9016e000 - 0x90176fff  libcopyfile.dylib (89) <4963541B-0254-371B-B29A-B6806888949B> /usr/lib/system/libcopyfile.dylib
0x90177000 - 0x90234feb  libsystem_c.dylib (825.26) <6E35A83F-1A5B-3AF9-8C6D-D7B57B25FB63> /usr/lib/system/libsystem_c.dylib
0x90261000 - 0x90273fff  libbsm.0.dylib (32) <DADD385E-FE53-3458-94FB-E316A6345108> /usr/lib/libbsm.0.dylib
0x90274000 - 0x90274fff  com.apple.ApplicationServices (45 - 45) <677C4ACC-9D12-366F-8A87-B898AC806DD9> /System/Library/Frameworks/ApplicationServices.framework/Versions/A/ApplicationServices
0x90279000 - 0x9027dff7  libmacho.dylib (829) <5280A013-4F74-3F74-BE0C-7F612C49F1DC> /usr/lib/system/libmacho.dylib
0x9027e000 - 0x90297fff  com.apple.Kerberos (2.0 - 1) <9BDE8F4D-DBC3-34D1-852C-898D3655A611> /System/Library/Frameworks/Kerberos.framework/Versions/A/Kerberos
0x90695000 - 0x906e3ffb  libFontRegistry.dylib (100) <3B8350C2-4D8F-38C4-A22E-2F855D7E83D1> /System/Library/Frameworks/ApplicationServices.framework/Versions/A/Frameworks/ATS.framework/Versions/A/Resources/libFontRegistry.dylib
0x9071a000 - 0x908a3ff7  com.apple.vImage (6.0 - 6.0) <1D1F67FE-4F75-3689-BEF6-4A46C8039E70> /System/Library/Frameworks/Accelerate.framework/Versions/A/Frameworks/vImage.framework/Versions/A/vImage
0x908a4000 - 0x908f0fff  libcorecrypto.dylib (106.2) <20EBADBA-D6D6-36F0-AE80-168E9AF13DB6> /usr/lib/system/libcorecrypto.dylib
0x908f1000 - 0x908f4ff7  libcompiler_rt.dylib (30) <CE5DBDB4-0124-3E2B-9105-989DF98DD108> /usr/lib/system/libcompiler_rt.dylib
0x908f6000 - 0x908f7fff  libsystem_sandbox.dylib (220.2) <61A79095-1978-3AAA-B0E0-658BC8E5F045> /usr/lib/system/libsystem_sandbox.dylib
0x9095b000 - 0x90a0aff7  com.apple.CoreText (260.0 - 275.16) <873ADCD9-D361-3753-A220-CDD289196AD8> /System/Library/Frameworks/CoreText.framework/Versions/A/CoreText
0x90a0b000 - 0x90afcffc  libiconv.2.dylib (34) <B096A9B7-83A6-31B3-8D2F-87D91910BF4C> /usr/lib/libiconv.2.dylib
0x90afd000 - 0x90c4bfff  com.apple.CFNetwork (596.3.3 - 596.3.3) <EC7EF37B-B00E-374D-9E8F-E4E22D741059> /System/Library/Frameworks/CFNetwork.framework/Versions/A/CFNetwork
0x90c56000 - 0x90c5afff  com.apple.OpenDirectory (10.8 - 151.10) <A1858D81-086F-3BF5-87E3-9B70409FFDF6> /System/Library/Frameworks/OpenDirectory.framework/Versions/A/OpenDirectory
0x91469000 - 0x914fbffb  libvMisc.dylib (380.6) <6DA3A03F-20BE-300D-A664-B50A7B4E4B1A> /System/Library/Frameworks/Accelerate.framework/Versions/A/Frameworks/vecLib.framework/Versions/A/libvMisc.dylib
0x914fc000 - 0x9150afff  com.apple.opengl (1.8.7 - 1.8.7) <0631EC1D-833B-39D2-A907-A9F7617E5504> /System/Library/Frameworks/OpenGL.framework/Versions/A/OpenGL
0x9150b000 - 0x91512ffb  libunwind.dylib (35.1) <E1E8D8B3-3C78-3AB1-B398-C180DC6DCF05> /usr/lib/system/libunwind.dylib
0x91513000 - 0x91519fff  com.apple.print.framework.Print (8.0 - 258) <12AEAD24-6924-3923-9E4A-C5D21231E639> /System/Library/Frameworks/Carbon.framework/Versions/A/Frameworks/Print.framework/Versions/A/Print
0x9151a000 - 0x9157eff3  libstdc++.6.dylib (56) <F8FA490A-8F3C-3645-ABF5-78926CE9C62C> /usr/lib/libstdc++.6.dylib
0x9157f000 - 0x9158efff  libGL.dylib (8.7.25) <818E3E6B-9B00-3117-8157-9E95CB59A47B> /System/Library/Frameworks/OpenGL.framework/Versions/A/Libraries/libGL.dylib
0x916a3000 - 0x916fefff  com.apple.htmlrendering (77 - 1.1.4) <5C0C669F-AE07-3983-B38F-EB829B5CE609> /System/Library/Frameworks/Carbon.framework/Versions/A/Frameworks/HTMLRendering.framework/Versions/A/HTMLRendering
0x916ff000 - 0x91857ffb  com.apple.audio.toolbox.AudioToolbox (1.8 - 1.8) <0D36953C-9897-3E9B-8C70-847E90B203A2> /System/Library/Frameworks/AudioToolbox.framework/Versions/A/AudioToolbox
0x91b44000 - 0x91baafff  com.apple.print.framework.PrintCore (8.3 - 387.2) <0F7665F5-33F0-3661-9BE2-7DD2890E304B> /System/Library/Frameworks/ApplicationServices.framework/Versions/A/Frameworks/PrintCore.framework/Versions/A/PrintCore
0x91bfc000 - 0x91c06fff  libCSync.A.dylib (331.0.4) <71A7B331-C8A2-322C-AFB0-062EE9C3B848> /System/Library/Frameworks/ApplicationServices.framework/Versions/A/Frameworks/CoreGraphics.framework/Versions/A/Resources/libCSync.A.dylib
0x91c07000 - 0x91c6fff7  com.apple.framework.IOKit (2.0.1 - 755.22.5) <F9A70D23-1108-3616-9DE3-6C5730CA7AB2> /System/Library/Frameworks/IOKit.framework/Versions/A/IOKit
0x91c75000 - 0x91cb7ffb  com.apple.RemoteViewServices (2.0 - 80.6) <AE962502-4539-3893-A2EB-9D384652AEAC> /System/Library/PrivateFrameworks/RemoteViewServices.framework/Versions/A/RemoteViewServices
0x91dc7000 - 0x91e15ff3  com.apple.SystemConfiguration (1.12.2 - 1.12.2) <6E858B9F-337A-314E-88B7-24A274ACE568> /System/Library/Frameworks/SystemConfiguration.framework/Versions/A/SystemConfiguration
0x91e16000 - 0x91e24ff7  libz.1.dylib (43) <245F1B61-2276-3BBB-9891-99934116D833> /usr/lib/libz.1.dylib
0x91e25000 - 0x91e3fffc  libsystem_kernel.dylib (2050.22.13) <70C520E8-0394-3DFB-823B-FE8C251C169A> /usr/lib/system/libsystem_kernel.dylib
0x921b9000 - 0x9259cfff  com.apple.HIToolbox (2.0 - 626.1) <ECC3F04F-C4B7-35BF-B10E-183B749DAB92> /System/Library/Frameworks/Carbon.framework/Versions/A/Frameworks/HIToolbox.framework/Versions/A/HIToolbox
0x925f7000 - 0x92704057  libobjc.A.dylib (532.2) <FA455371-7395-3D58-A89B-D1520612D1BC> /usr/lib/libobjc.A.dylib
0x92751000 - 0x92751fff  libkeymgr.dylib (25) <D5E93F7F-9315-3AD6-92C7-941F7B54C490> /usr/lib/system/libkeymgr.dylib
0x92752000 - 0x9275bffd  com.apple.audio.SoundManager (4.0 - 4.0) <ABC5FE40-B222-36EB-9905-5C8C4BFD8C87> /System/Library/Frameworks/Carbon.framework/Versions/A/Frameworks/CarbonSound.framework/Versions/A/CarbonSound
0x9275c000 - 0x92760ffc  libGIF.dylib (849) <2F1DE1C6-4779-35A6-8ED5-BBF8ADD5962A> /System/Library/Frameworks/ImageIO.framework/Versions/A/Resources/libGIF.dylib
0x92761000 - 0x92764ff7  com.apple.TCC (1.0 - 1) <437D76CD-6437-3B55-BE2C-A53508858256> /System/Library/PrivateFrameworks/TCC.framework/Versions/A/TCC
0x927cc000 - 0x927d3fff  libsystem_dnssd.dylib (379.37) <49A44FB3-559D-3C7E-AA40-23F5A8E612AC> /usr/lib/system/libsystem_dnssd.dylib
0x9281c000 - 0x928b3ff7  com.apple.ink.framework (10.8.2 - 150) <D90FF7BC-6B90-39F1-AC52-670269947C58> /System/Library/Frameworks/Carbon.framework/Versions/A/Frameworks/Ink.framework/Versions/A/Ink
0x92917000 - 0x92933fff  libPng.dylib (849) <BF2CB6F5-A2F1-35A4-93F7-ACA6D7F02084> /System/Library/Frameworks/ImageIO.framework/Versions/A/Resources/libPng.dylib
0x9295f000 - 0x929b6ff3  com.apple.HIServices (1.20 - 417) <561A770B-8523-3D09-A763-11F872779A4C> /System/Library/Frameworks/ApplicationServices.framework/Versions/A/Frameworks/HIServices.framework/Versions/A/HIServices
0x929b7000 - 0x929c5fff  libxar.1.dylib (105) <343E4A3B-1D04-34A3-94C2-8C7C9A8F736B> /usr/lib/libxar.1.dylib
0x92a07000 - 0x92b14ff3  com.apple.ImageIO.framework (3.2.0 - 849) <B34C2380-51F6-38B1-BB6C-C2E5185D90EF> /System/Library/Frameworks/ImageIO.framework/Versions/A/ImageIO
0x92b15000 - 0x92b22ff7  com.apple.AppleFSCompression (49 - 1.0) <166AA1F8-E50A-3533-A3B5-8737C5118CC3> /System/Library/PrivateFrameworks/AppleFSCompression.framework/Versions/A/AppleFSCompression
0x92b23000 - 0x92cdfffd  libicucore.A.dylib (491.11.2) <59A23F06-16AD-35F8-BA58-D17305232402> /usr/lib/libicucore.A.dylib
0x92ce0000 - 0x92d2fff6  libTIFF.dylib (849) <229EBA67-A2D3-30B7-8177-3CA5503360EC> /System/Library/Frameworks/ImageIO.framework/Versions/A/Resources/libTIFF.dylib
0x92e25000 - 0x92e25ffd  libOpenScriptingUtil.dylib (148.3) <87895E27-88E2-3249-8D0E-B17E76FB00C1> /usr/lib/libOpenScriptingUtil.dylib
0x92e26000 - 0x93243fff  FaceCoreLight (2.4.1) <571DE3F8-CA8A-3E71-9AF4-F06FFE721CE6> /System/Library/PrivateFrameworks/FaceCoreLight.framework/Versions/A/FaceCoreLight
0x93244000 - 0x93289ff7  com.apple.NavigationServices (3.7 - 200) <F6531764-6E43-3AF3-ACDD-8A5551EF016A> /System/Library/Frameworks/Carbon.framework/Versions/A/Frameworks/NavigationServices.framework/Versions/A/NavigationServices
0x932d7000 - 0x932d9fff  com.apple.securityhi (4.0 - 55002) <62E3AE75-61CB-341E-B2A0-CFC985A2BF7F> /System/Library/Frameworks/Carbon.framework/Versions/A/Frameworks/SecurityHI.framework/Versions/A/SecurityHI
0x932da000 - 0x932ddff9  libCGXType.A.dylib (331.0.4) <981B13D6-4E8B-3468-92D3-FE436B48C0DA> /System/Library/Frameworks/ApplicationServices.framework/Versions/A/Frameworks/CoreGraphics.framework/Versions/A/Resources/libCGXType.A.dylib
0x93672000 - 0x9369bff7  libRIP.A.dylib (331.0.4) <FE496AFC-420A-3712-BC79-FC8C63ADB73D> /System/Library/Frameworks/ApplicationServices.framework/Versions/A/Frameworks/CoreGraphics.framework/Versions/A/Resources/libRIP.A.dylib
0x936ce000 - 0x936d4fff  libGFXShared.dylib (8.7.25) <4268BFAF-4529-3B40-A8B9-66F176AC20CF> /System/Library/Frameworks/OpenGL.framework/Versions/A/Libraries/libGFXShared.dylib
0x936d5000 - 0x936dffff  com.apple.speech.recognition.framework (4.1.5 - 4.1.5) <B855E8B4-2EE3-3BFF-8547-98A0F084F9AF> /System/Library/Frameworks/Carbon.framework/Versions/A/Frameworks/SpeechRecognition.framework/Versions/A/SpeechRecognition
0x936e0000 - 0x9370cff7  libsystem_info.dylib (406.17) <AA5611DB-A944-3072-B6BE-ACAB08689547> /usr/lib/system/libsystem_info.dylib
0x937af000 - 0x937bbffa  com.apple.CrashReporterSupport (10.8.3 - 417) <A4A45B14-8992-3739-82BC-3C5E5C2686F9> /System/Library/PrivateFrameworks/CrashReporterSupport.framework/Versions/A/CrashReporterSupport
0x944f5000 - 0x944f9fff  com.apple.IOSurface (86.0.4 - 86.0.4) <6431ACB6-561B-314F-9A2A-FAC1578FCC86> /System/Library/Frameworks/IOSurface.framework/Versions/A/IOSurface
0x944fa000 - 0x9452bfff  com.apple.DictionaryServices (1.2 - 184.4) <0D5BE86F-F40A-3E39-8569-19FCA5EDF9D3> /System/Library/Frameworks/CoreServices.framework/Versions/A/Frameworks/DictionaryServices.framework/Versions/A/DictionaryServices
0x9479a000 - 0x9479bfff  libquarantine.dylib (52) <D526310F-DC77-37EA-8F5F-83928EFA3262> /usr/lib/system/libquarantine.dylib
0x9479c000 - 0x9479efff  libdyld.dylib (210.2.3) <05D6FF2A-F09B-309D-95F7-7AF10259C707> /usr/lib/system/libdyld.dylib
0x94ea9000 - 0x94eb2ff9  com.apple.CommonAuth (3.0 - 2.0) <34C4768C-EF8D-3DBA-AFB7-09148C8672DB> /System/Library/PrivateFrameworks/CommonAuth.framework/Versions/A/CommonAuth
0x94f2f000 - 0x94fa4ff7  com.apple.ApplicationServices.ATS (332 - 341.1) <95206704-F9C9-33C4-AF25-FE9890E160B2> /System/Library/Frameworks/ApplicationServices.framework/Versions/A/Frameworks/ATS.framework/Versions/A/ATS
0x94fa5000 - 0x94fa5fff  com.apple.CoreServices (57 - 57) <956C6C6D-A5DD-314F-9C57-4A61D41F30CE> /System/Library/Frameworks/CoreServices.framework/Versions/A/CoreServices
0x94fa6000 - 0x94fc3fff  libxpc.dylib (140.42) <1E419D55-C5C1-33FF-B52E-6C7FFBEA5E1F> /usr/lib/system/libxpc.dylib
0x95258000 - 0x95258fff  com.apple.vecLib (3.8 - vecLib 3.8) <83160DD1-5614-3E34-80EB-97041016EF1F> /System/Library/Frameworks/vecLib.framework/Versions/A/vecLib
0x95259000 - 0x9525afff  libremovefile.dylib (23.2) <9813B2DB-2374-3AA2-99B6-AA2E9897B249> /usr/lib/system/libremovefile.dylib
0x9525b000 - 0x9527bffd  com.apple.ChunkingLibrary (2.0 - 133.3) <FA45EAE8-BB10-3AEE-9FDC-C0C3A533FF48> /System/Library/PrivateFrameworks/ChunkingLibrary.framework/Versions/A/ChunkingLibrary
0x95383000 - 0x953e7fff  com.apple.datadetectorscore (4.1 - 269.2) <B4D53047-C613-32F8-9E08-0154EA81B487> /System/Library/PrivateFrameworks/DataDetectorsCore.framework/Versions/A/DataDetectorsCore
0x95479000 - 0x95479ffd  com.apple.audio.units.AudioUnit (1.8 - 1.8) <D35BA73D-1E56-3A1D-9F9F-971F3BF8C136> /System/Library/Frameworks/AudioUnit.framework/Versions/A/AudioUnit
0x9547a000 - 0x95481ff3  com.apple.NetFS (5.0 - 4.0) <1F7041F2-4E97-368C-8F5D-24153D81BBDB> /System/Library/Frameworks/NetFS.framework/Versions/A/NetFS
0x95482000 - 0x9552cfff  com.apple.LaunchServices (539.7 - 539.7) <AF33EBD3-BC0B-30B5-B7DA-5CCCF12D7EDD> /System/Library/Frameworks/CoreServices.framework/Versions/A/Frameworks/LaunchServices.framework/Versions/A/LaunchServices
0x9552d000 - 0x95538fff  libcommonCrypto.dylib (60027) <8EE30FA5-AA8D-3FA6-AB0F-05DA8B0425D9> /usr/lib/system/libcommonCrypto.dylib
0x9556f000 - 0x955b1ff7  libcups.2.dylib (327.3) <C7A4A315-FA15-354B-8BC9-BE824C4EFF6D> /usr/lib/libcups.2.dylib
0x95847000 - 0x95849ffb  libRadiance.dylib (849) <EAF7C74F-2A71-3A07-82E1-4FADEAFCF201> /System/Library/Frameworks/ImageIO.framework/Versions/A/Resources/libRadiance.dylib
0x9584a000 - 0x95a32ffb  com.apple.CoreFoundation (6.8 - 744.18) <68AFEE40-0078-347E-9DEE-32CFE0062A10> /System/Library/Frameworks/CoreFoundation.framework/Versions/A/CoreFoundation
0x95a33000 - 0x95a3cfff  com.apple.CommerceCore (1.0 - 26.1) <8C28115C-6EC1-316D-9237-F4FBCBB778C5> /System/Library/PrivateFrameworks/CommerceKit.framework/Versions/A/Frameworks/CommerceCore.framework/Versions/A/CommerceCore
0x95a3d000 - 0x95a62ffb  com.apple.framework.familycontrols (4.1 - 410) <B1755756-BEA2-3205-ADAA-68FCC32E60BD> /System/Library/PrivateFrameworks/FamilyControls.framework/Versions/A/FamilyControls
0x95a63000 - 0x95a82ff3  com.apple.Ubiquity (1.2 - 243.15) <E10A2937-D671-3D14-AF8D-BA25E601F458> /System/Library/PrivateFrameworks/Ubiquity.framework/Versions/A/Ubiquity
0x95a83000 - 0x95afdff7  com.apple.securityfoundation (6.0 - 55115.4) <A959B2F5-9D9D-3C93-A62A-7399594CF238> /System/Library/Frameworks/SecurityFoundation.framework/Versions/A/SecurityFoundation
0x95afe000 - 0x95b01fff  com.apple.help (1.3.2 - 42) <AD7EB1F0-A068-3A2C-9D59-38E59CEC0D96> /System/Library/Frameworks/Carbon.framework/Versions/A/Frameworks/Help.framework/Versions/A/Help
0x95b02000 - 0x95b04ffd  libCVMSPluginSupport.dylib (8.7.25) <C8FC6227-5209-3138-89CD-03CAD11F3EC3> /System/Library/Frameworks/OpenGL.framework/Versions/A/Libraries/libCVMSPluginSupport.dylib
0x95b05000 - 0x95f47ff3  com.apple.CoreGraphics (1.600.0 - 331.0.4) <BC041647-FB5A-3D07-A253-F3D34E25BF6C> /System/Library/Frameworks/ApplicationServices.framework/Versions/A/Frameworks/CoreGraphics.framework/Versions/A/CoreGraphics
0x95f48000 - 0x96266ff3  com.apple.Foundation (6.8 - 945.16) <C4D95341-B4FF-30AC-815A-A23C019C57A3> /System/Library/Frameworks/Foundation.framework/Versions/C/Foundation
0x96268000 - 0x962a7ff7  com.apple.bom (12.0 - 192) <0637E52C-D151-37B3-904F-8656B2FD44DD> /System/Library/PrivateFrameworks/Bom.framework/Versions/A/Bom
0x962a8000 - 0x962a9fff  liblangid.dylib (116) <E13CC8C5-5034-320A-A210-41A2BDE4F846> /usr/lib/liblangid.dylib
0x962aa000 - 0x96422ff5  com.apple.QuartzCore (1.8 - 304.2) <FB737C74-C460-32A3-9107-D2112BAE6EBC> /System/Library/Frameworks/QuartzCore.framework/Versions/A/QuartzCore
0x96423000 - 0x9655eff7  libBLAS.dylib (1073.4) <FF74A147-05E1-37C4-BC10-7DEB57FE5326> /System/Library/Frameworks/Accelerate.framework/Versions/A/Frameworks/vecLib.framework/Versions/A/libBLAS.dylib
0x967fa000 - 0x9680aff2  com.apple.LangAnalysis (1.7.0 - 1.7.0) <875363E7-6D02-3229-A9DD-E5A5568A7D61> /System/Library/Frameworks/ApplicationServices.framework/Versions/A/Frameworks/LangAnalysis.framework/Versions/A/LangAnalysis
0x9680b000 - 0x96834fff  libxslt.1.dylib (11.3) <0DE17DAA-66FF-3195-AADB-347BEB5E2EFA> /usr/lib/libxslt.1.dylib
0x96835000 - 0x96836ffd  com.apple.TrustEvaluationAgent (2.0 - 23) <E42347C0-2D3C-36A4-9200-757FFA61B388> /System/Library/PrivateFrameworks/TrustEvaluationAgent.framework/Versions/A/TrustEvaluationAgent
0x96837000 - 0x9685cff7  com.apple.CoreVideo (1.8 - 99.4) <A26DE896-32E0-3D5E-BA89-02AD23FA96B3> /System/Library/Frameworks/CoreVideo.framework/Versions/A/CoreVideo
0x9685d000 - 0x9685dfff  libSystem.B.dylib (169.3) <81C58EAB-0E76-3EAB-BDFD-C5A6FE95536F> /usr/lib/libSystem.B.dylib
0x9698d000 - 0x969fcffb  com.apple.Heimdal (3.0 - 2.0) <964D9952-B0F2-34F6-8265-1823C0D5EAB8> /System/Library/PrivateFrameworks/Heimdal.framework/Versions/A/Heimdal
0x969fd000 - 0x96a57fff  com.apple.Symbolication (1.3 - 93) <684ECF0D-D416-3DF8-8B5B-3902953853A8> /System/Library/PrivateFrameworks/Symbolication.framework/Versions/A/Symbolication
0x96a58000 - 0x96b2cff3  com.apple.backup.framework (1.4.2 - 1.4.2) <0473EB45-E9BF-3C10-B235-A6E2B960A88F> /System/Library/PrivateFrameworks/Backup.framework/Versions/A/Backup
0x96b3c000 - 0x96b3dffd  libunc.dylib (25) <58599CBF-E262-3CEA-AFE1-35560E0177DC> /usr/lib/system/libunc.dylib
0x96b3e000 - 0x96ba6fe7  libvDSP.dylib (380.6) <55780308-4DCA-3B10-9703-EAFC3E13A3FA> /System/Library/Frameworks/Accelerate.framework/Versions/A/Frameworks/vecLib.framework/Versions/A/libvDSP.dylib
0x96bc1000 - 0x96c18ff7  com.apple.ScalableUserInterface (1.0 - 1) <2B5E454B-BC49-3E85-B54D-1950397C448C> /System/Library/Frameworks/QuartzCore.framework/Versions/A/Frameworks/ScalableUserInterface.framework/Versions/A/ScalableUserInterface
0x96c19000 - 0x96c22fff  com.apple.DiskArbitration (2.5.2 - 2.5.2) <89822A83-B450-3363-8E9C-9B80CB4450B1> /System/Library/Frameworks/DiskArbitration.framework/Versions/A/DiskArbitration
0x96cc1000 - 0x96fc6ff7  com.apple.CoreServices.CarbonCore (1037.5 - 1037.5) <356AE2DF-ABB0-319C-8B5B-2F33D693889F> /System/Library/Frameworks/CoreServices.framework/Versions/A/Frameworks/CarbonCore.framework/Versions/A/CarbonCore
0x96fc7000 - 0x9700bff7  libGLU.dylib (8.7.25) <0CC1A4D8-C095-3F2B-B55C-FDEBEA0E9CFE> /System/Library/Frameworks/OpenGL.framework/Versions/A/Libraries/libGLU.dylib
0x9700c000 - 0x97016ffe  com.apple.bsd.ServiceManagement (2.0 - 2.0) <9732BA61-D6F6-3644-82DA-FF0D6FEEFC69> /System/Library/Frameworks/ServiceManagement.framework/Versions/A/ServiceManagement
0x97895000 - 0x9789ffff  libsystem_notify.dylib (98.5) <7EEE9475-18F8-3099-B0ED-23A3E528ABE0> /usr/lib/system/libsystem_notify.dylib
0x978a0000 - 0x97954fff  com.apple.coreui (2.0 - 181.1) <C15ABF35-B7F5-34ED-A461-386DAF65D96B> /System/Library/PrivateFrameworks/CoreUI.framework/Versions/A/CoreUI
0x9795a000 - 0x9797efff  libJPEG.dylib (849) <CD42C17E-6B13-35BE-B585-9AE69CEA534F> /System/Library/Frameworks/ImageIO.framework/Versions/A/Resources/libJPEG.dylib
0x97cee000 - 0x97d24ffb  com.apple.DebugSymbols (98 - 98) <9A9ADA0A-E487-3C8F-9998-286EE04C235A> /System/Library/PrivateFrameworks/DebugSymbols.framework/Versions/A/DebugSymbols
0x97d25000 - 0x97dc0fff  com.apple.CoreSymbolication (3.0 - 117) <F705A8CD-A04A-3A84-970A-7B04BC05DA97> /System/Library/PrivateFrameworks/CoreSymbolication.framework/Versions/A/CoreSymbolication
0x97dc1000 - 0x97dd4ff9  com.apple.MultitouchSupport.framework (235.29 - 235.29) <451701B6-03CE-3F26-9FF0-92D8DA1467EE> /System/Library/PrivateFrameworks/MultitouchSupport.framework/Versions/A/MultitouchSupport
0x97dd5000 - 0x97e08ffb  com.apple.GSS (3.0 - 2.0) <9566A96D-C296-3ABD-A12A-E274C81C0B25> /System/Library/Frameworks/GSS.framework/Versions/A/GSS
0x97e09000 - 0x97ef2ff7  libxml2.2.dylib (22.3) <015A4FA6-5BB9-3F95-AFB8-B9281E22685B> /usr/lib/libxml2.2.dylib
0x97ef3000 - 0x97ef3fff  libsystem_blocks.dylib (59) <3A743C5D-CFA5-37D8-80A8-B6795A9DB04F> /usr/lib/system/libsystem_blocks.dylib
0x97ef4000 - 0x97f00ff8  libbz2.1.0.dylib (29) <7031A4C0-784A-3EAA-93DF-EA1F26CC9264> /usr/lib/libbz2.1.0.dylib
0x97f32000 - 0x981d5ff3  com.apple.CoreImage (8.2.4 - 1.0.1) <BA4EE8D7-FE72-3CC3-801F-B69D8A8B426F> /System/Library/Frameworks/QuartzCore.framework/Versions/A/Frameworks/CoreImage.framework/Versions/A/CoreImage
0x9820a000 - 0x9820afff  com.apple.Carbon (154 - 155) <604ADD9D-5835-3294-842E-3A4AEBCCB548> /System/Library/Frameworks/Carbon.framework/Versions/A/Carbon
0x9820b000 - 0x98422fff  com.apple.CoreData (106.1 - 407.7) <17FD06D6-AD7C-345A-8FA4-1F0FBFF4DAE1> /System/Library/Frameworks/CoreData.framework/Versions/A/CoreData
0x98425000 - 0x9842cfff  liblaunch.dylib (442.26.2) <310C99F8-0811-314D-9BB9-D0ED6DFA024B> /usr/lib/system/liblaunch.dylib
0x9842d000 - 0x9844aff7  libresolv.9.dylib (51) <B9742A2A-DF15-3F6E-8FCE-778A58214B3A> /usr/lib/libresolv.9.dylib
0x9844b000 - 0x9844cfff  libdnsinfo.dylib (453.19) <3B523729-84A8-3D0B-B58C-3FC185060E67> /usr/lib/system/libdnsinfo.dylib
0x9844d000 - 0x9844dfff  com.apple.Accelerate.vecLib (3.8 - vecLib 3.8) <908B8D40-3FB5-3047-B482-3DF95025ECFC> /System/Library/Frameworks/Accelerate.framework/Versions/A/Frameworks/vecLib.framework/Versions/A/vecLib
0x98491000 - 0x9849dff7  com.apple.NetAuth (4.0 - 4.0) <4983C4B8-9D95-3C4D-897E-07743326487E> /System/Library/PrivateFrameworks/NetAuth.framework/Versions/A/NetAuth
0x986f8000 - 0x9871afff  libc++abi.dylib (26) <3AAA8D55-F5F6-362B-BA3C-CCAF0D3C8E27> /usr/lib/libc++abi.dylib
0x9871b000 - 0x9871effc  libpam.2.dylib (20) <FCF74195-A99E-3B07-8E49-688D4A6F1E18> /usr/lib/libpam.2.dylib
0x98729000 - 0x98740fff  com.apple.GenerationalStorage (1.1 - 132.3) <DD0AA3DB-376D-37F3-AC5B-17AC9B9E0A63> /System/Library/PrivateFrameworks/GenerationalStorage.framework/Versions/A/GenerationalStorage
0x98741000 - 0x98765fff  com.apple.PerformanceAnalysis (1.16 - 16) <18DE0F9F-1264-394D-AC56-6B2A1771DFBE> /System/Library/PrivateFrameworks/PerformanceAnalysis.framework/Versions/A/PerformanceAnalysis
0x98766000 - 0x98774ff3  libsystem_network.dylib (77.10) <7FBF5A15-97BA-3721-943E-E77F0C40DBE1> /usr/lib/system/libsystem_network.dylib
0x987b6000 - 0x987b9ffc  libCoreVMClient.dylib (32.3) <35B63A60-DF0A-3FB3-ABB8-164B246A43CC> /System/Library/Frameworks/OpenGL.framework/Versions/A/Libraries/libCoreVMClient.dylib
0x987ba000 - 0x987cffff  com.apple.speech.synthesis.framework (4.1.12 - 4.1.12) <DE68CEB5-4959-3652-83B8-D2B00D3B932D> /System/Library/Frameworks/ApplicationServices.framework/Versions/A/Frameworks/SpeechSynthesis.framework/Versions/A/SpeechSynthesis
0x987d0000 - 0x987eeff3  com.apple.openscripting (1.3.6 - 148.3) <F3422C02-5ACB-343A-987B-A2D58EA2F5A8> /System/Library/Frameworks/Carbon.framework/Versions/A/Frameworks/OpenScripting.framework/Versions/A/OpenScripting
0x987fb000 - 0x9885dfff  libc++.1.dylib (65.1) <C0CFF9FF-5D52-3EAE-B921-6AE1DA00A135> /usr/lib/libc++.1.dylib
0x9885e000 - 0x988f6fff  com.apple.CoreServices.OSServices (557.6 - 557.6) <E1600639-3EEC-3DF8-BD40-747BB2117988> /System/Library/Frameworks/CoreServices.framework/Versions/A/Frameworks/OSServices.framework/Versions/A/OSServices
0x9891d000 - 0x98977ffb  com.apple.AE (645.6 - 645.6) <44556FF7-A869-399A-AEBB-F4E9263D9152> /System/Library/Frameworks/CoreServices.framework/Versions/A/Frameworks/AE.framework/Versions/A/AE
0x98978000 - 0x989c0ff5  com.apple.opencl (2.2.18 - 2.2.18) <004A1DE4-49C6-3938-8B54-CD1DC23BDBE5> /System/Library/Frameworks/OpenCL.framework/Versions/A/OpenCL
0x989c1000 - 0x98a46ff7  com.apple.SearchKit (1.4.0 - 1.4.0) <454E950F-291C-3E95-8F35-05CA0AD6B327> /System/Library/Frameworks/CoreServices.framework/Versions/A/Frameworks/SearchKit.framework/Versions/A/SearchKit
0x98a47000 - 0x98a4bfff  com.apple.CommonPanels (1.2.5 - 94) <6B3E7E53-7708-3DA2-8C50-59C2B4735DE1> /System/Library/Frameworks/Carbon.framework/Versions/A/Frameworks/CommonPanels.framework/Versions/A/CommonPanels
0x98a4c000 - 0x98aecff7  com.apple.QD (3.42 - 285) <1B8307C6-AFA8-312E-BA5B-679070EF2CA1> /System/Library/Frameworks/ApplicationServices.framework/Versions/A/Frameworks/QD.framework/Versions/A/QD
0x98aed000 - 0x98b1affb  com.apple.CoreServicesInternal (154.2 - 154.2) <DCCF604B-1DB8-3F09-8122-545E2E7F466D> /System/Library/PrivateFrameworks/CoreServicesInternal.framework/Versions/A/CoreServicesInternal
0x98b1b000 - 0x98b1fffe  libcache.dylib (57) <834FDCA7-FE3B-33CC-A12A-E11E202477EC> /usr/lib/system/libcache.dylib
0x98b20000 - 0x98c2bff7  libJP2.dylib (849) <B2D0E844-C390-376C-91D9-F3501B5C7A83> /System/Library/Frameworks/ImageIO.framework/Versions/A/Resources/libJP2.dylib
0x98c2c000 - 0x997e8ff7  com.apple.AppKit (6.8 - 1187.37) <6FBB3467-04F9-395F-8EA8-C84347C5BE43> /System/Library/Frameworks/AppKit.framework/Versions/C/AppKit
0x997e9000 - 0x99905ffb  com.apple.desktopservices (1.7.3 - 1.7.3) <7157C51D-C695-3C9E-B532-F551E7E55B56> /System/Library/PrivateFrameworks/DesktopServicesPriv.framework/Versions/A/DesktopServicesPriv
0x99906000 - 0x9991cfff  com.apple.CFOpenDirectory (10.8 - 151.10) <56C3F276-BD1F-3031-8CF9-8F4F481A534E> /System/Library/Frameworks/OpenDirectory.framework/Versions/A/Frameworks/CFOpenDirectory.framework/Versions/A/CFOpenDirectory
0x9991d000 - 0x99932fff  com.apple.ImageCapture (8.0 - 8.0) <B8BD421F-D5A9-3FB4-8E89-AD5CFC0D4030> /System/Library/Frameworks/Carbon.framework/Versions/A/Frameworks/ImageCapture.framework/Versions/A/ImageCapture
0x99933000 - 0x99cebffa  libLAPACK.dylib (1073.4) <9A6E5EAD-F2F2-3D5C-B655-2B536DB477F2> /System/Library/Frameworks/Accelerate.framework/Versions/A/Frameworks/vecLib.framework/Versions/A/libLAPACK.dylib
0x99e21000 - 0x99f1fff7  libFontParser.dylib (84.6) <7D3EB3CC-527E-3A74-816A-59CAFD2260A4> /System/Library/Frameworks/ApplicationServices.framework/Versions/A/Frameworks/ATS.framework/Versions/A/Resources/libFontParser.dylib
0x99f20000 - 0x9a1e0ff3  com.apple.security (7.0 - 55179.11) <165A3105-9ADF-329B-93FC-3C8EFAEDDD13> /System/Library/Frameworks/Security.framework/Versions/A/Security
0x9a267000 - 0x9a268fff  libDiagnosticMessagesClient.dylib (8) <39B3D25A-148A-3936-B800-0D393A00E64F> /usr/lib/libDiagnosticMessagesClient.dylib
0x9a269000 - 0x9a2e5ff3  com.apple.Metadata (10.7.0 - 707.5) <F2BC2AB4-A87A-3D37-A496-AC21EF3E1244> /System/Library/Frameworks/CoreServices.framework/Versions/A/Frameworks/Metadata.framework/Versions/A/Metadata
0x9a2ec000 - 0x9a2ecfff  com.apple.Accelerate (1.8 - Accelerate 1.8) <4EC0548E-3A3F-310D-A366-47B51D5B6398> /System/Library/Frameworks/Accelerate.framework/Versions/A/Accelerate
0x9a2ed000 - 0x9a32fff7  libauto.dylib (185.1) <B2B5B639-6778-352A-828D-FD8B64A3E8B3> /usr/lib/libauto.dylib
0x9a5a3000 - 0x9a5defef  libGLImage.dylib (8.7.25) <6C0B2148-032A-3911-AB21-2E07606E3D9A> /System/Library/Frameworks/OpenGL.framework/Versions/A/Libraries/libGLImage.dylib
0x9a5df000 - 0x9a5ebffe  libkxld.dylib (2050.22.13) <ED37AAAA-B1C0-3ADF-A897-3D580A845843> /usr/lib/system/libkxld.dylib
0x9a5ec000 - 0x9a619ffe  libsystem_m.dylib (3022.6) <9975D9C3-3B71-38E3-AA21-C5C5F9D9C431> /usr/lib/system/libsystem_m.dylib
0x9a628000 - 0x9a645fff  libCRFSuite.dylib (33) <C9D72D0C-871A-39A2-8AFB-682D11AE7D0D> /usr/lib/libCRFSuite.dylib
0x9a64a000 - 0x9a708ff3  com.apple.ColorSync (4.8.0 - 4.8.0) <EFEDCB37-4F20-3CEC-A185-5D2976E11BAC> /System/Library/Frameworks/ApplicationServices.framework/Versions/A/Frameworks/ColorSync.framework/Versions/A/ColorSync
0x9a709000 - 0x9a767ff7  com.apple.audio.CoreAudio (4.1.1 - 4.1.1) <953DD669-8C6E-387D-AB3F-D8C8965347DF> /System/Library/Frameworks/CoreAudio.framework/Versions/A/CoreAudio

External Modification Summary:
  Calls made by other processes targeting this process:
    task_for_pid: 2
    thread_create: 0
    thread_set_state: 0
  Calls made by this process:
    task_for_pid: 0
    thread_create: 0
    thread_set_state: 0
  Calls made by all processes on this machine:
    task_for_pid: 10520
    thread_create: 1
    thread_set_state: 0

VM Region Summary:
ReadOnly portion of Libraries: Total=143.4M resident=67.3M(47%) swapped_out_or_unallocated=76.1M(53%)
Writable regions: Total=245.7M written=152.3M(62%) resident=195.9M(80%) swapped_out=0K(0%) unallocated=49.8M(20%)

REGION TYPE                      VIRTUAL
===========                      =======
CG backing stores                   132K
CG shared images                   1216K
CoreServices                       2916K
MALLOC                            215.2M
MALLOC guard page                    48K
Memory tag=242                       12K
Memory tag=35                      7284K
Stack                              68.6M
VM_ALLOCATE                        16.1M
__DATA                             5828K
__DATA/__OBJC                       224K
__IMAGE                             528K
__LINKEDIT                         36.5M
__OBJC                             1456K
__OBJC/__DATA                        72K
__PAGEZERO                            4K
__TEXT                            106.9M
__UNICODE                           544K
mapped file                       156.4M
shared memory                       308K
===========                      =======
TOTAL                             619.7M
```
 

comment number: 15573108 
body: @gavinandresen As I know you are using Mac, can you take a look here :).
 

comment number: 15587152 
body: Gavin posted a possible fix here: https://bitcointalk.org/index.php?topic=154516.msg1665186#msg1665186

I tried it, but the client still crashed.  I moved my ~/Library/Application Support/Bitcoin directory aside and ran the client.  It downloaded the blockchain again and didn't crash.  Perhaps that's the easiest fix.  Now I just have to import my wallet.
 

comment number: 17133574 
body: **hank**: the link you pasted talks about cleaning the data directory after the change in its structure, it shouldn't really solve the issue.

In #2426 there are two suggestions, I preferred using _-reindex_ option, the two issues should be merged.
 

comment number: 17133991 
body: I just finished doing a -reindex. It solved the problem for me.
 

comment number: 17134044 
body: I'd like to see a debug.log for when this happens, before doing a -reindex.
 

comment number: 17134913 
body: **sipa**: I wouldn't know how to reproduce, may be worth editing first post asking for that so next people who search the issue can keep the debug.log file.
 

comment number: 17205748 
body: I'm unable to reproduce so far.  I'll try some more tomorrow (I'm kill -9 'ing a running bitcoind, to simulate a machine crash / unclean shutdown).

@frespa81 @hank : did this only happen for you after crashing or shutting down during the initial, after-upgrade reindex process?
 

comment number: 17213135 
body: @gavinandresen It was a while ago the crash happened for me. I had recently installed the app and the index had finished syncing. I Had gotten a small transfer, everything was working fine. I later had some issues not related to bitcoin-qt. what I can remember the mac did not shutdown cleanly. Then during startup of bitcoin-qt the application crashed.

This was some time ago, can't remember exactly what happened. I will make sure to write things down if they happen again.

Thanks for looking in to the issue!
 

comment number: 17213159 
body: Notice that I didn't have any crash (IIRC) and I've been running the client for several days, maybe a couple weeks, after the update. I update the chain every other day or less often, on such an update the Qt client just didn't start anymore. Reindexing fixed the issue.
 

comment number: 17225913 
body: I upgraded from the previous beta version I think.  After quitting the installed version, I installed 0.8.1, and tried to start it.  It crashed over and over again with the error at the top.  I then tried moving my bitcoin Library directpry aside and letting it download the entire blockchain again.  That seems to have fixed the issue.
 

comment number: 17567479 
body: Closing this as "corruption likely caused by running out of file descriptors".
 

comment number: 17569267 
body: So, in Bugzilla terms, that's a WONTFIX?

I was able to recover by removing everything from ~/Library/Application Support/Bitcoin then copying in a very old backup of my wallet.dat.  After that the client ran normally, but took several days to re-download the block chain.
 

comment number: 17569442 
body: @Polyergic No, it's a "unknown if fixed or not". We assume it's a corruption of your database that was caused by a known bug that is now fixed in HEAD (but is not in a released version yet).

So feel free to reopen or comment here if it would happen again after updating.

Also, next time, you can recover using -reindex (which just imports the block data you already hvae and revalidates it, but doesn't redownload it).
 

comment number: 17569452 
body: No that is no WONTFIX, it is a (hopefully) HAVEFIXED by one of the recent patches :).
@sipa You were faster ^^.
 

comment number: 17570450 
body: Oh, I see, there just wasn't a comment here about the patch.  Thanks!
 

315. bug report number : ['2394']
comment number: 15204305 
body: Interesting find, guess no one ever thought about such a corner case then.
 

comment number: 21030410 
body: I meet the same bug. 

Bitcoin version v0.8.1-beta (2013-03-17 15:35:36 -0400)
 

comment number: 21059348 
body: FWIW, I also saw this on my 2aa462e-based next-test, after about 800 keys (targetting 10,000 keys).
Initially, I assumed it was relayed to the wallet closing timeout, so when I restarted, I put an effectively-infinite timeout on it; it crashed again after about 800 keys.
The third try completed successfully.
(Obviously next-test isn't going to be a very good report for this kind of bug, but considering others have similar problems I thought it might be useful info to add)
 

comment number: 21086564 
body: After upgrade to v0.8.3-beta, the bug still exists.
 

comment number: 21089003 
body: I use gdb debug：
terminate called after throwing an instance of 'std::runtime_error'
  what():  CWallet::GenerateNewKey() : AddKey failed
 

comment number: 27202455 
body: Can you try again with current master?

I tried keypoolrefill 10000 and used walletpassphrase pass 10, which resulted in:

Output in debug window - RPC console (Bitcoin-Qt):

<pre>
11:52:32 keypoolrefill 10000
11:52:34 CWallet::GenerateNewKey() : AddKey failed (code -1)
</pre>

No crash for me!
 

comment number: 29564855 
body: I can confirm that this bug still exists on 0.8.5
 

comment number: 33356355 
body: Is this still a problem with current master?
 

comment number: 44807587 
body: I have this issue, on Windows with v0.9.1.0-g026a939-beta (64-bit). Luckily dumpprivkey works but it's still annoying. How can I help?
 

comment number: 45483846 
body: This wallet was on an installation I seldom use and therefore very simple (1 transaction, 1 bitcoin core upgrade). I still have the old wallet, can I help with some diagnostics?
 

comment number: 45484447 
body: @bobjansen so can you reproduce this arbitrarily? how do you do that? does it depend on the specific wallet?
 

comment number: 45533712 
body: @laanwj It seems to depend on this specific wallet. I'm not sure how it got in this state. This is what happens when I use the faulty wallet:
1. Put it in AppData/Roaming/Bitcoin
2. Start the GUI
3. Wait for it to sync
4. Select the Receive tab 
5. Request a payment
6. This happens:

![screenshot 2014-06-09 21 17 14](https://cloud.githubusercontent.com/assets/311522/3221408/eafe6cf6-f00a-11e3-8742-3bb4ba883cd8.png)
Alternatively, I can do steps 1 to 3 and run keypoolrefill 100 from the console. This gives an error but at least doesn't crash:

![screenshot 2014-06-09 21 21 13](https://cloud.githubusercontent.com/assets/311522/3221592/cecfb592-f00c-11e3-8362-1b3d3c50a2d4.png)

Closing also gives the same problem and an extra error message which might be useful:

![screenshot 2014-06-09 21 28 51](https://cloud.githubusercontent.com/assets/311522/3221552/784bfcb2-f00c-11e3-9566-3d8077cf1c05.png)

Something to note: the wallet is not encrypted. As this wallet was only used for this one transaction and I could move the coins elsewhere using my wallet created from the privkey. Therefore I can safely publish the broken wallet for analysis if so desired.
 

comment number: 181915987 
body: Thanks for the offer, but I don't have time to dive deep into berkeleydb specifics.

For anyone else coming to this issue, what may work is to run with the option `-salvagewallet`. This dumps the underlying database structure and rebuilds the wallet. Do make sure that you back up your wallet first, as with any every recovery tool) it may make things worse as well.
 

316. bug report number : ['2390']
comment number: 144700788 
body: What is the status now with `libevent` based HTTP server?
 

comment number: 144708530 
body: Good call @paveljanik . This is no longer the case, so closing.
 

317. bug report number : ['2381']
318. bug report number : ['2375']
comment number: 44373697 
body: I'm unable to reproduce this with master. The switch to boost::asio deadline timers for unlocking the wallet probably solved this like the other related issues (#2704 etc).
 

319. bug report number : ['2372']
comment number: 15017407 
body: Is this on OSX? Possibly related #2371 
 

comment number: 17236075 
body: Closing as a dup of #2371 
 

320. bug report number : ['2371']
comment number: 17387570 
body: Some prefs are changeable (txfee, language, btc unit, ...) some are not changeable according to reported behavior (SOCKS-P., minimize, etc.).
Will do a fix soon.
 

comment number: 17388904 
body: @jonasschnelli I'm working on the options dialog currently, see #2612. If there are special Mac fixes I'm happy to receive your input :).
 

comment number: 17388982 
body: @Diapolo okay,.. i just saw it. No worries. I first need to analyze the problem. As soon as i know what's the root cause, i'll let you know and maybe have a fix ready.
 

comment number: 17389761 
body: Found the mac problems:
-> SetStartOnSystemStartup is not saving/working, ... because not implemented yet (see guiutil.cpp) => // TODO: OSX startup stuff
-> fMinimizeToTray / fMinimizeOnClose are not working. Because:

```
#ifndef Q_OS_MAC
    mapper->addMapping(ui->minimizeToTray, OptionsModel::MinimizeToTray);
    mapper->addMapping(ui->minimizeOnClose, OptionsModel::MinimizeOnClose);
#endif
```

MinimizeToTray and MinimizeOnClose should be removed on mac because this behavior is not available on osx.

I'll do now implement the SetStartOnSystemStartup for a clean mac behavior and i also remove the third tab in optionsdialog on mac.
 

comment number: 17393614 
body: @Diapolo you might also check for conflicts pulling #2613, but i think it should be mergable.
 

comment number: 19912638 
body: @agravier with the recent merges of OSX related settings fixes, do you still encounter these issues running 0.8.2-beta?
 

comment number: 19927026 
body: Hi @fanquake, thanks for notifying me. I downloaded v0.8.2-beta and still encounter those issues.

I've tried individually, and in that exact order (beware, those are stateful bugs) (I also break it down by Preferences tab for clarity):

### Main
- Main > Pay transaction fee > 0.00000005 BTC > `Apply`: The new state is 0.00000005 BTC (expected behavior)
- Change it back to 0 and `Apply`: new value is kept
- Main > Pay transaction fee > 0.00000005 BTC > `OK`, then reopen preferences: The new state is 0.00000005 BTC (expected behavior)
- Main > ☑ Start on system login > `Apply`: resets the checkbox state to unchecked ( **unexpected** behavior)
- Main > ☑ Start on system login >  `OK`, then reopen preferences: resets the checkbox state to unchecked ( **unexpected** behavior)

### Network
- Network > ☐ Map port using UPnP > `Apply`: keeps new unchecked checkbox state (expected behavior)
- Network > ☐ Map port using UPnP > `OK`, then reopen preferences: keeps new unchecked checkbox state (expected behavior)
- Network > ☑ Connect through SOCKS proxy > `Apply`: keeps new checked checkbox state (expected behavior)
- Network > ☑ Connect through SOCKS proxy > `OK`, then reopen preferences: keeps new checked checkbox state (expected behavior)
- Network > ☐ Connect through SOCKS proxy > `OK`, then reopen preferences: keeps new unchecked checkbox state (expected behavior)
- Network > ☑ Connect through SOCKS proxy, change IP, port, SOCKS version  >  `Apply` > Acknowledge message: keeps new checked checkbox state and new values (expected behavior)
- Network > ☐ Connect through SOCKS proxy, change IP, port, SOCKS version  >  `Apply` > Acknowledge message: keeps new checked checkbox state and new values (expected behavior)
- Network > ☑ Connect through SOCKS proxy, change IP, port, SOCKS version  > `OK` > Acknowledge message, then reopen preferences: keeps new checked checkbox state and new values (expected behavior)
- Network > Change IP, port, SOCKS version, ☐ (uncheck) Connect through SOCKS proxy >  `Apply` > Acknowledge message: restores checked checkbox state and previous IP, port and version values ( **unexpected** behavior)
- Network > Change IP, port, SOCKS version, ☐ (uncheck) Connect through SOCKS proxy >  `OK` > Acknowledge message, then reopen preferences: restores checked checkbox state and previous IP, port and version values ( **unexpected** behavior)
- All subsequent attempts to change the Connect through SOCKS proxy checkbox, IP, port, or SOCKS version fail, using `Apply` or using `OK` (which is now a real issue for me, as I guess the client will not be able to connect now...). The Map port using UPnP checkbox still behaves as expected.

### Window
- Window: this one has an issue with `Apply`: the button remains greyed out even if I toggle one of the two checkboxes ( **unexpected** behavior)
- Window > ☑ Minimize to the tray instead of the taskbar > OK, reopen preferences: checkbox state is unchecked ( **unexpected** behavior)
- Window > ☑ Minimize on close > OK, reopen preferences: checkbox state is unchecked ( **unexpected** behavior)
- Window > ☑ Minimize to the tray instead of the taskbar, ☑ Minimize on close > OK, reopen preferences: checkboxes states are unchecked ( **unexpected** behavior)

### Display
- Display > Interface language > français (fr) > Acknowledge message > Apply > list choice remembered (expected)
- Display > Show unit amounts in > microBTC > Apply > list choice remembered, and I see the interface change in the background (expected)
- Change back to default language, BTC > Apply > Choices remembered (expected)
- Display > Display addresses in transaction list > Apply > Choice remembered, and I see the interface change in the background (expected)
- Display > OK > Reopen preferences: choices remembered (expected)

So, you will note from the above that the Network tab's SOCKS options started misbehaving after several changes, while the Window tab's options never worked in the first place. I think that the issue with the main tab's "Start on system login" may also have never worked. 

I hope that my report helps. I'm sorry that I can't contribute in code, I lack time...
 

comment number: 24565735 
body: #2612 needs feedback, perhaps someone can try the pulltester executable...
 

comment number: 24879419 
body: Quick update: the Preferences pane still misbehaves in v0.8.5-beta.
 

comment number: 24885086 
body: I'll have a look at it soon.
 

comment number: 25063591 
body: Perhaps also take a look at #2612, I need some feedback.
 

comment number: 25066041 
body: @agravier 
Can you explain in detail what you mean with:

Main > ☑ Start on system login > Apply: resets the checkbox state to unchecked ( unexpected behavior)
Main > ☑ Start on system login > OK, then reopen preferences: resets the checkbox state to unchecked ( unexpected behavior)

For me the "start on system login" works okay.
I can check the "start on system login" checkbox and it will kept checked as well as the system entry was done.

I built on the current master.
 

comment number: 25066183 
body: @agravier the reported "Windows" problems are fixed #2613 (is removed now on mac because it don't make sense there).
The SOCKS changes sometime needs a restart of the app. I think this is okay.
 

comment number: 25068846 
body: @jonasschnelli I guess you understood the problem correctly, but here is a full description: 

Main > ☑ Start on system login > Apply: resets the checkbox state to unchecked ( unexpected behavior) 

That means:
1. I open the preferences, observe that the checkbox marked "Start Bitcoin on system login" is unchecked.
2. I check the checkbox next to "Start Bitcoin on system login"
3. I click on Apply, observe that as a result, the checkbox marked "Start Bitcoin on system login" is toggled back to unchecked state. I expected it to remain checked (and the client to start at login).

Main > ☑ Start on system login > OK, then reopen preferences: resets the checkbox state to unchecked ( unexpected behavior)

That means:
1. I open the preferences, observe that the checkbox marked "Start Bitcoin on system login" is unchecked.
2. I check the checkbox next to "Start Bitcoin on system login"
3. I click on OK, observe that the preferences pane is closed as expected
4. I open the preferences again, and observe that the checkbox marked "Start Bitcoin on system login" is unchecked. I expected it to be checked, and the client to start at login.

Please note that (at least some of) the issues are stateful. Some of the problems appeared only after some time testing everything. It was not the case for "Start Bitcoin on system login", though, IIRC, it didn't work from the start.

I may try with the head of master in the end of the week, but I'd like to do a clean install for that. If I want to completely cleanup all local data, is removing the ~/Library/Application Support/Bitcoin folder sufficient?
 

comment number: 25069257 
body: Hmm... the checkbox should be synced/linked with your mac preferences (open osx preference pannel -> users -> YOUR_USER -> startup items).
Could you try again and see, if the entries in your osx pereferences user startup items will change after you click okay/apply?

Thanks
 

comment number: 25069281 
body: @agravier it could also be a permissions issue. Do you have "Admin" right on your mac?
 

comment number: 25069700 
body: @jonasschnelli Checking the checkbox and applying or clicking OK has no effect on the list of login items as displayed by the preferences pane. Bitcoin-Qt is not in the list. My account is allowed to administer. Full groups memberships:

```
(Canopy 64bit) Alexandres-MacBook-Pro:Bitcoin agravier$ groups
staff com.apple.sharepoint.group.1 com.apple.access_screensharing everyone _appstore localaccounts _appserverusr admin _appserveradm _lpadmin _lpoperator _developer
(Canopy 64bit) Alexandres-MacBook-Pro:Bitcoin agravier$  
```

Also, the rights of the contents of ~/Library/Application Support/Bitcoin are

```
drwxr-xr-x   11 agravier  staff       374 Sep 25 10:14 .
drwx------+  51 agravier  staff      1734 Aug 22 22:54 ..
-rw-r--r--@   1 agravier  staff      6148 Sep 22 12:09 .DS_Store
-rw-------    1 agravier  staff         0 Feb 14  2013 .lock
drwx------  171 agravier  staff      5814 Sep 24 20:41 blocks
drwx------  159 agravier  staff      5406 Sep 25 10:20 chainstate
drwx------    3 agravier  staff       102 Sep 22 12:12 database
-rw-------    1 agravier  staff         0 Sep 22 12:12 db.log
-rw-------    1 agravier  staff  95734554 Sep 25 10:23 debug.log
-rw-------    1 agravier  staff   1068058 Sep 25 10:14 peers.dat
-rw-------    1 agravier  staff     69632 Sep 25 00:42 wallet.dat
```

where agravier is my username.
 

comment number: 25070030 
body: @agravier Which bitcoin version you use?
 

comment number: 25070154 
body: @jonasschnelli Bitcoin-Qt v0.8.5-beta downloaded from http://bitcoin.org/en/download 3 days ago. Qt version 4.8.4.
 

comment number: 25684291 
body: @agravier Are you able to compile #2612 and see if your problems are better/solved?
 

comment number: 25690519 
body: @Diapolo sure, I'm on your [5511af6](https://github.com/Diapolo/bitcoin/commit/5511af64d32b4c5cbb9a6b74f284b0901b98dce5) but failing to compile, hitting the same issue as @jonasschnelli [there](https://github.com/bitcoin/bitcoin/pull/2943#issuecomment-24167856). I have the autotools, boost, qt, xcode, the protocol buffers, mini uPnP, open SSL, and I don't remember what else, but I believe that I make all of dem incantations the right way. I will dig more later if noone can help.
 

comment number: 25748669 
body: I tried passing various arguments to the configure script (--with-qt-bindir, --with-qt-incdir, --with-qt-libdir, --with-qt-plugindir), but it always stops with

```
checking if qt should be enabled... configure: error: "qt support requested but qt could not be located. use --without-qt"
```

I'm not trying more, for now. I hope that @Diapolo or @jonasschnelli can tell me the right way to compile Bitcoin-Qt. The documentation is sparse on that point.
 

comment number: 25767266 
body: @agravier I'm sorry to say, but as I'm not using autotools for my local build yet, I'm not able to help you out. I hope @jonasschnelli was able to sort out his compilation error and is able to help you.
 

comment number: 25767569 
body: @Diapolo what do you use? I could maybe follow your procedure.
 

comment number: 25767849 
body: I'm using Qt Creator and the bitcoin-qt.pro file from before Autotools, I don't think that is a quick solution for you :-/.
 

comment number: 25793208 
body: @Diapolo Yes, I tried  QT Creator after failing the Unix way, and stumbled on an error telling me that `locale/bitcoin_ach.qm` is missing. Is it difficult to set up the right environment for QT Creator to be able to build the project? Do you advise me to give up on your solution?

The QT Creator error:

```
10:46:14: Running steps for project bitcoin-qt...
10:46:14: Configuration unchanged, skipping qmake step.
10:46:14: Starting: "/usr/bin/make" 
/Developer/Qt/5.1.1/clang_64/bin/rcc -name bitcoin ../src/qt/bitcoin.qrc -o qrc_bitcoin.cpp
RCC: Error in '../src/qt/bitcoin.qrc': Cannot find file 'locale/bitcoin_ach.qm'
make: *** [qrc_bitcoin.cpp] Error 1
10:46:14: The process "/usr/bin/make" exited with code 2.
Error while building/deploying project bitcoin-qt (kit: Desktop Qt 5.1.1 clang 64bit)
When executing step 'Make'
10:46:14: Elapsed time: 00:00.
```
 

comment number: 25793576 
body: The .qm files should be in place before you are trying to build. Try an qmake or lrelease (via Qt Creator menus), that should create the .qm files.
 

comment number: 25794521 
body: It doesn't help make the .qm. qmake or lrelease give errors and warnings of their own as shown below.

As a reminder, I'm on clean 5511af6, head of your options_prep. This is Qt Creator 5.1.1 on OS X 10.8.5/12F37.

## lrelease output:

```
Starting external tool '/Developer/Qt/5.1.1/clang_64/bin/lrelease' /Users/agravier/Documents/bitcoin-diapolo/contrib/bitcoin-qt.pro
Project WARNING: No .qmake.cache is present. This significantly slows down qmake with this makespec.
Project WARNING: Call 'cache()' in the top-level project file to rectify this problem.

lrelease warning: Met no 'TRANSLATIONS' entry in project file '/Users/agravier/Documents/bitcoin-diapolo/contrib/bitcoin-qt.pro'

'/Developer/Qt/5.1.1/clang_64/bin/lrelease' finished
```

## qmake output:

```
11:13:36: Running steps for project bitcoin-qt...
11:13:36: Starting: "/Developer/Qt/5.1.1/clang_64/bin/qmake" /Users/agravier/Documents/bitcoin-diapolo/contrib/bitcoin-qt.pro -r -spec macx-clang CONFIG+=debug CONFIG+=x86_64 CONFIG+=declarative_debug CONFIG+=qml_debug
Project WARNING: No .qmake.cache is present. This significantly slows down qmake with this makespec.
Project WARNING: Call 'cache()' in the top-level project file to rectify this problem.
RCC: Error in '../src/qt/bitcoin.qrc': Cannot find file 'locale/bitcoin_ach.qm'
RCC: Error in '../src/qt/bitcoin.qrc': Cannot find file 'locale/bitcoin_af_ZA.qm'
RCC: Error in '../src/qt/bitcoin.qrc': Cannot find file 'locale/bitcoin_ar.qm'
RCC: Error in '../src/qt/bitcoin.qrc': Cannot find file 'locale/bitcoin_be_BY.qm'
RCC: Error in '../src/qt/bitcoin.qrc': Cannot find file 'locale/bitcoin_bg.qm'
RCC: Error in '../src/qt/bitcoin.qrc': Cannot find file 'locale/bitcoin_bs.qm'
RCC: Error in '../src/qt/bitcoin.qrc': Cannot find file 'locale/bitcoin_ca.qm'
RCC: Error in '../src/qt/bitcoin.qrc': Cannot find file 'locale/bitcoin_ca_ES.qm'
RCC: Error in '../src/qt/bitcoin.qrc': Cannot find file 'locale/bitcoin_cs.qm'
RCC: Error in '../src/qt/bitcoin.qrc': Cannot find file 'locale/bitcoin_cy.qm'
RCC: Error in '../src/qt/bitcoin.qrc': Cannot find file 'locale/bitcoin_da.qm'
RCC: Error in '../src/qt/bitcoin.qrc': Cannot find file 'locale/bitcoin_de.qm'
RCC: Error in '../src/qt/bitcoin.qrc': Cannot find file 'locale/bitcoin_el_GR.qm'
RCC: Error in '../src/qt/bitcoin.qrc': Cannot find file 'locale/bitcoin_en.qm'
RCC: Error in '../src/qt/bitcoin.qrc': Cannot find file 'locale/bitcoin_eo.qm'
RCC: Error in '../src/qt/bitcoin.qrc': Cannot find file 'locale/bitcoin_es.qm'
RCC: Error in '../src/qt/bitcoin.qrc': Cannot find file 'locale/bitcoin_es_CL.qm'
RCC: Error in '../src/qt/bitcoin.qrc': Cannot find file 'locale/bitcoin_et.qm'
RCC: Error in '../src/qt/bitcoin.qrc': Cannot find file 'locale/bitcoin_eu_ES.qm'
RCC: Error in '../src/qt/bitcoin.qrc': Cannot find file 'locale/bitcoin_fa.qm'
RCC: Error in '../src/qt/bitcoin.qrc': Cannot find file 'locale/bitcoin_fa_IR.qm'
RCC: Error in '../src/qt/bitcoin.qrc': Cannot find file 'locale/bitcoin_fi.qm'
RCC: Error in '../src/qt/bitcoin.qrc': Cannot find file 'locale/bitcoin_fr.qm'
RCC: Error in '../src/qt/bitcoin.qrc': Cannot find file 'locale/bitcoin_fr_CA.qm'
RCC: Error in '../src/qt/bitcoin.qrc': Cannot find file 'locale/bitcoin_gu_IN.qm'
RCC: Error in '../src/qt/bitcoin.qrc': Cannot find file 'locale/bitcoin_he.qm'
RCC: Error in '../src/qt/bitcoin.qrc': Cannot find file 'locale/bitcoin_hi_IN.qm'
RCC: Error in '../src/qt/bitcoin.qrc': Cannot find file 'locale/bitcoin_hr.qm'
RCC: Error in '../src/qt/bitcoin.qrc': Cannot find file 'locale/bitcoin_hu.qm'
RCC: Error in '../src/qt/bitcoin.qrc': Cannot find file 'locale/bitcoin_id_ID.qm'
RCC: Error in '../src/qt/bitcoin.qrc': Cannot find file 'locale/bitcoin_it.qm'
RCC: Error in '../src/qt/bitcoin.qrc': Cannot find file 'locale/bitcoin_ja.qm'
RCC: Error in '../src/qt/bitcoin.qrc': Cannot find file 'locale/bitcoin_kk_KZ.qm'
RCC: Error in '../src/qt/bitcoin.qrc': Cannot find file 'locale/bitcoin_ko_KR.qm'
RCC: Error in '../src/qt/bitcoin.qrc': Cannot find file 'locale/bitcoin_la.qm'
RCC: Error in '../src/qt/bitcoin.qrc': Cannot find file 'locale/bitcoin_lt.qm'
RCC: Error in '../src/qt/bitcoin.qrc': Cannot find file 'locale/bitcoin_lv_LV.qm'
RCC: Error in '../src/qt/bitcoin.qrc': Cannot find file 'locale/bitcoin_ms_MY.qm'
RCC: Error in '../src/qt/bitcoin.qrc': Cannot find file 'locale/bitcoin_nb.qm'
RCC: Error in '../src/qt/bitcoin.qrc': Cannot find file 'locale/bitcoin_nl.qm'
RCC: Error in '../src/qt/bitcoin.qrc': Cannot find file 'locale/bitcoin_pl.qm'
RCC: Error in '../src/qt/bitcoin.qrc': Cannot find file 'locale/bitcoin_pt_BR.qm'
RCC: Error in '../src/qt/bitcoin.qrc': Cannot find file 'locale/bitcoin_pt_PT.qm'
RCC: Error in '../src/qt/bitcoin.qrc': Cannot find file 'locale/bitcoin_ro_RO.qm'
RCC: Error in '../src/qt/bitcoin.qrc': Cannot find file 'locale/bitcoin_ru.qm'
RCC: Error in '../src/qt/bitcoin.qrc': Cannot find file 'locale/bitcoin_sk.qm'
RCC: Error in '../src/qt/bitcoin.qrc': Cannot find file 'locale/bitcoin_sq.qm'
RCC: Error in '../src/qt/bitcoin.qrc': Cannot find file 'locale/bitcoin_sr.qm'
RCC: Error in '../src/qt/bitcoin.qrc': Cannot find file 'locale/bitcoin_sv.qm'
RCC: Error in '../src/qt/bitcoin.qrc': Cannot find file 'locale/bitcoin_th_TH.qm'
RCC: Error in '../src/qt/bitcoin.qrc': Cannot find file 'locale/bitcoin_tr.qm'
RCC: Error in '../src/qt/bitcoin.qrc': Cannot find file 'locale/bitcoin_uk.qm'
RCC: Error in '../src/qt/bitcoin.qrc': Cannot find file 'locale/bitcoin_vi.qm'
RCC: Error in '../src/qt/bitcoin.qrc': Cannot find file 'locale/bitcoin_vi_VN.qm'
RCC: Error in '../src/qt/bitcoin.qrc': Cannot find file 'locale/bitcoin_zh_CN.qm'
RCC: Error in '../src/qt/bitcoin.qrc': Cannot find file 'locale/bitcoin_zh_TW.qm'
11:13:36: The process "/Developer/Qt/5.1.1/clang_64/bin/qmake" exited normally.
11:13:36: Elapsed time: 00:00.
```

## Build output:

```
11:15:12: Running steps for project bitcoin-qt...
11:15:12: Configuration unchanged, skipping qmake step.
11:15:12: Starting: "/usr/bin/make" 
/Developer/Qt/5.1.1/clang_64/bin/rcc -name bitcoin ../src/qt/bitcoin.qrc -o qrc_bitcoin.cpp
RCC: Error in '../src/qt/bitcoin.qrc': Cannot find file 'locale/bitcoin_ach.qm'
make: *** [qrc_bitcoin.cpp] Error 1
11:15:12: The process "/usr/bin/make" exited with code 2.
Error while building/deploying project bitcoin-qt (kit: Desktop Qt 5.1.1 clang 64bit)
When executing step 'Make'
11:15:12: Elapsed time: 00:00.
```
 

comment number: 25796051 
body: Are you using the supplied project file from current master? That wont work, because of the Autotools switch-over. You need to get a pre-autotools project-file if you want to build with Qt Creator (without autotools plugin).
 

comment number: 25803844 
body: OK, I understand. I'm using [the one in the your options_prep branch](https://github.com/Diapolo/bitcoin/blob/options_prep/contrib/bitcoin-qt.pro), which appear to have been last authored 4 months ago, so it's probably bad.

If you have one pre-autotools project file that you use and might work for me, could you share it? If it's not too configuration-specific. Thanks.
 

321. bug report number : ['2362']
comment number: 14828384 
body: Which version did you use then?
 

comment number: 14828487 
body: 0.8.0 RC1
 

comment number: 14828908 
body: I didn't even see one as far as I remember... when was it issued and when should it be expired?
 

322. bug report number : ['2353']
comment number: 14689144 
body: bad_alloc means it is running out of memory. How much memory do you have?  What OS?
 

comment number: 14689196 
body: magnus@desktop|21:59|~/src/bitcoin ((v0.8.0)) $ cat /proc/meminfo 
MemTotal:       16445204 kB
MemFree:         4247964 kB
Buffers:          341888 kB
Cached:          8300268 kB
SwapCached:            0 kB
Active:         10045068 kB
Inactive:        1818152 kB
Active(anon):    2951020 kB
Inactive(anon):   303216 kB
Active(file):    7094048 kB
Inactive(file):  1514936 kB
Unevictable:          80 kB
Mlocked:              80 kB
HighTotal:      15751096 kB
HighFree:        4179560 kB
LowTotal:         694108 kB
LowFree:           68404 kB
SwapTotal:      16659452 kB
SwapFree:       16659452 kB
Dirty:              3440 kB
Writeback:             0 kB
AnonPages:       3221360 kB
Mapped:           233656 kB
Shmem:             33172 kB
Slab:             236588 kB
SReclaimable:     200160 kB
SUnreclaim:        36428 kB
KernelStack:        5144 kB
PageTables:        31576 kB
NFS_Unstable:          0 kB
Bounce:                0 kB
WritebackTmp:          0 kB
CommitLimit:    24882052 kB
Committed_AS:    7121976 kB
VmallocTotal:     122880 kB
VmallocUsed:       63688 kB
VmallocChunk:      52276 kB
HardwareCorrupted:     0 kB
AnonHugePages:         0 kB
HugePages_Total:       0
HugePages_Free:        0
HugePages_Rsvd:        0
HugePages_Surp:        0
Hugepagesize:       2048 kB
DirectMap4k:       98296 kB
DirectMap2M:      815104 kB

I'm running Lubuntu 12.04, 32 bit.
 

comment number: 14806541 
body: This is how bitcoin runs out of memory (virtual address space) while downloading blocks:

Whenever a node receives a block that it cannot link to the chain, it stores it in memory in mapOrphanBlocks.  There is no limit to the size of that data.  When a node is downloading blocks, it may download and keep in memory many blocks that it can't currently link to the chain.  In particular, if your node connects to another node which is also downloading blocks and which is further along in the download, the other node will spam your node with an "inv" message for every new block that it downloads (no, the logic in CBlock::AcceptBlock does not prevent it), and your node will download and store those blocks in mapOrphanBlocks.  This can occur with multiple connected nodes simultaneously which are at different points in the download.

I encountered this problem several times with 0.8.0rc1.  With the current size of the blockchain, it is not hard to exhaust the virtual address space (at most 4GiB) in 32-bit builds, which includes all Windows builds.

The fix could proceed in one of two directions: (1) store orphan blocks on disk instead of in memory, or (2) don't keep an unbounded set of orphan blocks.  For (2), the ideal would be to prevent downloading of too many orphans rather than discarding orphans that have already been downloaded, which is wasteful.  The goal would be to download blocks roughly in order.  One idea is to make use of "getheaders" during block download.  Headers would be downloaded and linked together, and blocks would only be downloaded if we already know based on headers that they are not too far away from the chain of blocks that we already have.
 

comment number: 26785284 
body: Headers-first synchronization (being worked on) removes the concept of orphan blocks entirely, as a block is only downloaded when its ancestry is already known, so it can always be saved on disk.
 

comment number: 42101767 
body: Since 0.9.0 the number of orphan blocks that is stored has been restricted, so this immediate issue should be fixed.
 

323. bug report number : ['2306']
comment number: 17197820 
body: Per https://github.com/bitcoin/bitcoin/pull/2584 I believe this is resolved.
 

comment number: 17197850 
body: Thanks to @tariq786 for the fix!
 

comment number: 17197860 
body: Closing as resolved.
 

324. bug report number : ['2301']
comment number: 13476899 
body: Maybe we need a different uri prefix for testnet?
Discriminating on the internals of the address is going to be fragile at
best, as the browser logic cannot handle it.

edit: hm I suppose it's also possible to determine/set the testnet flag in the URL handling logic, though I hardly think that fits within the principle of least surprise. Implications of wrongly starting the testnet client for real transactions or the real client for testnet transactions could be serious, especially for non-developers. It may be a good idea but I have to think about it.
 

comment number: 13496852 
body: I taught the URL handling logic to handle testnet/non-testnet addresses, and it should work on all platforms except OSX: https://github.com/gavinandresen/bitcoin-git/tree/testneturis

The logic is basically:
If given a testnet bitcoin:address on the command-line:
  Try to pass it over a testnet-specific LocalServer socket
  If no testnet LocalServer already running, continue startup as -testnet

That doesn't work on OSX because URL handling is always done via AppleEvents. Even a separate MIME type wouldn't work on OSX, unless we shipped two different flavors of the Bitcoin-Qt.app binary (testnet/main net).
 

comment number: 27279846 
body: Closing; payment protocol fixed for all platforms except OSX (because of the way OSX starts up apps we can't fix).
 

325. bug report number : ['2300']
comment number: 13447865 
body: Possibly related: https://github.com/bitcoin/bitcoin/issues/2204
 

comment number: 13447963 
body: Isn't the first one expected? IIRC we decided on IRC a number of months ago that getwork mining was basically unsupported because the optimizations to make it perform fast enough were too invasive - or something along those lines.

Does 2/3 occur even if you stop the ASIC mining before/during shutdown?
 

comment number: 13450922 
body: gdb session pastes:

backtrace, immediately following attach: http://pastebin.com/ENnXRVyJ
"info threads": http://pastebin.com/ZR8PnXQV
thread id 3 backtrace: http://pastebin.com/wDZpPLqw
thread id 4 backtrace: http://pastebin.com/SQKd6Rsq
thread id 5 backtrace: http://pastebin.com/rDiFDgfC
 

comment number: 68444061 
body: No longer relevant, getwork has been removed.
 

326. bug report number : ['2298']
comment number: 13366466 
body: Appears -fPIE is not being passed down to the leveldb build.
 

comment number: 13754183 
body: Tried again with recent merges, -fPIE is being passed, but it might need -fPIC too?
 

comment number: 27097307 
body: Closing, as this relates to the old build system
 

327. bug report number : ['2293']
comment number: 13357560 
body: Did you copy the files while the application was running?
 

comment number: 13357633 
body: No, I shut it down and it was running with --detach-db=1 (if that matters)
Also: I tried this twice.
 

comment number: 13357750 
body: Ok, interesting. Can you try:
- If you're able to compile on/for the RPi, can you try running the unit tests on it? (cd src; make -f makefile.unix test_bitcoin && ./test_bitcoin). 
- Are you able to sync (even if it's very slow) on the RPi directly?
- Can you copy the files from an RPi to a desktop system, and continue the sync?
 

comment number: 13357918 
body: 1) Will do
2) It syncs and runs fine on the rpi and on the x86 machine. You just can't copy the db from one to the other (both ways will give errors)
3) See 2
 

comment number: 13476551 
body: The test build said "Running 89 test cases, no errors"
 

comment number: 15156780 
body: AFAIK the database files on linux and MS windows are also incompatible with each other. Are there any plans to make it so that the files can be used for the client irrespective of platform/architecture?
 

comment number: 15178622 
body: This is low priority, given that the database may be regenerated from publicly available data at any time.
 

comment number: 37092111 
body: I just checked with master on my cubox-i (4 core, armv7l-linux-gnueabihf, debian jessie). Tried two scenarios:

1) On ARM box 
- bootstrap the first ? blocks using blk00000.dat file from other install
- shut down bitcoind
- copy resulting bitcoin directory to AMD64 box
- run bitcoind on AMD64 box

2) On AMD64 box 
- bootstrap the first 142647 blocks using bootstrap.dat file
- shut down bitcoind
- copy resulting bitcoin directory to ARM box
- run bitcoind on ARM box

Curiously, (1) seemed to work, whereas (2) manages to get past the leveldb validation but then starts to behave very erratic. It accepts blocks but never does anything with them, ie

```
2014-03-08 07:51:31 ProcessBlock: ACCEPTED
2014-03-08 07:51:31 ProcessBlock: ACCEPTED
2014-03-08 07:51:31 ProcessBlock: ACCEPTED
2014-03-08 07:51:31 ProcessBlock: ACCEPTED
2014-03-08 07:51:31 ProcessBlock: ACCEPTED
2014-03-08 07:51:31 ProcessBlock: ACCEPTED
2014-03-08 07:51:31 ProcessBlock: ACCEPTED
....
```

Starting with -checkblocks=0 (which should check the entire database) gives

```
2014-03-08 07:47:38 Verifying last 142647 blocks at level 3
2014-03-08 07:51:22 No coin database inconsistencies in last 4083 blocks (216726 transactions)
2014-03-08 07:51:23  block index          233301ms
```

After a -reindex it works fine.

Edit: re-trying with the copied block index and `-checkblocks=0 -checklevel=3` gives the same kind of errors OP has:

```
2014-03-08 08:21:54 Verifying last 142647 blocks at level 3
2014-03-08 08:22:57 ERROR: DisconnectBlock() : undo data adding output to missing transaction
2014-03-08 08:22:57 ERROR: DisconnectBlock() : undo data adding output to missing transaction
2014-03-08 08:22:57 ERROR: DisconnectBlock() : undo data adding output to missing transaction
2014-03-08 08:22:57 ERROR: DisconnectBlock() : undo data adding output to missing transaction
2014-03-08 08:22:57 ERROR: DisconnectBlock() : undo data adding output to missing transaction
....
```

The daemon hangs after this. 
 

comment number: 37092780 
body: OK this is curious. It it non-deterministic. Sometimes the verify passes, as pindexState gets 'stuck'

```
2014-03-08 08:45:20 Verifying pindexState=138564 pIndex=1
2014-03-08 08:45:20 No coin database inconsistencies in last 4083 blocks (216726 transactions)
2014-03-08 08:45:21  block index          244825ms
```

(this doesn't imply that the resulting index actually works, it doesn't)
 

comment number: 38437350 
body: I too tried to initialize a block index and chainstate database on my x86 system and then copy the files over to a Raspberry Pi. Since both systems are Linux, 32-bit, little-endian, I figured there would be no differences in the on-disk format. However, this is apparently not so. When Bitcoind starts verifying blocks, it immediately starts complaining about missing transactions. However, using the exact same files on the x86 machine (i.e., everything inside blocks/ and chainstate/ identical to what it was when starting on the RPi), Bitcoind starts up and verifies the blocks just fine.

Very disappointing that the on-disk format of these LevelDB databases differs between two architectures that are both 32-bit, little-endian.
 

comment number: 38438051 
body: I think this is unintentional, as the LevelDB on-disk format is very well described (up to the byte level). My guess is a LevelDB bug that only occurs on ARM.

We should probably report this upstream.
 

comment number: 38438344 
body: I guess we would need a minimal test case that produces different data files on ARM than on x86.
 

comment number: 38438611 
body: It may just be a bug in Bitcoin's LevelDB glue code or serialization code too...
 

comment number: 42469061 
body: This is really strange. I've indexed the first four block files both on ARM and AMD64.
To compare the resulting leveldb files I've built a [py-leveldb](https://code.google.com/p/py-leveldb/) against bitcoin's leveldb and started poking at the database files, comparing them in various ways.

``` python
# Compare two bitcoind's leveldbs
import leveldb

dbdira = 'armtest'
dbdirb = 'amd64test'

databases = ['/chainstate', '/blocks/index']

def compare_databases(cs1, cs2):
    ai = cs1.RangeIter()
    bi = cs2.RangeIter()

    n = 0
    err = 0
    aend = bend = False
    while True:
        try:
            a = ai.next()
        except StopIteration:
            aend = True
        try:
            b = bi.next()
        except StopIteration:
            bend = True
        if aend and bend:
            break # both at end of iteration
        if aend or bend or a != b:
            err += 1
        n += 1

    print "Compared %i records" % n
    print "Found %i differences" % err

def compare_databases2(cs1, cs2):
    '''
    Check that all keys of cs1 are in cs2
    and that the values match.
    '''
    ai = cs1.RangeIter()

    n = 0
    err = 0
    for (key,value) in ai:
        try:
            if cs2.Get(key) != value:
                err += 1
        except KeyError:
            err += 1
        n += 1

    print "Compared %i records" % n
    print "Found %i differences" % err

for db in databases:
    print "* Comparing %s" % db
    cs1 = leveldb.LevelDB(dbdira + db)
    cs2 = leveldb.LevelDB(dbdirb + db)
    print "** Check 1"
    compare_databases(cs1, cs2)
    print "** Check 2"
    compare_databases2(cs1, cs2)
    print "** Check 3"
    compare_databases2(cs2, cs1)
    print
```

Output:

```
* Comparing /chainstate
** Check 1
Compared 390331 records
Found 0 differences
** Check 2
Compared 390331 records
Found 0 differences
** Check 3
Compared 390331 records
Found 0 differences

* Comparing /blocks/index
** Check 1
Compared 142654 records
Found 0 differences
** Check 2
Compared 142654 records
Found 0 differences
** Check 3
Compared 142654 records
Found 0 differences
```

Seemingly, there are no differences at all in the data. I've also checked the blk\* and rev*.dat files. They match to the byte. However, bitcoin on AMD64 refuses to work with the ARM files. I'm baffled.

Of course, bitcoin may have some other access pattern that brings to light a bug/difference in a lower level, but this is turning out to be elusive.

**Also:** Re-silvering the ARM-created databases by creating a new database and simply copying all keys/values, makes a database that can be used on AMD64.
 

comment number: 44750915 
body: @laanwj Feel like trying again with #4161 and #4177 merged?
 

comment number: 45187438 
body: OK, going to try
 

comment number: 45210326 
body: I tried using the leveldb files from ARM on AMD64 and vice-versa. Same problem as before - alas, the paranoid checks do not catch this.
 

comment number: 45288852 
body: Thanks for testing!

I wonder: do we get any kind of warning/error in chainstate/LOG ?
 

comment number: 45345543 
body: I'll check next time.

I'm working on recording a trace of bitcoind's access pattern, then replaying that against the two database instance and seeing where returned values start to diverge. 
 

comment number: 45358143 
body: I found the bug! Well at least I've narrowed it down a lot. The problem is in the `filter_policy`, which is set to `leveldb::NewBloomFilterPolicy(10)`. Seemingly this filter policy data is not portable.
Commenting out that line makes the same block index files work on ARM and AMD64.

This explains why the database works fine after resilvering in my above post (and in general in py_leveldb, which doesn't use a filter policy...).
 

comment number: 45407906 
body: The Hash function used for the bloom filter was returning different values based on character signedness in some edge cases. See https://github.com/bitcoin/leveldb/pull/5 for fix.
Upstream issue: https://code.google.com/p/leveldb/issues/detail?id=237
 

comment number: 47618028 
body: It doesn't seem that the upstream issue is being picked up. Platform compatibility of the databases is likely very low-priority for them.

We _could_ work around this completely on the bitcoind side by providing our own FilterPolicy() implementation and passing it in with the options. That's just a small class that hashes keys and tests against them: https://github.com/bitcoin/bitcoin/blob/master/src/leveldb/util/bloom.cc#L17 .
 

comment number: 59891584 
body: See #5093
 

328. bug report number : ['2290']
comment number: 13338217 
body: Perhaps we need to make it "$(git describe):${filename}"?
 

comment number: 21068966 
body: How about changing the bitcoind make file, makefile.mingw (I'm a windows compiler)
from:

obj/%.o: %.cpp $(HEADERS)
    $(CXX) -c $(CFLAGS) -o $@ $<
to:

obj/%.o: %.cpp $(HEADERS)
    $(CXX) -c -frandom-seed=$@ $(CFLAGS) -o $@ $<

and similarly for the bitcoin-qt makefiles? They compile OK.

Ron
 

comment number: 21150446 
body: RE: -frandom-seed=$@ : good idea!
 

comment number: 21159270 
body: Do I do some sort of fork-clone-commit to github? It seems easy enough to modify all bitcoind makefile.\* makefiles? But bitcoin-qt.pro, that is not clear at all to me. Don't even know how it does those 4 lines in makefile.release/debug now? Nor how to fix the missing lib path (for windows) in the makefiles by changing something in bitcoin-qt.pro, see 
message #41from May
https://bitcointalk.org/index.php?topic=149479.msg2177060#msg2177060 

Ron
 

comment number: 21159521 
body: First, "fork" the repo on the GitHub website, then do:
- git clone git@github.com:bitcoin/bitcoin.git
- cd bitcoin
- git remote add personal git@github.com:old-c-coder/bitcoin.git

This sets up your local repo to pull from the master and push to your "fork".
Then, to make your changes, do:
- git checkout -b per_file_randomseed # (this names your branch)
- #(make changes here)
- git commit -a
- git push personal per_file_randomseed
  Go back to GitHub's web interface and click the button that will show up - something like "Compare & Pull Request"

Note that you will probably need to re-do your changes after automake is merged, but you might want to give it a go now for practice.
 

comment number: 21161251 
body: Do I actually send an email to git@github.com? 
Do I change to a bitcoin directory on whose machine, drive,OS, where?
Your 3rd line is equally "opaque" to me!

I have no context for any of this. I am running github for windows, so I see none of your command line "arcana":) 

I presume I should fork a repository on https://github.com/bitcoin/bitcoin? If so, which "branch of the master" tab? And/or which "tag" tab that I see there? Or is this the wrong way to go? I seemed to have forked-cloned a "master" repository, in the past, and was unable to "commit" it?

But I presume you have seen my "pull request" on the bitcoin-qt" splash screen and "liberating" wallet.dat?

Ron
 

comment number: 21939750 
body: Well, I just made my change to 
https://github.com/old-c-coder/bitcoin-git/commit/d511cff2fceb0a2b8e9fe248800edcf1b766288a 
showing the modified bitcoind makefiles

Ron
 

comment number: 64308971 
body: We don't use frandom-seed at all anymore after #4724, closing this.
 

comment number: 64381226 
body: @laanwj That PR number seems wrong?
 

comment number: 64385571 
body: eh #4727
 

comment number: 64385874 
body: @laanwj Then how do we end up with deterministic binaries?
 

comment number: 64600212 
body: According the @theuni it's no longer necessary, and indeed in practice the gitian results are deterministic. I don't fully understand why either.
 

comment number: 66185247 
body: I also don't fully understand why. I dove into gcc's source to look at its usage, and it still seems to be using the system time as part of the random seed. I didn't track it any further, though.

My best guess is that the random seed only gets used in rare collision cases which we don't hit. As a possible example, building and linking multiple source files with different definitions of the same static function, via a single gcc invocation like: "gcc file1.c file2.c -o file".

It's easy enough to verify though. Just create a simple test.c and build it twice with gcc. The hashes should be identical even without gitian.
 

329. bug report number : ['2280']
comment number: 21321783 
body: Having quick look at code looks like it will still resolve the other ips if the hard coded ip fails. 

Also, if someone is thinking of cleaning this up a bit, i've already made a external ip checker (in perl), which uses a few services. See https://github.com/hughdavenport/dynamic-ip-checker/blob/master/checkip.pl#L11-L26
 

comment number: 21321855 
body: We shouldn't be using any of these services at all (because it allows them to track bitcoin users, at least ones who haven't -discover=0 or -listen=0). UPNP covers this for cases where upnp supported, and we have apparent addresses in our own protocol which we could use...
 

comment number: 26705650 
body: It's come to the point that it is currently breaking, 
See #3088 for the solution.
 

comment number: 66279088 
body: As this was removed from our codebase (Thx @gmaxwell), I'll close this!
 

330. bug report number : ['2267']
comment number: 144705976 
body: Works here on regtest:

```
> listunspent

[
...
{
"txid": "dbea6d5785707b97a9ceb8943502e41925e9f765740bd0df1961e93a1652d083",
"vout": 0,
"address": "mkgUgzujPDmYRbhFZhc8Tz1GFtd7ihhYFV",
"scriptPubKey": "21027d9d4cb50d15b22d0e739bfaed87509f634bdfb1d010f25ea4c7cbca489f3dcbac",
"amount": 50.00000000,
"confirmations": 104,
"spendable": true
}
]

> createrawtransaction "[{\"txid\":\"dbea6d5785707b97a9ceb8943502e41925e9f765740bd0df1961e93a1652d083\",\"vout\":0}]" "{\"mugZmmNY1q1PeWsszGzvMEvWWbAgGjcNuQ\":40}"

010000000183d052163ae96119dfd00b7465f7e92519e4023594b8cea9977b7085576deadb0000000000ffffffff0100286bee000000001976a9149b631eb819687a6c1652e4664cef525e4ef8d2b788ac00000000

> decoderawtransaction 010000000183d052163ae96119dfd00b7465f7e92519e4023594b8cea9977b7085576deadb0000000000ffffffff0100286bee000000001976a9149b631eb819687a6c1652e4664cef525e4ef8d2b788ac00000000

{
"txid": "0fddff76b31deb4b27ebee244036bbc44a31fdfbde9516e8745d0ad1ec4eba59",
"version": 1,
"locktime": 0,
"vin": [
{
"txid": "dbea6d5785707b97a9ceb8943502e41925e9f765740bd0df1961e93a1652d083",
"vout": 0,
"scriptSig": {
"asm": "",
"hex": ""
},
"sequence": 4294967295
}
],
"vout": [
{
"value": 40.00000000,
"n": 0,
"scriptPubKey": {
"asm": "OP_DUP OP_HASH160 9b631eb819687a6c1652e4664cef525e4ef8d2b7 OP_EQUALVERIFY OP_CHECKSIG",
"hex": "76a9149b631eb819687a6c1652e4664cef525e4ef8d2b788ac",
"reqSigs": 1,
"type": "pubkeyhash",
"addresses": [
"mugZmmNY1q1PeWsszGzvMEvWWbAgGjcNuQ"
]
}
}
]
}

> signrawtransaction 010000000183d052163ae96119dfd00b7465f7e92519e4023594b8cea9977b7085576deadb0000000000ffffffff0100286bee000000001976a9149b631eb819687a6c1652e4664cef525e4ef8d2b788ac00000000

{
"hex": "010000000183d052163ae96119dfd00b7465f7e92519e4023594b8cea9977b7085576deadb0000000049483045022100fdafbd08e99c345f42faf038cae5eef321fd43378e2159f3999958210602e06102201950ffe4e5dd70d655262fe1d7c76ff92e5154ac2e9595c651b422e495cdfa8001ffffffff0100286bee000000001976a9149b631eb819687a6c1652e4664cef525e4ef8d2b788ac00000000",
"complete": true
}

```
 

comment number: 144766902 
body: @paveljanik Thanks for testing. Although I think @gavinandresen means a different thing: you're signing a transaction that spends a coinbase transaction, not signing a coinbase transaction
 

comment number: 144773893 
body: The log (http://www.bitbin.it/raw.php?id=wh0V8Q6I) is spending coinbase transaction output... It looks like this testnet block: http://tbtc.blockr.io/block/info/49147
Coinbase is 0dd6c0e60a4c39e3e3371c4d83896f941a9979b5327aae2ae414165957b99428 and the user tried:

```
#bitcoind createrawtransaction '[{"txid":"0dd6c0e60a4c39e3e3371c4d83896f941a9979b5327aae2ae414165957b99428","vout":0}]' '{"miUL2hm9kV4jzSPFhS9rciafxtPiE7doqP":50}'
```

So IIUIC, he is signing the transaction spending the coinbase transaction output.
But maybe I do not see it/am blind ;-)
 

comment number: 144780189 
body: Whoa. I have reused the regtest tree from previous run. Will replicate with coinbase transaction...
 

comment number: 144780979 
body: ```
> gettransaction d6a815dca3ad60e798a653b3768fa0bd79125772063684a9f969b533fe0ae9ef

{
"amount": 50.00000000,
"confirmations": 121,
"generated": true,
"blockhash": "579329c48041083807855fb3bb048c5e571936e3733ffebddad210ee38516b1f",
"blockindex": 0,
"blocktime": 1443714885,
"txid": "d6a815dca3ad60e798a653b3768fa0bd79125772063684a9f969b533fe0ae9ef",
"walletconflicts": [
],
"time": 1443714882,
"timereceived": 1443714882,
"details": [
{
"account": "",
"address": "mn8Ui1zzSpSCg3b6p8Zbw2hqD1RhdjP6Wh",
"category": "generate",
"amount": 50.00000000,
"vout": 0
}
],
"hex": "01000000010000000000000000000000000000000000000000000000000000000000000000ffffffff04012d0101ffffffff0100f2052a01000000232103c8d456ff17fb575601f3758a31cedb9856d5b5245a9d8d968df1e98907af02b4ac00000000"
}

> createrawtransaction "[{\"txid\":\"d6a815dca3ad60e798a653b3768fa0bd79125772063684a9f969b533fe0ae9ef\",\"vout\":0}]" "{\"mugZmmNY1q1PeWsszGzvMEvWWbAgGjcNuQ\":50}"

0100000001efe90afe33b569f9a984360672571279bda08f76b353a698e760ada3dc15a8d60000000000ffffffff0100f2052a010000001976a9149b631eb819687a6c1652e4664cef525e4ef8d2b788ac00000000

> signrawtransaction 0100000001efe90afe33b569f9a984360672571279bda08f76b353a698e760ada3dc15a8d60000000000ffffffff0100f2052a010000001976a9149b631eb819687a6c1652e4664cef525e4ef8d2b788ac00000000

{
"hex": "0100000001efe90afe33b569f9a984360672571279bda08f76b353a698e760ada3dc15a8d6000000004847304402204fd12f1e6f7fb96157ebd20b3165ae69daad06e650362115fe4c705dac139f35022052089d59a243ef0bfb017a32ab9ed9bc44449dad65c0da4e76c7f1689cf94d2201ffffffff0100f2052a010000001976a9149b631eb819687a6c1652e4664cef525e4ef8d2b788ac00000000",
"complete": true
}
```
 

comment number: 184728648 
body: From @paveljanik's output this seems to be working. Closing this for lack of further information for diagnosing this problem. Feel free to tag me to reopen this issue if this happens again.
 

331. bug report number : ['2239']
comment number: 12892067 
body: Cause is, that an empty data-dir contains no /blocks/ and no block-files at all but we set fReindex = false not till the import thread is running and fails calling `OpenBlockFile()`. I guess this is not very nice for bitcoind also.
 

comment number: 12908100 
body: Can't reproduce in bitcoind.

In Bitcoin-Qt, the crash is pindexBest being null in:

   49   QDateTime ClientModel::getLastBlockDate() const
   50   {
   51       return QDateTime::fromTime_t(pindexBest->GetBlockTime());
   52   }
 

comment number: 12918977 
body: Fix pulled.
 

332. bug report number : ['2212']
comment number: 12640923 
body: What build is this, based on which pull-request?
 

comment number: 12648597 
body: The tested build is f4445f9982a760869c430f3d4b1302f7eb509bd8 here:
http://bitcoin.sipa.be/builds/pre-0.8/2013-01-13-turbo-ldb17/info/commits.after-v0.7.1.txt
SHA256: 52255782...
It was the one linked in this testing plan: https://github.com/gavinandresen/QA/blob/master/HardLinksUpgrade.md, although the link is dead now.

0.7.2 has the same issues dealing with the corrupted wallet though. Bitcoin does an automatic wallet salvage recovery, and future launches of Bitcoin have the same error. We only need to let users know once that "salvage" toasted everything except addresses, not every time.

The corrupt wallet was created by 0.3.24 on a VM that crashed while Bitcoin was running.
 

