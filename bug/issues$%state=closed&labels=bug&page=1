[
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/12366",
    "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
    "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/12366/labels{/name}",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/12366/comments",
    "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/12366/events",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/12366",
    "id": 294866477,
    "number": 12366,
    "title": "http: Join worker threads before deleting work queue",
    "user": {
      "login": "laanwj",
      "id": 126646,
      "avatar_url": "https://avatars0.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 64585,
        "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Bug",
        "name": "Bug",
        "color": "FBBAAB",
        "default": false
      },
      {
        "id": 98279177,
        "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/RPC/REST/ZMQ",
        "name": "RPC/REST/ZMQ",
        "color": "0052cc",
        "default": false
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/milestones/30",
      "html_url": "https://github.com/bitcoin/bitcoin/milestone/30",
      "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/milestones/30/labels",
      "id": 2626187,
      "number": 30,
      "title": "0.16.0",
      "description": "This will be the release of segwit wallet. ðŸŽ‰ ",
      "creator": {
        "login": "laanwj",
        "id": 126646,
        "avatar_url": "https://avatars0.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
        "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "open_issues": 0,
      "closed_issues": 70,
      "state": "closed",
      "created_at": "2017-07-06T19:58:41Z",
      "updated_at": "2018-03-07T16:28:13Z",
      "due_on": null,
      "closed_at": "2018-03-07T16:28:13Z"
    },
    "comments": 5,
    "created_at": "2018-02-06T18:32:19Z",
    "updated_at": "2018-02-08T09:24:44Z",
    "closed_at": "2018-02-08T08:22:54Z",
    "author_association": "OWNER",
    "pull_request": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/12366",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/12366",
      "diff_url": "https://github.com/bitcoin/bitcoin/pull/12366.diff",
      "patch_url": "https://github.com/bitcoin/bitcoin/pull/12366.patch"
    },
    "body": "This prevents a potential race condition if control flow ends up in\r\n`ShutdownHTTPServer` before the thread gets to `queue->Run()`,\r\ndeleting the work queue while workers are still going to use it.\r\n\r\nMeant to fix #12362."
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/11745",
    "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
    "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/11745/labels{/name}",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/11745/comments",
    "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/11745/events",
    "html_url": "https://github.com/bitcoin/bitcoin/issues/11745",
    "id": 275785900,
    "number": 11745,
    "title": "Wrong file open mode",
    "user": {
      "login": "Elbandi",
      "id": 44674,
      "avatar_url": "https://avatars2.githubusercontent.com/u/44674?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Elbandi",
      "html_url": "https://github.com/Elbandi",
      "followers_url": "https://api.github.com/users/Elbandi/followers",
      "following_url": "https://api.github.com/users/Elbandi/following{/other_user}",
      "gists_url": "https://api.github.com/users/Elbandi/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Elbandi/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Elbandi/subscriptions",
      "organizations_url": "https://api.github.com/users/Elbandi/orgs",
      "repos_url": "https://api.github.com/users/Elbandi/repos",
      "events_url": "https://api.github.com/users/Elbandi/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Elbandi/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 64585,
        "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Bug",
        "name": "Bug",
        "color": "FBBAAB",
        "default": false
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 2,
    "created_at": "2017-11-21T16:53:27Z",
    "updated_at": "2017-11-29T11:00:05Z",
    "closed_at": "2017-11-29T11:00:05Z",
    "author_association": "CONTRIBUTOR",
    "body": "Block and undo files are open by OpenDiskFile, there is a read only parameter. But in fopen function call, \"rb+\" mode is read-or-write mode, read-only paramter is ignored, so it always open for write.\r\nhttps://github.com/bitcoin/bitcoin/blob/master/src/validation.cpp#L3467\r\n\r\nfrom fopen man: \r\n\r\n    r+ or rb+ or r+b\r\n      Open file for update (reading and writing).\r\n    w+ or wb+ or w+b\r\n      Truncate to zero length or create file for update.\r\n\r\nIs this a bug or feature?\r\n\r\n(old times in readonly open, fopen is called by \"rb\" mode: https://github.com/bitcoin/bitcoin/commit/5382bcf8cd23c36a435c29080770a79b5e28af42#diff-e8db9b851adc2422aadfffca88f14c91L635)"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/11327",
    "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
    "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/11327/labels{/name}",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/11327/comments",
    "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/11327/events",
    "html_url": "https://github.com/bitcoin/bitcoin/issues/11327",
    "id": 257727232,
    "number": 11327,
    "title": "Deadlock detection bogus",
    "user": {
      "login": "NicolasDorier",
      "id": 3020646,
      "avatar_url": "https://avatars0.githubusercontent.com/u/3020646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/NicolasDorier",
      "html_url": "https://github.com/NicolasDorier",
      "followers_url": "https://api.github.com/users/NicolasDorier/followers",
      "following_url": "https://api.github.com/users/NicolasDorier/following{/other_user}",
      "gists_url": "https://api.github.com/users/NicolasDorier/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/NicolasDorier/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/NicolasDorier/subscriptions",
      "organizations_url": "https://api.github.com/users/NicolasDorier/orgs",
      "repos_url": "https://api.github.com/users/NicolasDorier/repos",
      "events_url": "https://api.github.com/users/NicolasDorier/events{/privacy}",
      "received_events_url": "https://api.github.com/users/NicolasDorier/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 64585,
        "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Bug",
        "name": "Bug",
        "color": "FBBAAB",
        "default": false
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 2,
    "created_at": "2017-09-14T13:52:12Z",
    "updated_at": "2018-01-24T01:46:16Z",
    "closed_at": "2018-01-24T01:46:16Z",
    "author_association": "MEMBER",
    "body": "At startup, seems to happen when rebroadcasting wallet's transactions, running 0.15 rc3: (enable-debug)\r\n\r\n```\r\n2017-09-14 13:17:09 POTENTIAL DEADLOCK DETECTED\r\n2017-09-14 13:17:09 Previous lock order was:\r\n2017-09-14 13:17:09  cs_main  wallet/wallet.cpp:1655\r\n2017-09-14 13:17:09  cs_wallet  wallet/wallet.cpp:1655\r\n2017-09-14 13:17:09  (1) mempool.cs  wallet/wallet.cpp:1677\r\n2017-09-14 13:17:09  cs_main  wallet/wallet.cpp:1233\r\n2017-09-14 13:17:09  (2) cs_wallet  wallet/wallet.cpp:1233\r\n2017-09-14 13:17:09 Current lock order is:\r\n2017-09-14 13:17:09  cs_main  wallet/wallet.cpp:1655\r\n2017-09-14 13:17:09  (2) cs_wallet  wallet/wallet.cpp:1655\r\n2017-09-14 13:17:09  (1) mempool.cs  wallet/wallet.cpp:1677\r\nAssertion failed!\r\n\r\nProgram: C:\\Program Files\\Bitcoin-0.15.0\\bin\\bitcoind.exe\r\n```\r\n\r\n~Tried with https://github.com/bitcoin/bitcoin/pull/11126 but no improvement.~ (I screwed up the deployement so I have not tried actually, but the error seems to be different lock path)\r\n\r\nI am unsure if the problem is in the lock detection (obviously no deadlock possible here), or in the actual code using an unsafe construct."
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/11262",
    "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
    "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/11262/labels{/name}",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/11262/comments",
    "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/11262/events",
    "html_url": "https://github.com/bitcoin/bitcoin/issues/11262",
    "id": 255887263,
    "number": 11262,
    "title": "bitcoin-qt segmentation fault",
    "user": {
      "login": "mputter",
      "id": 900530,
      "avatar_url": "https://avatars0.githubusercontent.com/u/900530?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mputter",
      "html_url": "https://github.com/mputter",
      "followers_url": "https://api.github.com/users/mputter/followers",
      "following_url": "https://api.github.com/users/mputter/following{/other_user}",
      "gists_url": "https://api.github.com/users/mputter/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mputter/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mputter/subscriptions",
      "organizations_url": "https://api.github.com/users/mputter/orgs",
      "repos_url": "https://api.github.com/users/mputter/repos",
      "events_url": "https://api.github.com/users/mputter/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mputter/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 64585,
        "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Bug",
        "name": "Bug",
        "color": "FBBAAB",
        "default": false
      },
      {
        "id": 135946,
        "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/GUI",
        "name": "GUI",
        "color": "02d7e1",
        "default": false
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 6,
    "created_at": "2017-09-07T10:17:11Z",
    "updated_at": "2017-09-20T10:42:59Z",
    "closed_at": "2017-09-20T10:42:59Z",
    "author_association": "NONE",
    "body": "I downloaded and compiled Bitcoin Core from GitHub (Bitcoin Core Daemon version v0.15.99.0-d81dccf)\r\nBitcoind and cli work fine, but starting up bitcoin-qt fails:\r\n\r\nconsole: Segmentation Fault\r\nKDE menu: after some initialisation, loading block index etc. screen dissappears.\r\n\r\nFound possibly something useful for people who understand these log-entries:\r\n/var/log/apport.log\r\nERROR: apport (pid 6859) Thu Sep  7 11:53:41 2017: executable: /usr/local/bin/bitcoin-qt (command line \"bitcoin-qt\")\r\nERROR: apport (pid 6859) Thu Sep  7 11:53:41 2017: executable does not belong to a package, ignoring\r\n\r\n/var/log/syslog\r\n[96080.684487] bitcoin-qt[6838]: segfault at 8 ip 00007fdfd5d8aa2d sp 00007ffd949139e0 error 4 in libQt5Widgets.so.5.5.1[7fdfd5b31000+659000]\r\n\r\nThe debug.log of Bitcoin doesn't reveal useful data.\r\n\r\nI'm running Kubuntu:\r\n$ uname -a\r\nLinux enterprise 4.4.0-93-generic #116-Ubuntu SMP Fri Aug 11 21:17:51 UTC 2017 x86_64 x86_64 x86_64 GNU/Linux\r\n\r\n$  lsb_release -a\r\nNo LSB modules are available.\r\nDistributor ID: Ubuntu\r\nDescription:    Ubuntu 16.04.3 LTS\r\nRelease:        16.04\r\nCodename:       xenial\r\n"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/11114",
    "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
    "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/11114/labels{/name}",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/11114/comments",
    "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/11114/events",
    "html_url": "https://github.com/bitcoin/bitcoin/issues/11114",
    "id": 252121508,
    "number": 11114,
    "title": "CScript += operator double free if destination and operand are the same.",
    "user": {
      "login": "guidovranken",
      "id": 6846644,
      "avatar_url": "https://avatars3.githubusercontent.com/u/6846644?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/guidovranken",
      "html_url": "https://github.com/guidovranken",
      "followers_url": "https://api.github.com/users/guidovranken/followers",
      "following_url": "https://api.github.com/users/guidovranken/following{/other_user}",
      "gists_url": "https://api.github.com/users/guidovranken/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/guidovranken/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/guidovranken/subscriptions",
      "organizations_url": "https://api.github.com/users/guidovranken/orgs",
      "repos_url": "https://api.github.com/users/guidovranken/repos",
      "events_url": "https://api.github.com/users/guidovranken/events{/privacy}",
      "received_events_url": "https://api.github.com/users/guidovranken/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 64585,
        "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Bug",
        "name": "Bug",
        "color": "FBBAAB",
        "default": false
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 5,
    "created_at": "2017-08-22T23:55:49Z",
    "updated_at": "2017-10-07T08:53:10Z",
    "closed_at": "2017-10-07T08:53:10Z",
    "author_association": "NONE",
    "body": "### Describe the issue\r\n\r\n### Can you reliably reproduce the issue?\r\n#### If so, please list the steps to reproduce below:\r\n```c\r\nCScript cs;\r\ncs << ParseHex(\"04678afdb0fe5548271967f1a67130b7105cd6a828e03909a67962e0ea1f61deb649f6bc3f4cef38c4f35504e51ec112de5c384df7ba0b8d578a4c702b6bf11d5f\")\r\n<< OP_CHECKSIG;\r\ncs += cs;\r\n```\r\n\r\n### Expected behaviour\r\nSafe behaviour: no double free.\r\n\r\n### Actual behaviour\r\nInsecure behaviour: double-free.\r\n\r\n### Screenshots.\r\n\r\n### What version of bitcoin-core are you using?\r\nbitcoin-0.14.2, self-compiled\r\n\r\n### Machine specs:\r\n- OS: Linux\r\n- CPU:\r\n- RAM:\r\n- Disk size:\r\n- Disk Type (HD/SDD):\r\n\r\n### Any extra information that might be useful in the debugging process.\r\nAddressSanitizer backtrace:\r\n\r\n```\r\n=================================================================\r\n==3429==ERROR: AddressSanitizer: heap-use-after-free on address\r\n0x60b000000040 at pc 0x0000004f919c bp 0x7ffe66520c30 sp\r\n0x7ffe66520c28\r\nREAD of size 1 at 0x60b000000040 thread T0\r\n    #0 0x4f919b in void prevector<28u, unsigned char, unsigned int,\r\nint>::insert<prevector<28u, unsigned char, unsigned int,\r\nint>::const_iterator>(prevector<28u, unsigned char, unsigned int,\r\nint>::iterator, prevector<28u, unsigned char, unsigned int,\r\nint>::const_iterator, prevector<28u, unsigned char, unsigned int,\r\nint>::const_iterator)\r\n/home/jhg/extrahd/bitcoin-fuzzer/bitcoin-0.14.2/fuzz-pr/../src/prevector.h:378:52\r\n    #1 0x4f919b in CScript::operator+=(CScript const&)\r\n/home/jhg/extrahd/bitcoin-fuzzer/bitcoin-0.14.2/fuzz-pr/../src/script/script.h:403\r\n    #2 0x4f919b in main\r\n/home/jhg/extrahd/bitcoin-fuzzer/bitcoin-0.14.2/fuzz-pr/cscript-test.cpp:11\r\n    #3 0x7f3667db3b44 in __libc_start_main\r\n/build/glibc-6V9RKT/glibc-2.19/csu/libc-start.c:287\r\n    #4 0x420d1f in _start\r\n(/home/jhg/extrahd/bitcoin-fuzzer/bitcoin-0.14.2/fuzz-pr/a.out+0x420d1f)\r\n\r\n0x60b000000040 is located 0 bytes inside of 99-byte region\r\n[0x60b000000040,0x60b0000000a3)\r\nfreed by thread T0 here:\r\n    #0 0x4c9015 in realloc\r\n(/home/jhg/extrahd/bitcoin-fuzzer/bitcoin-0.14.2/fuzz-pr/a.out+0x4c9015)\r\n    #1 0x4fe2b9 in prevector<28u, unsigned char, unsigned int,\r\nint>::change_capacity(unsigned int)\r\n/home/jhg/extrahd/bitcoin-fuzzer/bitcoin-0.14.2/fuzz-pr/../src/prevector.h:177:54\r\n    #2 0x4f8a54 in void prevector<28u, unsigned char, unsigned int,\r\nint>::insert<prevector<28u, unsigned char, unsigned int,\r\nint>::const_iterator>(prevector<28u, unsigned char, unsigned int,\r\nint>::iterator, prevector<28u, unsigned char, unsigned int,\r\nint>::const_iterator, prevector<28u, unsigned char, unsigned int,\r\nint>::const_iterator)\r\n/home/jhg/extrahd/bitcoin-fuzzer/bitcoin-0.14.2/fuzz-pr/../src/prevector.h:373:13\r\n    #3 0x4f8a54 in CScript::operator+=(CScript const&)\r\n/home/jhg/extrahd/bitcoin-fuzzer/bitcoin-0.14.2/fuzz-pr/../src/script/script.h:403\r\n    #4 0x4f8a54 in main\r\n/home/jhg/extrahd/bitcoin-fuzzer/bitcoin-0.14.2/fuzz-pr/cscript-test.cpp:11\r\n    #5 0x7f3667db3b44 in __libc_start_main\r\n/build/glibc-6V9RKT/glibc-2.19/csu/libc-start.c:287\r\n\r\npreviously allocated by thread T0 here:\r\n    #0 0x4c8c73 in __interceptor_malloc\r\n(/home/jhg/extrahd/bitcoin-fuzzer/bitcoin-0.14.2/fuzz-pr/a.out+0x4c8c73)\r\n    #1 0x4fe0f1 in prevector<28u, unsigned char, unsigned int,\r\nint>::change_capacity(unsigned int)\r\n/home/jhg/extrahd/bitcoin-fuzzer/bitcoin-0.14.2/fuzz-pr/../src/prevector.h:181:57\r\n    #2 0x4fb16c in void prevector<28u, unsigned char, unsigned int,\r\nint>::insert<__gnu_cxx::__normal_iterator<unsigned char const*,\r\nstd::vector<unsigned char, std::allocator<unsigned char> > >\r\n>(prevector<28u, unsigned char, unsigned int, int>::iterator,\r\n__gnu_cxx::__normal_iterator<unsigned char const*,\r\nstd::vector<unsigned char, std::allocator<unsigned char> > >,\r\n__gnu_cxx::__normal_iterator<unsigned char const*,\r\nstd::vector<unsigned char, std::allocator<unsigned char> > >)\r\n/home/jhg/extrahd/bitcoin-fuzzer/bitcoin-0.14.2/fuzz-pr/../src/prevector.h:373:13\r\n    #3 0x4fb16c in CScript::operator<<(std::vector<unsigned char,\r\nstd::allocator<unsigned char> > const&)\r\n/home/jhg/extrahd/bitcoin-fuzzer/bitcoin-0.14.2/fuzz-pr/../src/script/script.h:462\r\n    #4 0x4f8503 in main\r\n/home/jhg/extrahd/bitcoin-fuzzer/bitcoin-0.14.2/fuzz-pr/cscript-test.cpp:10:8\r\n    #5 0x7f3667db3b44 in __libc_start_main\r\n/build/glibc-6V9RKT/glibc-2.19/csu/libc-start.c:287\r\n```"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/11106",
    "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
    "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/11106/labels{/name}",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/11106/comments",
    "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/11106/events",
    "html_url": "https://github.com/bitcoin/bitcoin/issues/11106",
    "id": 251692907,
    "number": 11106,
    "title": "Race in printing mapBlockIndex.size() in init",
    "user": {
      "login": "TheBlueMatt",
      "id": 649246,
      "avatar_url": "https://avatars0.githubusercontent.com/u/649246?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TheBlueMatt",
      "html_url": "https://github.com/TheBlueMatt",
      "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
      "following_url": "https://api.github.com/users/TheBlueMatt/following{/other_user}",
      "gists_url": "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
      "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
      "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
      "events_url": "https://api.github.com/users/TheBlueMatt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 64585,
        "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Bug",
        "name": "Bug",
        "color": "FBBAAB",
        "default": false
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 0,
    "created_at": "2017-08-21T15:25:00Z",
    "updated_at": "2017-10-05T13:09:32Z",
    "closed_at": "2017-10-05T13:09:32Z",
    "author_association": "CONTRIBUTOR",
    "body": "init.cpp:1635 prints mapBlockIndex.size() without cs_main. This is technically a race (though it is rather inconsequential). At some point someone should fix this so tsan stops complaining."
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/11041",
    "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
    "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/11041/labels{/name}",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/11041/comments",
    "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/11041/events",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/11041",
    "id": 249883421,
    "number": 11041,
    "title": "Add LookupBlockIndex",
    "user": {
      "login": "promag",
      "id": 3534524,
      "avatar_url": "https://avatars1.githubusercontent.com/u/3534524?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 64585,
        "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Bug",
        "name": "Bug",
        "color": "FBBAAB",
        "default": false
      },
      {
        "id": 135961,
        "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Refactoring",
        "name": "Refactoring",
        "color": "E6F6D6",
        "default": false
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 20,
    "created_at": "2017-08-13T16:24:41Z",
    "updated_at": "2018-03-13T22:43:40Z",
    "closed_at": "2018-03-13T18:13:01Z",
    "author_association": "CONTRIBUTOR",
    "pull_request": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/11041",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/11041",
      "diff_url": "https://github.com/bitcoin/bitcoin/pull/11041.diff",
      "patch_url": "https://github.com/bitcoin/bitcoin/pull/11041.patch"
    },
    "body": "Replace all `mapBlockIndex` lookups with the new `LookupBlockIndex()`. In some cases it avoids a second lookup."
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/11027",
    "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
    "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/11027/labels{/name}",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/11027/comments",
    "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/11027/events",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/11027",
    "id": 249501220,
    "number": 11027,
    "title": "[RPC] Only return hex field once in getrawtransaction",
    "user": {
      "login": "achow101",
      "id": 3782274,
      "avatar_url": "https://avatars3.githubusercontent.com/u/3782274?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/achow101",
      "html_url": "https://github.com/achow101",
      "followers_url": "https://api.github.com/users/achow101/followers",
      "following_url": "https://api.github.com/users/achow101/following{/other_user}",
      "gists_url": "https://api.github.com/users/achow101/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/achow101/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
      "organizations_url": "https://api.github.com/users/achow101/orgs",
      "repos_url": "https://api.github.com/users/achow101/repos",
      "events_url": "https://api.github.com/users/achow101/events{/privacy}",
      "received_events_url": "https://api.github.com/users/achow101/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 64585,
        "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Bug",
        "name": "Bug",
        "color": "FBBAAB",
        "default": false
      },
      {
        "id": 98279177,
        "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/RPC/REST/ZMQ",
        "name": "RPC/REST/ZMQ",
        "color": "0052cc",
        "default": false
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/milestones/25",
      "html_url": "https://github.com/bitcoin/bitcoin/milestone/25",
      "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/milestones/25/labels",
      "id": 2174061,
      "number": 25,
      "title": "0.15.0",
      "description": "",
      "creator": {
        "login": "MarcoFalke",
        "id": 6399679,
        "avatar_url": "https://avatars0.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "open_issues": 0,
      "closed_issues": 120,
      "state": "closed",
      "created_at": "2016-12-04T13:31:14Z",
      "updated_at": "2017-10-12T19:32:58Z",
      "due_on": null,
      "closed_at": "2017-10-12T19:32:58Z"
    },
    "comments": 14,
    "created_at": "2017-08-10T23:08:49Z",
    "updated_at": "2017-08-29T15:27:49Z",
    "closed_at": "2017-08-21T06:59:02Z",
    "author_association": "MEMBER",
    "pull_request": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/11027",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/11027",
      "diff_url": "https://github.com/bitcoin/bitcoin/pull/11027.diff",
      "patch_url": "https://github.com/bitcoin/bitcoin/pull/11027.patch"
    },
    "body": "The hex is already returned in `TxToUniv()`, no need to give it out a second time in getrawtransaction itself."
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/10924",
    "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
    "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/10924/labels{/name}",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/10924/comments",
    "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/10924/events",
    "html_url": "https://github.com/bitcoin/bitcoin/issues/10924",
    "id": 245334814,
    "number": 10924,
    "title": "[RPC][Wallet][Segwit] Bug: Transaction sent to imported P2WSH does not appear in listtransaction.",
    "user": {
      "login": "NicolasDorier",
      "id": 3020646,
      "avatar_url": "https://avatars0.githubusercontent.com/u/3020646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/NicolasDorier",
      "html_url": "https://github.com/NicolasDorier",
      "followers_url": "https://api.github.com/users/NicolasDorier/followers",
      "following_url": "https://api.github.com/users/NicolasDorier/following{/other_user}",
      "gists_url": "https://api.github.com/users/NicolasDorier/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/NicolasDorier/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/NicolasDorier/subscriptions",
      "organizations_url": "https://api.github.com/users/NicolasDorier/orgs",
      "repos_url": "https://api.github.com/users/NicolasDorier/repos",
      "events_url": "https://api.github.com/users/NicolasDorier/events{/privacy}",
      "received_events_url": "https://api.github.com/users/NicolasDorier/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 64585,
        "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Bug",
        "name": "Bug",
        "color": "FBBAAB",
        "default": false
      },
      {
        "id": 98279177,
        "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/RPC/REST/ZMQ",
        "name": "RPC/REST/ZMQ",
        "color": "0052cc",
        "default": false
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 7,
    "created_at": "2017-07-25T09:12:42Z",
    "updated_at": "2017-10-05T06:52:32Z",
    "closed_at": "2017-10-05T06:52:32Z",
    "author_association": "MEMBER",
    "body": "It seems that there is a bug when a node sends coins to an imported P2WSH.\r\nSuch transaction does not appear in `listtransaction` unlike P2SH.\r\n\r\nNote that if node A sends to node B where B imported the P2WSH, things works as expected, and both A and B would see the transaction in `listtransaction`.\r\n\r\nThe stangest thing is that `gettransaction` seems to know about the transaction. (but not the details)\r\n\r\nRepro:\r\nhttps://github.com/NicolasDorier/bitcoin/commits/importaddresssegwit\r\nIf you switch `use_p2wsh` to false, it passes, else, it does not. \r\nFailing on `assert(self.nodes[0].listtransactions(\"*\", 1, 0, True)[0][\"txid\"]  == txid)`\r\n\r\nping @sipa this is the bug I bumped on TumbleBit that I explained to you."
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/10919",
    "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
    "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/10919/labels{/name}",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/10919/comments",
    "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/10919/events",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/10919",
    "id": 245176448,
    "number": 10919,
    "title": "Fix more init bugs.",
    "user": {
      "login": "TheBlueMatt",
      "id": 649246,
      "avatar_url": "https://avatars0.githubusercontent.com/u/649246?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TheBlueMatt",
      "html_url": "https://github.com/TheBlueMatt",
      "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
      "following_url": "https://api.github.com/users/TheBlueMatt/following{/other_user}",
      "gists_url": "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
      "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
      "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
      "events_url": "https://api.github.com/users/TheBlueMatt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 64585,
        "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Bug",
        "name": "Bug",
        "color": "FBBAAB",
        "default": false
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/milestones/25",
      "html_url": "https://github.com/bitcoin/bitcoin/milestone/25",
      "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/milestones/25/labels",
      "id": 2174061,
      "number": 25,
      "title": "0.15.0",
      "description": "",
      "creator": {
        "login": "MarcoFalke",
        "id": 6399679,
        "avatar_url": "https://avatars0.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "open_issues": 0,
      "closed_issues": 120,
      "state": "closed",
      "created_at": "2016-12-04T13:31:14Z",
      "updated_at": "2017-10-12T19:32:58Z",
      "due_on": null,
      "closed_at": "2017-10-12T19:32:58Z"
    },
    "comments": 4,
    "created_at": "2017-07-24T18:58:02Z",
    "updated_at": "2017-08-07T07:05:14Z",
    "closed_at": "2017-08-07T07:05:13Z",
    "author_association": "CONTRIBUTOR",
    "pull_request": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10919",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/10919",
      "diff_url": "https://github.com/bitcoin/bitcoin/pull/10919.diff",
      "patch_url": "https://github.com/bitcoin/bitcoin/pull/10919.patch"
    },
    "body": "This is a follow-on to #10758 to help move 10758 along. The first fixes a regression in master that was partially fixed in 10758, the second I'm not sure if its a regression or not, but its clearly a bug that should be fixed."
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/10885",
    "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
    "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/10885/labels{/name}",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/10885/comments",
    "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/10885/events",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/10885",
    "id": 244209335,
    "number": 10885,
    "title": "Reject invalid wallets",
    "user": {
      "login": "promag",
      "id": 3534524,
      "avatar_url": "https://avatars1.githubusercontent.com/u/3534524?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 64585,
        "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Bug",
        "name": "Bug",
        "color": "FBBAAB",
        "default": false
      },
      {
        "id": 149424,
        "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Wallet",
        "name": "Wallet",
        "color": "08a781",
        "default": false
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/milestones/25",
      "html_url": "https://github.com/bitcoin/bitcoin/milestone/25",
      "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/milestones/25/labels",
      "id": 2174061,
      "number": 25,
      "title": "0.15.0",
      "description": "",
      "creator": {
        "login": "MarcoFalke",
        "id": 6399679,
        "avatar_url": "https://avatars0.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "open_issues": 0,
      "closed_issues": 120,
      "state": "closed",
      "created_at": "2016-12-04T13:31:14Z",
      "updated_at": "2017-10-12T19:32:58Z",
      "due_on": null,
      "closed_at": "2017-10-12T19:32:58Z"
    },
    "comments": 26,
    "created_at": "2017-07-20T00:06:03Z",
    "updated_at": "2017-12-25T14:53:52Z",
    "closed_at": "2017-07-28T10:55:53Z",
    "author_association": "CONTRIBUTOR",
    "pull_request": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10885",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/10885",
      "diff_url": "https://github.com/bitcoin/bitcoin/pull/10885.diff",
      "patch_url": "https://github.com/bitcoin/bitcoin/pull/10885.patch"
    },
    "body": "This PR prevents loading the same wallet more than once in a multi wallet scenario. It also prevents loading with invalid files: non regular files or symlinks."
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/10832",
    "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
    "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/10832/labels{/name}",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/10832/comments",
    "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/10832/events",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/10832",
    "id": 243162893,
    "number": 10832,
    "title": "init: Factor out AppInitLockDataDirectory and fix startup core dump issue",
    "user": {
      "login": "laanwj",
      "id": 126646,
      "avatar_url": "https://avatars0.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 64585,
        "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Bug",
        "name": "Bug",
        "color": "FBBAAB",
        "default": false
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/milestones/25",
      "html_url": "https://github.com/bitcoin/bitcoin/milestone/25",
      "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/milestones/25/labels",
      "id": 2174061,
      "number": 25,
      "title": "0.15.0",
      "description": "",
      "creator": {
        "login": "MarcoFalke",
        "id": 6399679,
        "avatar_url": "https://avatars0.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "open_issues": 0,
      "closed_issues": 120,
      "state": "closed",
      "created_at": "2016-12-04T13:31:14Z",
      "updated_at": "2017-10-12T19:32:58Z",
      "due_on": null,
      "closed_at": "2017-10-12T19:32:58Z"
    },
    "comments": 3,
    "created_at": "2017-07-15T08:49:11Z",
    "updated_at": "2017-07-17T15:14:04Z",
    "closed_at": "2017-07-17T15:14:04Z",
    "author_association": "OWNER",
    "pull_request": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10832",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/10832",
      "diff_url": "https://github.com/bitcoin/bitcoin/pull/10832.diff",
      "patch_url": "https://github.com/bitcoin/bitcoin/pull/10832.patch"
    },
    "body": "Alternative to #10818, alternative solution to #10815.\r\n\r\nAfter this change: All the AppInit steps before and inclusive AppInitLockDataDirectory must not have Shutdown() called in case of failure. Only when AppInitMain fails, Shutdown should be called.\r\n\r\nChanges the GUI and bitcoind code to consistently do this."
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/10818",
    "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
    "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/10818/labels{/name}",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/10818/comments",
    "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/10818/events",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/10818",
    "id": 242798147,
    "number": 10818,
    "title": "init: Keep track of whether data directory locked, don't cleanup if not",
    "user": {
      "login": "laanwj",
      "id": 126646,
      "avatar_url": "https://avatars0.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 64585,
        "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Bug",
        "name": "Bug",
        "color": "FBBAAB",
        "default": false
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/milestones/25",
      "html_url": "https://github.com/bitcoin/bitcoin/milestone/25",
      "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/milestones/25/labels",
      "id": 2174061,
      "number": 25,
      "title": "0.15.0",
      "description": "",
      "creator": {
        "login": "MarcoFalke",
        "id": 6399679,
        "avatar_url": "https://avatars0.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "open_issues": 0,
      "closed_issues": 120,
      "state": "closed",
      "created_at": "2016-12-04T13:31:14Z",
      "updated_at": "2017-10-12T19:32:58Z",
      "due_on": null,
      "closed_at": "2017-10-12T19:32:58Z"
    },
    "comments": 9,
    "created_at": "2017-07-13T18:58:35Z",
    "updated_at": "2017-07-15T08:49:38Z",
    "closed_at": "2017-07-15T08:49:38Z",
    "author_association": "OWNER",
    "pull_request": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10818",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/10818",
      "diff_url": "https://github.com/bitcoin/bitcoin/pull/10818.diff",
      "patch_url": "https://github.com/bitcoin/bitcoin/pull/10818.patch"
    },
    "body": "Keep a flag in `init.cpp` indicating whether the data directory was locked.\r\n\r\nIf not, Interrupt and Shutdown are no-ops. This avoids things from being cleaned up if they were created by another instance.\r\n\r\nI think this is the most robust, sure solution to #10815.\r\n\r\nn.b.: We can't simple do \"don't call Interrupt/Shutdown if Init*() failed\" because some of the things needs to be interrupted and shut down in case of an error later in initialization when some things have already been started."
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/10758",
    "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
    "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/10758/labels{/name}",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/10758/comments",
    "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/10758/events",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/10758",
    "id": 241120858,
    "number": 10758,
    "title": "Fix some chainstate-init-order bugs.",
    "user": {
      "login": "TheBlueMatt",
      "id": 649246,
      "avatar_url": "https://avatars0.githubusercontent.com/u/649246?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TheBlueMatt",
      "html_url": "https://github.com/TheBlueMatt",
      "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
      "following_url": "https://api.github.com/users/TheBlueMatt/following{/other_user}",
      "gists_url": "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
      "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
      "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
      "events_url": "https://api.github.com/users/TheBlueMatt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 64585,
        "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Bug",
        "name": "Bug",
        "color": "FBBAAB",
        "default": false
      },
      {
        "id": 135961,
        "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Refactoring",
        "name": "Refactoring",
        "color": "E6F6D6",
        "default": false
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/milestones/25",
      "html_url": "https://github.com/bitcoin/bitcoin/milestone/25",
      "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/milestones/25/labels",
      "id": 2174061,
      "number": 25,
      "title": "0.15.0",
      "description": "",
      "creator": {
        "login": "MarcoFalke",
        "id": 6399679,
        "avatar_url": "https://avatars0.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "open_issues": 0,
      "closed_issues": 120,
      "state": "closed",
      "created_at": "2016-12-04T13:31:14Z",
      "updated_at": "2017-10-12T19:32:58Z",
      "due_on": null,
      "closed_at": "2017-10-12T19:32:58Z"
    },
    "comments": 21,
    "created_at": "2017-07-07T00:06:29Z",
    "updated_at": "2017-08-01T23:22:34Z",
    "closed_at": "2017-08-01T10:59:34Z",
    "author_association": "CONTRIBUTOR",
    "pull_request": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10758",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/10758",
      "diff_url": "https://github.com/bitcoin/bitcoin/pull/10758.diff",
      "patch_url": "https://github.com/bitcoin/bitcoin/pull/10758.patch"
    },
    "body": "This does a number of things to clean up chainstate init order,\r\nfixing some issues as it goes:\r\n\r\n* Order chainstate init more logically - first all of the\r\n  blocktree-related loading, then coinsdb, then\r\n  pcoinsTip/chainActive. Only create objects as needed.\r\n\r\n* More clearly document exactly what is and isn't called in\r\n  -reindex and -reindex-chainstate both with comments noting\r\n  calls as no-ops and by adding if guards.\r\n\r\n* Move the writing of fTxIndex to LoadBlockIndex - this fixes a\r\n  bug introduced in d6af06d68aae985436cbc942f0d11078041d121b where\r\n  InitBlockIndex was writing to fTxIndex which had not yet been\r\n  checked (because LoadChainTip hadn't yet initialized the\r\n  chainActive, which would otherwise have resulted in\r\n  InitBlockIndex being a NOP), allowing you to modify -txindex\r\n  without reindex, potentially corrupting your chainstate!\r\n\r\n* Rename InitBlockIndex to LoadGenesisBlock, which is now a more\r\n  natural name for it. Also check mapBlockIndex instead of\r\n  chainActive, fixing a bug where we'd write the genesis block out\r\n  on every start.\r\n\r\n* Move LoadGenesisBlock further down in init. This is a more logical\r\n  location for it, as it is after all of the blockindex-related\r\n  loading and checking, but before any of the UTXO-related loading\r\n  and checking.\r\n\r\n* Give LoadChainTip a return value - allowing it to indicate that\r\n  the UTXO DB ran ahead of the block DB. This just provides a nicer\r\n  error message instead of the previous mysterious\r\n  assert(!setBlockIndexCandidates.empty()) error.\r\n\r\n* Calls ActivateBestChain in case we just loaded the genesis\r\n  block in LoadChainTip, avoiding relying on the ActivateBestChain\r\n  in ThreadImport before continuing init process.\r\n\r\n* Move all of the VerifyDB()-related stuff into a -reindex +\r\n  -reindex-chainstate if guard. It couldn't do anything useful\r\n  as chainActive.Tip() would be null at this point anyway."
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/10410",
    "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
    "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/10410/labels{/name}",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/10410/comments",
    "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/10410/events",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/10410",
    "id": 229081362,
    "number": 10410,
    "title": "Fix importwallet edge case rescan bug",
    "user": {
      "login": "ryanofsky",
      "id": 7133040,
      "avatar_url": "https://avatars2.githubusercontent.com/u/7133040?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ryanofsky",
      "html_url": "https://github.com/ryanofsky",
      "followers_url": "https://api.github.com/users/ryanofsky/followers",
      "following_url": "https://api.github.com/users/ryanofsky/following{/other_user}",
      "gists_url": "https://api.github.com/users/ryanofsky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
      "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
      "repos_url": "https://api.github.com/users/ryanofsky/repos",
      "events_url": "https://api.github.com/users/ryanofsky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 64585,
        "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Bug",
        "name": "Bug",
        "color": "FBBAAB",
        "default": false
      },
      {
        "id": 98279177,
        "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/RPC/REST/ZMQ",
        "name": "RPC/REST/ZMQ",
        "color": "0052cc",
        "default": false
      },
      {
        "id": 149424,
        "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Wallet",
        "name": "Wallet",
        "color": "08a781",
        "default": false
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 5,
    "created_at": "2017-05-16T15:48:26Z",
    "updated_at": "2017-05-23T15:12:02Z",
    "closed_at": "2017-05-23T14:40:19Z",
    "author_association": "CONTRIBUTOR",
    "pull_request": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10410",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/10410",
      "diff_url": "https://github.com/bitcoin/bitcoin/pull/10410.diff",
      "patch_url": "https://github.com/bitcoin/bitcoin/pull/10410.patch"
    },
    "body": "Start importwallet rescans at the first block with timestamp greater or equal\r\nto the wallet birthday instead of the last block with timestamp less or equal.\r\nThis fixes an edge case bug where importwallet could fail to start the rescan\r\nearly enough if there are blocks with decreasing timestamps or multiple blocks\r\nwith the same timestamp."
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/10293",
    "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
    "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/10293/labels{/name}",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/10293/comments",
    "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/10293/events",
    "html_url": "https://github.com/bitcoin/bitcoin/issues/10293",
    "id": 225173726,
    "number": 10293,
    "title": "SEGV in segwit fundrawtransaction",
    "user": {
      "login": "mcelrath",
      "id": 1746780,
      "avatar_url": "https://avatars2.githubusercontent.com/u/1746780?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mcelrath",
      "html_url": "https://github.com/mcelrath",
      "followers_url": "https://api.github.com/users/mcelrath/followers",
      "following_url": "https://api.github.com/users/mcelrath/following{/other_user}",
      "gists_url": "https://api.github.com/users/mcelrath/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mcelrath/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mcelrath/subscriptions",
      "organizations_url": "https://api.github.com/users/mcelrath/orgs",
      "repos_url": "https://api.github.com/users/mcelrath/repos",
      "events_url": "https://api.github.com/users/mcelrath/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mcelrath/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 64585,
        "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Bug",
        "name": "Bug",
        "color": "FBBAAB",
        "default": false
      },
      {
        "id": 149424,
        "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Wallet",
        "name": "Wallet",
        "color": "08a781",
        "default": false
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 3,
    "created_at": "2017-04-28T19:37:12Z",
    "updated_at": "2017-05-01T13:21:30Z",
    "closed_at": "2017-05-01T13:21:30Z",
    "author_association": "NONE",
    "body": "The following will crash bitcoind 0.14.1:\r\n```\r\nbitcoin-cli -regtest fundrawtransaction 01000000000106220000000000001600149bf98693c5892c3e7b6d991cfeebf146285f59bd00000000 '{\"changePosition\": 1}'\r\n```\r\nI've uploaded the corresponding regtest chainstate here: https://github.com/VidaID/bitcoin/blob/fund_segwit_segv/regtest.tar.bz2\r\n\r\nJust untar that into ~/.bitcoin, start `bitcoind -regtest -daemon=0` and run the above `fundrawtransaction`.\r\n\r\nStack trace with debug output is:\r\n```\r\n0x00005555556bde23 in prevector<28u, unsigned char, unsigned int, int>::prevector (this=0x7fff580201f0, other=...)\r\n    at prevector.h:252\r\n252\t            new(static_cast<void*>(item_ptr(size() - 1))) T(*it);\r\n(gdb) where\r\n#0  0x00005555556bde23 in prevector<28u, unsigned char, unsigned int, int>::prevector (this=0x7fff580201f0, other=...)\r\n    at prevector.h:252\r\n#1  0x00005555556ba8c2 in CScript::CScript (this=0x7fff580201f0) at ./script/script.h:376\r\n#2  0x00005555556f63cc in CTxOut::CTxOut (this=0x7fff580201e8) at ./primitives/transaction.h:132\r\n#3  0x00005555557c600f in __gnu_cxx::new_allocator<CTxOut>::construct<CTxOut, CTxOut const&> (this=0x7fffb8ff7ea0, \r\n    __p=0x7fff580201e8, __args#0=...) at /usr/include/c++/6/ext/new_allocator.h:120\r\n#4  0x00005555557c32a6 in std::allocator_traits<std::allocator<CTxOut> >::construct<CTxOut, CTxOut const&> (__a=..., \r\n    __p=0x7fff580201e8, __args#0=...) at /usr/include/c++/6/bits/alloc_traits.h:455\r\n#5  0x0000555555a87044 in std::vector<CTxOut, std::allocator<CTxOut> >::_M_insert_aux<CTxOut const&> (\r\n    this=0x7fffb8ff7ea0, __position=..., __args#0=...) at /usr/include/c++/6/bits/vector.tcc:361\r\n#6  0x0000555555a7bd69 in std::vector<CTxOut, std::allocator<CTxOut> >::insert (this=0x7fffb8ff7ea0, __position=..., \r\n    __x=...) at /usr/include/c++/6/bits/vector.tcc:131\r\n#7  0x0000555555a628de in CWallet::FundTransaction (this=0x555556766150, tx=..., nFeeRet=@0x7fffb8ff7e10: 11760, \r\n    overrideEstimatedFeeRate=false, specificFeeRate=..., nChangePosInOut=@0x7fffb8ff7db8: 1, strFailReason=\"\", \r\n    includeWatching=false, lockUnspents=false, setSubtractFeeFromOutputs=std::set with 0 elements, keepReserveKey=true, \r\n    destChange=...) at wallet/wallet.cpp:2344\r\n#8  0x0000555555a27562 in fundrawtransaction (request=...) at wallet/rpcwallet.cpp:2659\r\n#9  0x00005555557d5338 in CRPCTable::execute (this=0x55555611ed00 <tableRPC>, request=...) at rpc/server.cpp:491\r\n#10 0x00005555559476c0 in HTTPReq_JSONRPC (req=0x7fff84001670) at httprpc.cpp:193\r\n#11 0x000055555574c747 in std::_Function_handler<bool (HTTPRequest*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&), bool (*)(HTTPRequest*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)>::_M_invoke(std::_Any_data const&, HTTPRequest*&&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (__functor=..., \r\n    __args#0=<unknown type in /usr/local/bin/bitcoind, CU 0x571560, DIE 0x5c6e84>, __args#1=\"\")\r\n    at /usr/include/c++/6/functional:1726\r\n#12 0x0000555555950b7a in std::function<bool (HTTPRequest*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)>::operator()(HTTPRequest*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const (this=0x7fff84001780, __args#0=0x7fff84001670, __args#1=\"\") at /usr/include/c++/6/functional:2136\r\n#13 0x000055555594ea71 in HTTPWorkItem::operator() (this=0x7fff84001750) at httpserver.cpp:51\r\n#14 0x0000555555951d65 in WorkQueue<HTTPClosure>::Run (this=0x5555561a0050) at httpserver.cpp:132\r\n#15 0x000055555594bb01 in HTTPWorkQueueRun (queue=0x5555561a0050) at httpserver.cpp:361\r\n#16 0x00005555559618f8 in std::_Bind_simple<void (*(WorkQueue<HTTPClosure>*))(WorkQueue<HTTPClosure>*)>::_M_invoke<0ul>(std::_Index_tuple<0ul>) (this=0x5555561a0248) at /usr/include/c++/6/functional:1400\r\n#17 0x000055555596108c in std::_Bind_simple<void (*(WorkQueue<HTTPClosure>*))(WorkQueue<HTTPClosure>*)>::operator()() (\r\n    this=0x5555561a0248) at /usr/include/c++/6/functional:1389\r\n#18 0x0000555555960a91 in std::thread::_State_impl<std::_Bind_simple<void (*(WorkQueue<HTTPClosure>*))(WorkQueue<HTTPClosure>*)> >::_M_run() (this=0x5555561a0240) at /usr/include/c++/6/thread:196\r\n#19 0x00007ffff615f50f in ?? () from /usr/lib/x86_64-linux-gnu/libstdc++.so.6\r\n#20 0x00007ffff596d6ca in start_thread (arg=0x7fffb8ff9700) at pthread_create.c:333\r\n#21 0x00007ffff56a70af in clone () at ../sysdeps/unix/sysv/linux/x86_64/clone.S:105\r\n```\r\n\r\nIt looks like the crash is in dereferencing the iterator `*it`.  `other.begin()` seems to be pointing to a low memory value 0x06.  I'm guessing this is an implementation error in the `prevector` class.\r\n\r\nDropping the restriction on changeposition or letting it be 0 will not crash."
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/10247",
    "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
    "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/10247/labels{/name}",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/10247/comments",
    "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/10247/events",
    "html_url": "https://github.com/bitcoin/bitcoin/issues/10247",
    "id": 223276280,
    "number": 10247,
    "title": "cost too many fees?",
    "user": {
      "login": "JokerCatz",
      "id": 70926,
      "avatar_url": "https://avatars3.githubusercontent.com/u/70926?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/JokerCatz",
      "html_url": "https://github.com/JokerCatz",
      "followers_url": "https://api.github.com/users/JokerCatz/followers",
      "following_url": "https://api.github.com/users/JokerCatz/following{/other_user}",
      "gists_url": "https://api.github.com/users/JokerCatz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/JokerCatz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/JokerCatz/subscriptions",
      "organizations_url": "https://api.github.com/users/JokerCatz/orgs",
      "repos_url": "https://api.github.com/users/JokerCatz/repos",
      "events_url": "https://api.github.com/users/JokerCatz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/JokerCatz/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 64585,
        "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Bug",
        "name": "Bug",
        "color": "FBBAAB",
        "default": false
      },
      {
        "id": 149424,
        "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Wallet",
        "name": "Wallet",
        "color": "08a781",
        "default": false
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 44,
    "created_at": "2017-04-21T04:56:39Z",
    "updated_at": "2017-12-20T19:14:36Z",
    "closed_at": "2017-12-20T19:14:36Z",
    "author_association": "NONE",
    "body": "Hi , I send a transaction , but it cost 5,209.456 sat/B ...... & used txin all over 50 confirms\r\n\r\n    bitcoin-cli sendtoaddress 1846VsYbYJmqLteuMLdZAYxoVDsjWZyMRz 20\r\n\r\nhttps://blockchain.info/tx/37f98737fe28f1f29840926edeb9cb3a85eb9496070048eb98f2523d612c3cfb\r\n\r\nand my getinfo\r\n\r\n    {\r\n      \"version\": 120100,\r\n      \"protocolversion\": 70012,\r\n      \"walletversion\": 60000,\r\n      \"balance\": SKIP,\r\n      \"blocks\": 462806,\r\n      \"timeoffset\": 0,\r\n      \"connections\": 8,\r\n      \"proxy\": \"\",\r\n      \"difficulty\": 520808749422.1398,\r\n      \"testnet\": false,\r\n      \"keypoololdest\": 1485144781,\r\n      \"keypoolsize\": 301,\r\n      \"paytxfee\": 0.00000000,\r\n      \"relayfee\": 0.00001000,\r\n      \"errors\": \"Warning: Unknown block versions being mined! It's possible unknown rules are in effect\"\r\n    }\r\n\r\n& my config\r\n\r\n    upnp=0\r\n    server=1\r\n    rpcuser=SKIP\r\n    rpcpassword=SKIP\r\n    rpcthreads=8\r\n    rpckeepalive=false\r\n    rpctimeout=30\r\n    rpcallowip=127.0.0.1\r\n    rpcport=8332\r\n    keypool=300\r\n    mintxfee=0.00000001\r\n    checkblocks=16\r\n\r\ndid it just version too old & need to upgrade?"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/10153",
    "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
    "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/10153/labels{/name}",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/10153/comments",
    "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/10153/events",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/10153",
    "id": 219408750,
    "number": 10153,
    "title": "logging: Fix off-by-one for shrinkdebugfile default",
    "user": {
      "login": "MarcoFalke",
      "id": 6399679,
      "avatar_url": "https://avatars0.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 64585,
        "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Bug",
        "name": "Bug",
        "color": "FBBAAB",
        "default": false
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 1,
    "created_at": "2017-04-04T22:49:02Z",
    "updated_at": "2017-04-05T08:07:10Z",
    "closed_at": "2017-04-05T07:24:26Z",
    "author_association": "MEMBER",
    "pull_request": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10153",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/10153",
      "diff_url": "https://github.com/bitcoin/bitcoin/pull/10153.diff",
      "patch_url": "https://github.com/bitcoin/bitcoin/pull/10153.patch"
    },
    "body": "Reference: \r\n\r\n```\r\nsrc/qt/bitcoin-qt -?|grep -C 1 shrinkdebug"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/10141",
    "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
    "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/10141/labels{/name}",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/10141/comments",
    "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/10141/events",
    "html_url": "https://github.com/bitcoin/bitcoin/issues/10141",
    "id": 218801830,
    "number": 10141,
    "title": "Segfault when submitting invalid blocks via submitblock",
    "user": {
      "login": "fanquake",
      "id": 863730,
      "avatar_url": "https://avatars2.githubusercontent.com/u/863730?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fanquake",
      "html_url": "https://github.com/fanquake",
      "followers_url": "https://api.github.com/users/fanquake/followers",
      "following_url": "https://api.github.com/users/fanquake/following{/other_user}",
      "gists_url": "https://api.github.com/users/fanquake/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fanquake/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
      "organizations_url": "https://api.github.com/users/fanquake/orgs",
      "repos_url": "https://api.github.com/users/fanquake/repos",
      "events_url": "https://api.github.com/users/fanquake/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fanquake/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 64585,
        "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Bug",
        "name": "Bug",
        "color": "FBBAAB",
        "default": false
      },
      {
        "id": 98279177,
        "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/RPC/REST/ZMQ",
        "name": "RPC/REST/ZMQ",
        "color": "0052cc",
        "default": false
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 0,
    "created_at": "2017-04-02T23:17:38Z",
    "updated_at": "2017-04-08T06:50:34Z",
    "closed_at": "2017-04-08T06:50:34Z",
    "author_association": "MEMBER",
    "body": "Reported via IRC.\r\n```\r\nNaphex: found a segfault when submitting invalid blocks with submitblock, tracking back to see the reason\r\n[4761171.418546] bitcoin-httpwor[39240]: segfault at 0 ip 0000002314a2a1b7 sp 00000393b3f1f4f0 error 4 in bitcoind[23148a2000+550000]\r\n```"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/10129",
    "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
    "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/10129/labels{/name}",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/10129/comments",
    "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/10129/events",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/10129",
    "id": 218311469,
    "number": 10129,
    "title": "scheduler: fix sub-second precision with boost < 1.50",
    "user": {
      "login": "theuni",
      "id": 417043,
      "avatar_url": "https://avatars1.githubusercontent.com/u/417043?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/theuni",
      "html_url": "https://github.com/theuni",
      "followers_url": "https://api.github.com/users/theuni/followers",
      "following_url": "https://api.github.com/users/theuni/following{/other_user}",
      "gists_url": "https://api.github.com/users/theuni/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/theuni/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
      "organizations_url": "https://api.github.com/users/theuni/orgs",
      "repos_url": "https://api.github.com/users/theuni/repos",
      "events_url": "https://api.github.com/users/theuni/events{/privacy}",
      "received_events_url": "https://api.github.com/users/theuni/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 64585,
        "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Bug",
        "name": "Bug",
        "color": "FBBAAB",
        "default": false
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 3,
    "created_at": "2017-03-30T20:01:48Z",
    "updated_at": "2017-04-01T10:26:36Z",
    "closed_at": "2017-04-01T10:26:36Z",
    "author_association": "MEMBER",
    "pull_request": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10129",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/10129",
      "diff_url": "https://github.com/bitcoin/bitcoin/pull/10129.diff",
      "patch_url": "https://github.com/bitcoin/bitcoin/pull/10129.patch"
    },
    "body": "For systems with older boost, cpu usage has been ramped up since 735d9b5362aeca34c0e62006986fe9d82c24ca08, due to a time miscalculation. This was never encountered previously because this is the first use of a sub-second repeat interval for a scheduled event."
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/10060",
    "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
    "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/10060/labels{/name}",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/10060/comments",
    "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/10060/events",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/10060",
    "id": 216256374,
    "number": 10060,
    "title": "[Qt] Ensure an item exists on the rpcconsole stack before adding",
    "user": {
      "login": "achow101",
      "id": 3782274,
      "avatar_url": "https://avatars3.githubusercontent.com/u/3782274?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/achow101",
      "html_url": "https://github.com/achow101",
      "followers_url": "https://api.github.com/users/achow101/followers",
      "following_url": "https://api.github.com/users/achow101/following{/other_user}",
      "gists_url": "https://api.github.com/users/achow101/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/achow101/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
      "organizations_url": "https://api.github.com/users/achow101/orgs",
      "repos_url": "https://api.github.com/users/achow101/repos",
      "events_url": "https://api.github.com/users/achow101/events{/privacy}",
      "received_events_url": "https://api.github.com/users/achow101/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 64585,
        "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Bug",
        "name": "Bug",
        "color": "FBBAAB",
        "default": false
      },
      {
        "id": 135946,
        "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/GUI",
        "name": "GUI",
        "color": "02d7e1",
        "default": false
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/milestones/27",
      "html_url": "https://github.com/bitcoin/bitcoin/milestone/27",
      "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/milestones/27/labels",
      "id": 2337607,
      "number": 27,
      "title": "0.14.1",
      "description": "",
      "creator": {
        "login": "fanquake",
        "id": 863730,
        "avatar_url": "https://avatars2.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following{/other_user}",
        "gists_url": "https://api.github.com/users/fanquake/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/fanquake/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events{/privacy}",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false
      },
      "open_issues": 0,
      "closed_issues": 26,
      "state": "closed",
      "created_at": "2017-02-21T12:32:10Z",
      "updated_at": "2017-04-23T13:06:49Z",
      "due_on": null,
      "closed_at": "2017-04-23T13:06:49Z"
    },
    "comments": 7,
    "created_at": "2017-03-23T01:10:09Z",
    "updated_at": "2017-04-05T14:30:15Z",
    "closed_at": "2017-03-27T07:56:13Z",
    "author_association": "MEMBER",
    "pull_request": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10060",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/10060",
      "diff_url": "https://github.com/bitcoin/bitcoin/pull/10060.diff",
      "patch_url": "https://github.com/bitcoin/bitcoin/pull/10060.patch"
    },
    "body": "Ensures that there is an item on the rpcconsole stack before adding something to the current stack so that a segmentation fault does not occur.\r\n\r\nCurrently Bitcoin Core will just crash if there happens to be a newline somewhere in the command followed by some non-whitespace characters which are followed by a space. This causes a segfault by attempting to get the current stack from the empty stack vector. This fix ensures that that current stack always exists so that the segfault does not happen.\r\n\r\nThe crashing behavior can be tested by using this command in the rpcconsole:\r\n```\r\ndecoderawtransaction 01000000 03e7a6f3 a93af3ae 49518cbf 8600b799 b04a8b8a ae5145f0 b25df06e \r\n  175d472a a\r\n```\r\n(copy and paste it as one line)"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/10043",
    "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
    "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/10043/labels{/name}",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/10043/comments",
    "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/10043/events",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/10043",
    "id": 215666987,
    "number": 10043,
    "title": "Fix bug in CKey DER encoding",
    "user": {
      "login": "jonasschnelli",
      "id": 178464,
      "avatar_url": "https://avatars3.githubusercontent.com/u/178464?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonasschnelli",
      "html_url": "https://github.com/jonasschnelli",
      "followers_url": "https://api.github.com/users/jonasschnelli/followers",
      "following_url": "https://api.github.com/users/jonasschnelli/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
      "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
      "repos_url": "https://api.github.com/users/jonasschnelli/repos",
      "events_url": "https://api.github.com/users/jonasschnelli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 64585,
        "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Bug",
        "name": "Bug",
        "color": "FBBAAB",
        "default": false
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 8,
    "created_at": "2017-03-21T08:53:19Z",
    "updated_at": "2017-04-07T13:31:49Z",
    "closed_at": "2017-04-07T13:31:49Z",
    "author_association": "MEMBER",
    "pull_request": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10043",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/10043",
      "diff_url": "https://github.com/bitcoin/bitcoin/pull/10043.diff",
      "patch_url": "https://github.com/bitcoin/bitcoin/pull/10043.patch"
    },
    "body": "At the moment, due to a mistake in our code, we DER export uncompressed keys as compressed.\r\nAddresses #10041."
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/10039",
    "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
    "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/10039/labels{/name}",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/10039/comments",
    "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/10039/events",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/10039",
    "id": 215485298,
    "number": 10039,
    "title": "Fix compile errors with Qt 5.3.2 and Boost 1.55.0",
    "user": {
      "login": "ryanofsky",
      "id": 7133040,
      "avatar_url": "https://avatars2.githubusercontent.com/u/7133040?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ryanofsky",
      "html_url": "https://github.com/ryanofsky",
      "followers_url": "https://api.github.com/users/ryanofsky/followers",
      "following_url": "https://api.github.com/users/ryanofsky/following{/other_user}",
      "gists_url": "https://api.github.com/users/ryanofsky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
      "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
      "repos_url": "https://api.github.com/users/ryanofsky/repos",
      "events_url": "https://api.github.com/users/ryanofsky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 64585,
        "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Bug",
        "name": "Bug",
        "color": "FBBAAB",
        "default": false
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 6,
    "created_at": "2017-03-20T16:53:12Z",
    "updated_at": "2017-04-01T22:23:09Z",
    "closed_at": "2017-03-21T10:47:34Z",
    "author_association": "CONTRIBUTOR",
    "pull_request": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10039",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/10039",
      "diff_url": "https://github.com/bitcoin/bitcoin/pull/10039.diff",
      "patch_url": "https://github.com/bitcoin/bitcoin/pull/10039.patch"
    },
    "body": "Both errors were introduced in #9974 and reported by @paveljanik"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/10034",
    "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
    "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/10034/labels{/name}",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/10034/comments",
    "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/10034/events",
    "html_url": "https://github.com/bitcoin/bitcoin/issues/10034",
    "id": 215249890,
    "number": 10034,
    "title": "sendtoaddress subtractfeefromamount=true does not respect paytxfee values",
    "user": {
      "login": "cryptogenesis",
      "id": 6997221,
      "avatar_url": "https://avatars2.githubusercontent.com/u/6997221?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cryptogenesis",
      "html_url": "https://github.com/cryptogenesis",
      "followers_url": "https://api.github.com/users/cryptogenesis/followers",
      "following_url": "https://api.github.com/users/cryptogenesis/following{/other_user}",
      "gists_url": "https://api.github.com/users/cryptogenesis/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cryptogenesis/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cryptogenesis/subscriptions",
      "organizations_url": "https://api.github.com/users/cryptogenesis/orgs",
      "repos_url": "https://api.github.com/users/cryptogenesis/repos",
      "events_url": "https://api.github.com/users/cryptogenesis/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cryptogenesis/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 64585,
        "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Bug",
        "name": "Bug",
        "color": "FBBAAB",
        "default": false
      },
      {
        "id": 149424,
        "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Wallet",
        "name": "Wallet",
        "color": "08a781",
        "default": false
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": {
      "login": "morcos",
      "id": 4360349,
      "avatar_url": "https://avatars2.githubusercontent.com/u/4360349?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/morcos",
      "html_url": "https://github.com/morcos",
      "followers_url": "https://api.github.com/users/morcos/followers",
      "following_url": "https://api.github.com/users/morcos/following{/other_user}",
      "gists_url": "https://api.github.com/users/morcos/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/morcos/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/morcos/subscriptions",
      "organizations_url": "https://api.github.com/users/morcos/orgs",
      "repos_url": "https://api.github.com/users/morcos/repos",
      "events_url": "https://api.github.com/users/morcos/events{/privacy}",
      "received_events_url": "https://api.github.com/users/morcos/received_events",
      "type": "User",
      "site_admin": false
    },
    "assignees": [
      {
        "login": "morcos",
        "id": 4360349,
        "avatar_url": "https://avatars2.githubusercontent.com/u/4360349?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/morcos",
        "html_url": "https://github.com/morcos",
        "followers_url": "https://api.github.com/users/morcos/followers",
        "following_url": "https://api.github.com/users/morcos/following{/other_user}",
        "gists_url": "https://api.github.com/users/morcos/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/morcos/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/morcos/subscriptions",
        "organizations_url": "https://api.github.com/users/morcos/orgs",
        "repos_url": "https://api.github.com/users/morcos/repos",
        "events_url": "https://api.github.com/users/morcos/events{/privacy}",
        "received_events_url": "https://api.github.com/users/morcos/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "milestone": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/milestones/25",
      "html_url": "https://github.com/bitcoin/bitcoin/milestone/25",
      "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/milestones/25/labels",
      "id": 2174061,
      "number": 25,
      "title": "0.15.0",
      "description": "",
      "creator": {
        "login": "MarcoFalke",
        "id": 6399679,
        "avatar_url": "https://avatars0.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "open_issues": 0,
      "closed_issues": 120,
      "state": "closed",
      "created_at": "2016-12-04T13:31:14Z",
      "updated_at": "2017-10-12T19:32:58Z",
      "due_on": null,
      "closed_at": "2017-10-12T19:32:58Z"
    },
    "comments": 6,
    "created_at": "2017-03-19T08:38:54Z",
    "updated_at": "2017-08-03T11:44:34Z",
    "closed_at": "2017-08-03T11:44:34Z",
    "author_association": "NONE",
    "body": "When using subtractfeeamount=true with the sendtoaddress RPC call, the wallet does not always respect paytxfee values and seems to occasionally employ an arbitrary (and very high! 0.004 BTC/KB at latest glance) fee. Strangely, after sending a standard call with subtractfeeamount=false, subsequent calls that include subtractfeeamount=true seem to respect the value set by paytxfee."
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/10001",
    "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
    "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/10001/labels{/name}",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/10001/comments",
    "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/10001/events",
    "html_url": "https://github.com/bitcoin/bitcoin/issues/10001",
    "id": 214374646,
    "number": 10001,
    "title": "v0.14.0 node shutdown failure",
    "user": {
      "login": "bitkevin",
      "id": 514951,
      "avatar_url": "https://avatars2.githubusercontent.com/u/514951?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bitkevin",
      "html_url": "https://github.com/bitkevin",
      "followers_url": "https://api.github.com/users/bitkevin/followers",
      "following_url": "https://api.github.com/users/bitkevin/following{/other_user}",
      "gists_url": "https://api.github.com/users/bitkevin/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bitkevin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bitkevin/subscriptions",
      "organizations_url": "https://api.github.com/users/bitkevin/orgs",
      "repos_url": "https://api.github.com/users/bitkevin/repos",
      "events_url": "https://api.github.com/users/bitkevin/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bitkevin/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 64585,
        "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Bug",
        "name": "Bug",
        "color": "FBBAAB",
        "default": false
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 8,
    "created_at": "2017-03-15T12:31:52Z",
    "updated_at": "2017-04-23T06:47:33Z",
    "closed_at": "2017-04-23T06:47:33Z",
    "author_association": "CONTRIBUTOR",
    "body": "### Describe the issue\r\n\r\nbitcoind-v0.14.0 can't shutdown.\r\n\r\n### Can you reliably reproduce the issue?\r\n\r\nYes. Always happen.\r\n\r\n#### If so, please list the steps to reproduce below:\r\n1. build bitcoind with docker: https://github.com/btccom/btcpool/tree/master/docker/bitcoind/v0.14.0\r\n2. get into docker, than shutdown node with rpc call `bitcoin-cli stop`\r\n3. bitcoind process will hang up.\r\n\r\n### Expected behaviour\r\n\r\n\r\n### Actual behaviour\r\n\r\ndebug.log:\r\n\r\n```\r\n2017-03-15 11:49:28 CreateNewBlock(): total size: 998181 block weight: 3992724 txs: 1516 fees: 94050467 sigops 14524\r\n2017-03-15 11:49:38 CreateNewBlock(): total size: 998191 block weight: 3992764 txs: 1533 fees: 96320496 sigops 14772\r\n2017-03-15 11:49:44 tor: Thread interrupt\r\n2017-03-15 11:49:44 torcontrol thread exit\r\n2017-03-15 11:49:44 opencon thread exit\r\n2017-03-15 11:49:44 scheduler thread interrupt\r\n2017-03-15 11:49:44 Shutdown: In progress...\r\n2017-03-15 11:49:44 net thread exit\r\n2017-03-15 11:49:44 msghand thread exit\r\n```\r\n\r\n```\r\n$ strace -p `pgrep bitcoind`\r\nProcess 31913 attached\r\nfutex(0x7fd03d5899d0, FUTEX_WAIT, 61, NULL^CProcess 31913 detached\r\n```\r\n\r\n\r\n### What version of bitcoin-core are you using?\r\n\r\ntag v0.14.0\r\n\r\n### Machine specs:\r\n- OS: ubuntu 14.04 LTS, 64Bits\r\n  - Docker: Ubuntu 16.04 LTS, 64Bits\r\n- CPU: Intel\r\n- RAM: 8G+\r\n- Disk size: 200G+\r\n- Disk Type (HD/SDD): SSD\r\n"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/9988",
    "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
    "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/9988/labels{/name}",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/9988/comments",
    "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/9988/events",
    "html_url": "https://github.com/bitcoin/bitcoin/issues/9988",
    "id": 213954079,
    "number": 9988,
    "title": "signrawtransaction shows errors after partially signing a multisig transaction",
    "user": {
      "login": "achow101",
      "id": 3782274,
      "avatar_url": "https://avatars3.githubusercontent.com/u/3782274?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/achow101",
      "html_url": "https://github.com/achow101",
      "followers_url": "https://api.github.com/users/achow101/followers",
      "following_url": "https://api.github.com/users/achow101/following{/other_user}",
      "gists_url": "https://api.github.com/users/achow101/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/achow101/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
      "organizations_url": "https://api.github.com/users/achow101/orgs",
      "repos_url": "https://api.github.com/users/achow101/repos",
      "events_url": "https://api.github.com/users/achow101/events{/privacy}",
      "received_events_url": "https://api.github.com/users/achow101/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 64585,
        "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Bug",
        "name": "Bug",
        "color": "FBBAAB",
        "default": false
      },
      {
        "id": 98279177,
        "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/RPC/REST/ZMQ",
        "name": "RPC/REST/ZMQ",
        "color": "0052cc",
        "default": false
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 4,
    "created_at": "2017-03-14T02:48:49Z",
    "updated_at": "2017-09-26T14:18:01Z",
    "closed_at": "2017-09-26T14:18:01Z",
    "author_association": "MEMBER",
    "body": "### Describe the issue\r\n\r\n### Can you reliably reproduce the issue?\r\n#### If so, please list the steps to reproduce below:\r\n1. Follow the steps in https://gist.github.com/gavinandresen/3966071\r\n\r\n### Expected behaviour\r\nThe first `signrawtransaction` command should be successful and return a partially signed transaction that can be sent to the other cosigners for signing.\r\n\r\n### Actual behaviour\r\nInstead `signrawtransaction` fails and does not return a partially signed transaction.\r\n\r\n### What version of bitcoin-core are you using?\r\nThis was reported for 0.14.0. However we have determined that it affects 0.11.1 and later, and likely 0.11.0. It does not affect 0.10.3.\r\n\r\nIt appears that the bug is caused by [this `VerifyScript` call](https://github.com/bitcoin/bitcoin/blob/master/src/rpc/rawtransaction.cpp#L849) which was introduced in 8ac2a4e1788426329b842eea7121b8eac7875c76 which has been a part of all versions since 0.11.0rc1.\r\n\r\nSee also: https://bitcointalk.org/index.php?topic=1823847.msg18164848#msg18164848"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/9980",
    "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
    "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/9980/labels{/name}",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/9980/comments",
    "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/9980/events",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/9980",
    "id": 213617447,
    "number": 9980,
    "title": "Fix mem access violation merkleblock",
    "user": {
      "login": "Christewart",
      "id": 3514957,
      "avatar_url": "https://avatars3.githubusercontent.com/u/3514957?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Christewart",
      "html_url": "https://github.com/Christewart",
      "followers_url": "https://api.github.com/users/Christewart/followers",
      "following_url": "https://api.github.com/users/Christewart/following{/other_user}",
      "gists_url": "https://api.github.com/users/Christewart/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Christewart/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Christewart/subscriptions",
      "organizations_url": "https://api.github.com/users/Christewart/orgs",
      "repos_url": "https://api.github.com/users/Christewart/repos",
      "events_url": "https://api.github.com/users/Christewart/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Christewart/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 64585,
        "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Bug",
        "name": "Bug",
        "color": "FBBAAB",
        "default": false
      },
      {
        "id": 62963516,
        "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Tests",
        "name": "Tests",
        "color": "d4c5f9",
        "default": false
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 15,
    "created_at": "2017-03-12T16:56:53Z",
    "updated_at": "2017-07-17T22:13:03Z",
    "closed_at": "2017-07-17T22:13:03Z",
    "author_association": "CONTRIBUTOR",
    "pull_request": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/9980",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/9980",
      "diff_url": "https://github.com/bitcoin/bitcoin/pull/9980.diff",
      "patch_url": "https://github.com/bitcoin/bitcoin/pull/9980.patch"
    },
    "body": "Fixing a possible memory access violation in CPartialMerkleTree::CalcHash(). \r\n\r\nThis can happen if we some how a merkle tree with zero txids. I don't think this can happen in practice as we only send merkle block messages on the p2p network as of now -- we cannot receive them. \r\n\r\nThis was found with #8469, specifically using this [generator](https://github.com/Christewart/bitcoin/blob/rapidcheck/src/test/gen/merkleblock_gen.h#L52-L77) which will cause a memory access violation on [this test case](https://github.com/Christewart/bitcoin/blob/rapidcheck/src/test/merkleblock_properties.cpp#L48). "
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/9950",
    "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
    "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/9950/labels{/name}",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/9950/comments",
    "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/9950/events",
    "html_url": "https://github.com/bitcoin/bitcoin/issues/9950",
    "id": 212751800,
    "number": 9950,
    "title": "v0.14.0 shutdown hangs",
    "user": {
      "login": "Celean",
      "id": 17721714,
      "avatar_url": "https://avatars2.githubusercontent.com/u/17721714?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Celean",
      "html_url": "https://github.com/Celean",
      "followers_url": "https://api.github.com/users/Celean/followers",
      "following_url": "https://api.github.com/users/Celean/following{/other_user}",
      "gists_url": "https://api.github.com/users/Celean/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Celean/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Celean/subscriptions",
      "organizations_url": "https://api.github.com/users/Celean/orgs",
      "repos_url": "https://api.github.com/users/Celean/repos",
      "events_url": "https://api.github.com/users/Celean/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Celean/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 64585,
        "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Bug",
        "name": "Bug",
        "color": "FBBAAB",
        "default": false
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 12,
    "created_at": "2017-03-08T14:38:51Z",
    "updated_at": "2017-03-18T08:06:09Z",
    "closed_at": "2017-03-18T08:06:09Z",
    "author_association": "NONE",
    "body": "After updating to bitcoin-0.14.0-x86_64-linux-gnu, bitcoind will no longer shut down cleanly with a bitcoin-cli stop or the kill command. A kill -9 is required to make the process terminate.\r\n\r\nTested on three separate fully updated CentOS 6 installations with kernel 2.6.32-642.15.1.el6.x86_64, all of which were behaving normally with 0.13.2. Two of the nodes have pruning enabled with prune=8192, while the third is a non-pruning node. The configuration is otherwise identical:\r\n\r\nmaxconnections=512\r\ndisablewallet=1\r\ndbcache=1000\r\nupnp=0\r\ndns=0\r\ndnsseed=0\r\n\r\nDebug log with debug=1 ends with:\r\n\r\n2017-03-08 13:51:49 Received a POST request for / from 127.0.0.1:49740\r\n2017-03-08 13:51:49 ThreadRPCServer method=stop\r\n2017-03-08 13:51:50 Interrupting HTTP server\r\n2017-03-08 13:51:50 Interrupting HTTP RPC server\r\n2017-03-08 13:51:50 Exited http event loop\r\n2017-03-08 13:51:50 Interrupting RPC\r\n2017-03-08 13:51:50 tor: Thread interrupt\r\n2017-03-08 13:51:50 torcontrol thread exit\r\n2017-03-08 13:51:50 scheduler thread interrupt\r\n2017-03-08 13:51:50 Shutdown: In progress...\r\n2017-03-08 13:51:50 Stopping HTTP RPC server\r\n2017-03-08 13:51:50 Unregistering HTTP handler for / (exactmatch 1)\r\n2017-03-08 13:51:50 Stopping RPC\r\n2017-03-08 13:51:50 RPC stopped.\r\n2017-03-08 13:51:50 Stopping HTTP server\r\n2017-03-08 13:51:50 Waiting for HTTP worker threads to exit\r\n2017-03-08 13:51:50 Waiting for HTTP event thread to exit\r\n2017-03-08 13:51:50 Stopped HTTP server\r\n2017-03-08 13:51:50 net thread exit\r\n2017-03-08 13:51:50 msghand thread exit\r\n2017-03-08 13:51:53 opencon thread exit\r\n\r\nHalf an hour later, bitcoind is still running, and does not seem to be using any CPU or generating any IO. It does not terminate active connections, and the socket is still listening and accepting new connections, but no data appears to be exchanged. getpeerinfo from another node for a connection established after the shutdown says:\r\n\r\n    \"lastsend\": 1488982201,\r\n    \"lastrecv\": 0,\r\n    \"bytessent\": 126,\r\n    \"bytesrecv\": 0,\r\n    \"conntime\": 1488982201,\r\n\r\nThe issue seems to be ~80% reproducible with the given setup and configuration if bitcoind has been running for a few minutes, otherwise it seems to always shut down normally."
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/9883",
    "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
    "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/9883/labels{/name}",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/9883/comments",
    "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/9883/events",
    "html_url": "https://github.com/bitcoin/bitcoin/issues/9883",
    "id": 210650635,
    "number": 9883,
    "title": "[Qt] Segfault on startup",
    "user": {
      "login": "TheBlueMatt",
      "id": 649246,
      "avatar_url": "https://avatars0.githubusercontent.com/u/649246?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TheBlueMatt",
      "html_url": "https://github.com/TheBlueMatt",
      "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
      "following_url": "https://api.github.com/users/TheBlueMatt/following{/other_user}",
      "gists_url": "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
      "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
      "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
      "events_url": "https://api.github.com/users/TheBlueMatt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 64585,
        "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Bug",
        "name": "Bug",
        "color": "FBBAAB",
        "default": false
      },
      {
        "id": 135946,
        "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/GUI",
        "name": "GUI",
        "color": "02d7e1",
        "default": false
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 8,
    "created_at": "2017-02-28T00:30:02Z",
    "updated_at": "2017-08-27T19:04:32Z",
    "closed_at": "2017-06-27T23:37:13Z",
    "author_association": "CONTRIBUTOR",
    "body": "0.14.0 rc1 +/- a few commits, crashed upon startup with the following backtraces (thread 1 is what crashed).\r\n\r\n```\r\n(gdb) thread apply all bt\r\n\r\nThread 44 (Thread 0x7fd66a7fc700 (LWP 83)):\r\n#0  0x00007fd6b64dc10f in pthread_cond_wait@@GLIBC_2.3.2 () from /usr/lib/libpthread.so.0\r\n#1  0x00005617b3ba30f6 in boost::condition_variable::wait (m=..., this=0x5617b45234c8 <scriptcheckqueue+40>)\r\n    at /usr/include/boost/thread/pthread/condition_variable.hpp:76\r\n#2  CCheckQueue<CScriptCheck>::Loop (this=0x5617b45234a0 <scriptcheckqueue>, fMaster=false) at checkqueue.h:102\r\n#3  0x00007fd6b8c1c98d in ?? () from /usr/lib/libboost_thread.so.1.63.0\r\n#4  0x00007fd6b64d6454 in start_thread () from /usr/lib/libpthread.so.0\r\n#5  0x00007fd6b4a587df in clone () from /usr/lib/libc.so.6\r\n\r\nThread 43 (Thread 0x7fd69b8b5700 (LWP 63)):\r\n#0  0x00007fd6b64dc10f in pthread_cond_wait@@GLIBC_2.3.2 () from /usr/lib/libpthread.so.0\r\n#1  0x00007fd6a3958df3 in ?? () from /usr/lib/xorg/modules/dri/swrast_dri.so\r\n#2  0x00007fd6a3958c57 in ?? () from /usr/lib/xorg/modules/dri/swrast_dri.so\r\n#3  0x00007fd6b64d6454 in start_thread () from /usr/lib/libpthread.so.0\r\n#4  0x00007fd6b4a587df in clone () from /usr/lib/libc.so.6\r\n\r\nThread 42 (Thread 0x7fd6990b0700 (LWP 68)):\r\n#0  0x00007fd6b64dc10f in pthread_cond_wait@@GLIBC_2.3.2 () from /usr/lib/libpthread.so.0\r\n#1  0x00007fd6a3958df3 in ?? () from /usr/lib/xorg/modules/dri/swrast_dri.so\r\n#2  0x00007fd6a3958c57 in ?? () from /usr/lib/xorg/modules/dri/swrast_dri.so\r\n#3  0x00007fd6b64d6454 in start_thread () from /usr/lib/libpthread.so.0\r\n#4  0x00007fd6b4a587df in clone () from /usr/lib/libc.so.6\r\n\r\nThread 41 (Thread 0x7fd69b0b4700 (LWP 64)):\r\n#0  0x00007fd6b64dc10f in pthread_cond_wait@@GLIBC_2.3.2 () from /usr/lib/libpthread.so.0\r\n#1  0x00007fd6a3958df3 in ?? () from /usr/lib/xorg/modules/dri/swrast_dri.so\r\n#2  0x00007fd6a3958c57 in ?? () from /usr/lib/xorg/modules/dri/swrast_dri.so\r\n#3  0x00007fd6b64d6454 in start_thread () from /usr/lib/libpthread.so.0\r\n#4  0x00007fd6b4a587df in clone () from /usr/lib/libc.so.6\r\n\r\nThread 40 (Thread 0x7fd69c0b6700 (LWP 62)):\r\n#0  0x00007fd6b64dc10f in pthread_cond_wait@@GLIBC_2.3.2 () from /usr/lib/libpthread.so.0\r\n#1  0x00007fd6a3958df3 in ?? () from /usr/lib/xorg/modules/dri/swrast_dri.so\r\n#2  0x00007fd6a3958c57 in ?? () from /usr/lib/xorg/modules/dri/swrast_dri.so\r\n#3  0x00007fd6b64d6454 in start_thread () from /usr/lib/libpthread.so.0\r\n#4  0x00007fd6b4a587df in clone () from /usr/lib/libc.so.6\r\n\r\nThread 39 (Thread 0x7fd66affd700 (LWP 82)):\r\n#0  0x00007fd6b64dc10f in pthread_cond_wait@@GLIBC_2.3.2 () from /usr/lib/libpthread.so.0\r\n#1  0x00005617b3ba30f6 in boost::condition_variable::wait (m=..., this=0x5617b45234c8 <scriptcheckqueue+40>)\r\n    at /usr/include/boost/thread/pthread/condition_variable.hpp:76\r\n#2  CCheckQueue<CScriptCheck>::Loop (this=0x5617b45234a0 <scriptcheckqueue>, fMaster=false) at checkqueue.h:102\r\n#3  0x00007fd6b8c1c98d in ?? () from /usr/lib/libboost_thread.so.1.63.0\r\n#4  0x00007fd6b64d6454 in start_thread () from /usr/lib/libpthread.so.0\r\n#5  0x00007fd6b4a587df in clone () from /usr/lib/libc.so.6\r\n\r\nThread 38 (Thread 0x7fd668ff9700 (LWP 86)):\r\n#0  0x00007fd6b64dc10f in pthread_cond_wait@@GLIBC_2.3.2 () from /usr/lib/libpthread.so.0\r\n#1  0x00005617b3ba30f6 in boost::condition_variable::wait (m=..., this=0x5617b45234c8 <scriptcheckqueue+40>)\r\n    at /usr/include/boost/thread/pthread/condition_variable.hpp:76\r\n#2  CCheckQueue<CScriptCheck>::Loop (this=0x5617b45234a0 <scriptcheckqueue>, fMaster=false) at checkqueue.h:102\r\n#3  0x00007fd6b8c1c98d in ?? () from /usr/lib/libboost_thread.so.1.63.0\r\n#4  0x00007fd6b64d6454 in start_thread () from /usr/lib/libpthread.so.0\r\n#5  0x00007fd6b4a587df in clone () from /usr/lib/libc.so.6\r\n\r\nThread 37 (Thread 0x7fd6697fa700 (LWP 85)):\r\n#0  0x00007fd6b64dc10f in pthread_cond_wait@@GLIBC_2.3.2 () from /usr/lib/libpthread.so.0\r\n#1  0x00005617b3ba30f6 in boost::condition_variable::wait (m=..., this=0x5617b45234c8 <scriptcheckqueue+40>)\r\n    at /usr/include/boost/thread/pthread/condition_variable.hpp:76\r\n#2  CCheckQueue<CScriptCheck>::Loop (this=0x5617b45234a0 <scriptcheckqueue>, fMaster=false) at checkqueue.h:102\r\n#3  0x00007fd6b8c1c98d in ?? () from /usr/lib/libboost_thread.so.1.63.0\r\n#4  0x00007fd6b64d6454 in start_thread () from /usr/lib/libpthread.so.0\r\n#5  0x00007fd6b4a587df in clone () from /usr/lib/libc.so.6\r\n\r\nThread 36 (Thread 0x7fd6998b1700 (LWP 67)):\r\n#0  0x00007fd6b64dc10f in pthread_cond_wait@@GLIBC_2.3.2 () from /usr/lib/libpthread.so.0\r\n#1  0x00007fd6a3958df3 in ?? () from /usr/lib/xorg/modules/dri/swrast_dri.so\r\n#2  0x00007fd6a3958c57 in ?? () from /usr/lib/xorg/modules/dri/swrast_dri.so\r\n#3  0x00007fd6b64d6454 in start_thread () from /usr/lib/libpthread.so.0\r\n#4  0x00007fd6b4a587df in clone () from /usr/lib/libc.so.6\r\n\r\nThread 35 (Thread 0x7fd68ffff700 (LWP 73)):\r\n#0  0x00007fd6b64dc10f in pthread_cond_wait@@GLIBC_2.3.2 () from /usr/lib/libpthread.so.0\r\n#1  0x00005617b3ba30f6 in boost::condition_variable::wait (m=..., this=0x5617b45234c8 <scriptcheckqueue+40>)\r\n    at /usr/include/boost/thread/pthread/condition_variable.hpp:76\r\n#2  CCheckQueue<CScriptCheck>::Loop (this=0x5617b45234a0 <scriptcheckqueue>, fMaster=false) at checkqueue.h:102\r\n#3  0x00007fd6b8c1c98d in ?? () from /usr/lib/libboost_thread.so.1.63.0\r\n#4  0x00007fd6b64d6454 in start_thread () from /usr/lib/libpthread.so.0\r\n#5  0x00007fd6b4a587df in clone () from /usr/lib/libc.so.6\r\n\r\nThread 34 (Thread 0x7fd68cff9700 (LWP 79)):\r\n#0  0x00007fd6b64dc10f in pthread_cond_wait@@GLIBC_2.3.2 () from /usr/lib/libpthread.so.0\r\n#1  0x00005617b3ba30f6 in boost::condition_variable::wait (m=..., this=0x5617b45234c8 <scriptcheckqueue+40>)\r\n    at /usr/include/boost/thread/pthread/condition_variable.hpp:76\r\n#2  CCheckQueue<CScriptCheck>::Loop (this=0x5617b45234a0 <scriptcheckqueue>, fMaster=false) at checkqueue.h:102\r\n#3  0x00007fd6b8c1c98d in ?? () from /usr/lib/libboost_thread.so.1.63.0\r\n#4  0x00007fd6b64d6454 in start_thread () from /usr/lib/libpthread.so.0\r\n#5  0x00007fd6b4a587df in clone () from /usr/lib/libc.so.6\r\n\r\nThread 33 (Thread 0x7fd669ffb700 (LWP 84)):\r\n#0  0x00007fd6b64dc10f in pthread_cond_wait@@GLIBC_2.3.2 () from /usr/lib/libpthread.so.0\r\n#1  0x00005617b3ba30f6 in boost::condition_variable::wait (m=..., this=0x5617b45234c8 <scriptcheckqueue+40>)\r\n    at /usr/include/boost/thread/pthread/condition_variable.hpp:76\r\n#2  CCheckQueue<CScriptCheck>::Loop (this=0x5617b45234a0 <scriptcheckqueue>, fMaster=false) at checkqueue.h:102\r\n#3  0x00007fd6b8c1c98d in ?? () from /usr/lib/libboost_thread.so.1.63.0\r\n#4  0x00007fd6b64d6454 in start_thread () from /usr/lib/libpthread.so.0\r\n#5  0x00007fd6b4a587df in clone () from /usr/lib/libc.so.6\r\n\r\nThread 32 (Thread 0x7fd66b7fe700 (LWP 81)):\r\n#0  0x00007fd6b64dc10f in pthread_cond_wait@@GLIBC_2.3.2 () from /usr/lib/libpthread.so.0\r\n#1  0x00005617b3ba30f6 in boost::condition_variable::wait (m=..., this=0x5617b45234c8 <scriptcheckqueue+40>)\r\n    at /usr/include/boost/thread/pthread/condition_variable.hpp:76\r\n#2  CCheckQueue<CScriptCheck>::Loop (this=0x5617b45234a0 <scriptcheckqueue>, fMaster=false) at checkqueue.h:102\r\n#3  0x00007fd6b8c1c98d in ?? () from /usr/lib/libboost_thread.so.1.63.0\r\n#4  0x00007fd6b64d6454 in start_thread () from /usr/lib/libpthread.so.0\r\n#5  0x00007fd6b4a587df in clone () from /usr/lib/libc.so.6\r\n\r\nThread 31 (Thread 0x7fd68d7fa700 (LWP 78)):\r\n#0  0x00007fd6b64dc10f in pthread_cond_wait@@GLIBC_2.3.2 () from /usr/lib/libpthread.so.0\r\n#1  0x00005617b3ba30f6 in boost::condition_variable::wait (m=..., this=0x5617b45234c8 <scriptcheckqueue+40>)\r\n    at /usr/include/boost/thread/pthread/condition_variable.hpp:76\r\n#2  CCheckQueue<CScriptCheck>::Loop (this=0x5617b45234a0 <scriptcheckqueue>, fMaster=false) at checkqueue.h:102\r\n#3  0x00007fd6b8c1c98d in ?? () from /usr/lib/libboost_thread.so.1.63.0\r\n#4  0x00007fd6b64d6454 in start_thread () from /usr/lib/libpthread.so.0\r\n#5  0x00007fd6b4a587df in clone () from /usr/lib/libc.so.6\r\n---Type <return> to continue, or q <return> to quit---\r\n\r\nThread 30 (Thread 0x7fd629dba700 (LWP 92)):\r\n#0  0x00007fd6b64dc4b8 in pthread_cond_timedwait@@GLIBC_2.3.2 () from /usr/lib/libpthread.so.0\r\n#1  0x00005617b3ce5642 in __gthread_cond_timedwait (__abs_timeout=0x7fd629db99e0, __mutex=<optimized out>, __cond=0x7fd688730070)\r\n    at /usr/include/c++/6.3.1/x86_64-pc-linux-gnu/bits/gthr-default.h:871\r\n#2  std::condition_variable::__wait_until_impl<std::chrono::duration<long, std::ratio<1l, 1000000000l> > > (__atime=...,\r\n    __lock=<synthetic pointer>..., this=0x7fd688730070) at /usr/include/c++/6.3.1/condition_variable:166\r\n#3  std::condition_variable::wait_until<std::chrono::duration<long, std::ratio<1l, 1000000000l> > > (__atime=...,\r\n    __lock=<synthetic pointer>..., this=0x7fd688730070) at /usr/include/c++/6.3.1/condition_variable:106\r\n#4  std::condition_variable::wait_until<std::chrono::_V2::system_clock, std::chrono::duration<long int, std::ratio<1l, 1000000000l> >, CThreadInterrupt::sleep_for(std::chrono::milliseconds)::<lambda()> > (__p=..., __atime=..., __lock=<synthetic pointer>..., this=0x7fd688730070)\r\n    at /usr/include/c++/6.3.1/condition_variable:129\r\n#5  std::condition_variable::wait_for<long int, std::ratio<1l, 1000l>, CThreadInterrupt::sleep_for(std::chrono::milliseconds)::<lambda()> >\r\n    (__p=..., __rtime=<synthetic pointer>..., __lock=<synthetic pointer>..., this=0x7fd688730070)\r\n    at /usr/include/c++/6.3.1/condition_variable:145\r\n#6  CThreadInterrupt::sleep_for (this=this@entry=0x7fd688730070, rel_time=..., rel_time@entry=...) at threadinterrupt.cpp:30\r\n#7  0x00005617b3a85900 in CConnman::ThreadOpenConnections (this=<optimized out>) at net.cpp:1678\r\n#8  0x00005617b3a90710 in std::function<void ()>::operator()() const (this=0x7fd629db9df0) at /usr/include/c++/6.3.1/functional:2127\r\n#9  TraceThread<std::function<void ()> >(char const*, std::function<void ()>) (name=<optimized out>, func=...) at util.h:218\r\n#10 0x00005617b3a8bf9b in std::_Bind_simple<void (*(char const*, std::function<void ()>))(char const*, std::function<void ()>)>::_M_invoke<0ul, 1ul>(std::_Index_tuple<0ul, 1ul>) (this=<optimized out>) at /usr/include/c++/6.3.1/functional:1391\r\n#11 std::_Bind_simple<void (*(char const*, std::function<void ()>))(char const*, std::function<void ()>)>::operator()() (\r\n    this=<optimized out>) at /usr/include/c++/6.3.1/functional:1380\r\n#12 std::thread::_State_impl<std::_Bind_simple<void (*(char const*, std::function<void ()>))(char const*, std::function<void ()>)> >::_M_run() (this=<optimized out>) at /usr/include/c++/6.3.1/thread:197\r\n#13 0x00007fd6b52e458f in std::execute_native_thread_routine (__p=0x7fd62c840c60) at /build/gcc/src/gcc/libstdc++-v3/src/c++11/thread.cc:83\r\n#14 0x00007fd6b64d6454 in start_thread () from /usr/lib/libpthread.so.0\r\n#15 0x00007fd6b4a587df in clone () from /usr/lib/libc.so.6\r\n\r\nThread 29 (Thread 0x7fd69a0b2700 (LWP 66)):\r\n#0  0x00007fd6b64dc10f in pthread_cond_wait@@GLIBC_2.3.2 () from /usr/lib/libpthread.so.0\r\n#1  0x00007fd6a3958df3 in ?? () from /usr/lib/xorg/modules/dri/swrast_dri.so\r\n#2  0x00007fd6a3958c57 in ?? () from /usr/lib/xorg/modules/dri/swrast_dri.so\r\n#3  0x00007fd6b64d6454 in start_thread () from /usr/lib/libpthread.so.0\r\n#4  0x00007fd6b4a587df in clone () from /usr/lib/libc.so.6\r\n\r\nThread 28 (Thread 0x7fd69c8b7700 (LWP 61)):\r\n#0  0x00007fd6b64dc10f in pthread_cond_wait@@GLIBC_2.3.2 () from /usr/lib/libpthread.so.0\r\n#1  0x00007fd6a3958df3 in ?? () from /usr/lib/xorg/modules/dri/swrast_dri.so\r\n#2  0x00007fd6a3958c57 in ?? () from /usr/lib/xorg/modules/dri/swrast_dri.so\r\n#3  0x00007fd6b64d6454 in start_thread () from /usr/lib/libpthread.so.0\r\n#4  0x00007fd6b4a587df in clone () from /usr/lib/libc.so.6\r\n\r\nThread 27 (Thread 0x7fd6988af700 (LWP 69)):\r\n#0  0x00007fd6b64dc10f in pthread_cond_wait@@GLIBC_2.3.2 () from /usr/lib/libpthread.so.0\r\n#1  0x00007fd6a3958df3 in ?? () from /usr/lib/xorg/modules/dri/swrast_dri.so\r\n#2  0x00007fd6a3958c57 in ?? () from /usr/lib/xorg/modules/dri/swrast_dri.so\r\n#3  0x00007fd6b64d6454 in start_thread () from /usr/lib/libpthread.so.0\r\n#4  0x00007fd6b4a587df in clone () from /usr/lib/libc.so.6\r\n\r\nThread 26 (Thread 0x7fd68dffb700 (LWP 77)):\r\n#0  0x00007fd6b64dc10f in pthread_cond_wait@@GLIBC_2.3.2 () from /usr/lib/libpthread.so.0\r\n#1  0x00005617b3ba30f6 in boost::condition_variable::wait (m=..., this=0x5617b45234c8 <scriptcheckqueue+40>)\r\n    at /usr/include/boost/thread/pthread/condition_variable.hpp:76\r\n#2  CCheckQueue<CScriptCheck>::Loop (this=0x5617b45234a0 <scriptcheckqueue>, fMaster=false) at checkqueue.h:102\r\n#3  0x00007fd6b8c1c98d in ?? () from /usr/lib/libboost_thread.so.1.63.0\r\n#4  0x00007fd6b64d6454 in start_thread () from /usr/lib/libpthread.so.0\r\n#5  0x00007fd6b4a587df in clone () from /usr/lib/libc.so.6\r\n\r\nThread 25 (Thread 0x7fd64bfff700 (LWP 87)):\r\n#0  0x00007fd6b64dc4b8 in pthread_cond_timedwait@@GLIBC_2.3.2 () from /usr/lib/libpthread.so.0\r\n#1  0x00005617b3cca86a in boost::condition_variable::do_wait_until (timeout=..., m=..., this=0x5617b6ae7000)\r\n    at /usr/include/boost/thread/pthread/condition_variable.hpp:107\r\n#2  boost::condition_variable::wait_until (tp=..., lk=..., this=0x5617b6ae7000)\r\n    at /usr/include/boost/thread/pthread/condition_variable_fwd.hpp:252\r\n#3  boost::condition_variable::wait_until<boost::chrono::duration<long, boost::ratio<1l, 1000000000l> > > (t=<synthetic pointer>...,\r\n    lock=..., this=0x5617b6ae7000) at /usr/include/boost/thread/pthread/condition_variable_fwd.hpp:209\r\n#4  CScheduler::serviceQueue (this=0x5617b6ae6fd0) at scheduler.cpp:59\r\n#5  0x00005617b3a69cd8 in boost::function0<void>::operator() (this=0x7fd64bffedd0) at /usr/include/boost/function/function_template.hpp:771\r\n#6  TraceThread<boost::function<void ()> >(char const*, boost::function<void ()>) (name=<optimized out>, func=...) at util.h:218\r\n#7  0x00005617b3a65fa2 in boost::_bi::list2<boost::_bi::value<char const*>, boost::_bi::value<boost::function<void ()> > >::operator()<void (*)(char const*, boost::function<void ()>), boost::_bi::list0>(boost::_bi::type<void>, void (*&)(char const*, boost::function<void ()>), boost::_bi::list0&, int) (a=<synthetic pointer>..., f=\r\n    @0x7fd6881499c8: 0x5617b3a69c40 <TraceThread<boost::function<void ()> >(char const*, boost::function<void ()>)>, this=0x7fd6881499d0)\r\n    at /usr/include/boost/bind/bind.hpp:319\r\n#8  boost::_bi::bind_t<void, void (*)(char const*, boost::function<void ()>), boost::_bi::list2<boost::_bi::value<char const*>, boost::_bi::value<boost::function<void ()> > > >::operator()() (this=0x7fd6881499c8) at /usr/include/boost/bind/bind.hpp:1294\r\n#9  boost::detail::thread_data<boost::_bi::bind_t<void, void (*)(char const*, boost::function<void ()>), boost::_bi::list2<boost::_bi::value<char const*>, boost::_bi::value<boost::function<void ()> > > > >::run() (this=0x7fd688149810)\r\n    at /usr/include/boost/thread/detail/thread.hpp:116\r\n#10 0x00007fd6b8c1c98d in ?? () from /usr/lib/libboost_thread.so.1.63.0\r\n#11 0x00007fd6b64d6454 in start_thread () from /usr/lib/libpthread.so.0\r\n#12 0x00007fd6b4a587df in clone () from /usr/lib/libc.so.6\r\n\r\nThread 24 (Thread 0x7fd6976a8700 (LWP 71)):\r\n#0  0x00007fd6b4a4f48d in poll () from /usr/lib/libc.so.6\r\n#1  0x00007fd6b2c6d786 in ?? () from /usr/lib/libglib-2.0.so.0\r\n#2  0x00007fd6b2c6d89c in g_main_context_iteration () from /usr/lib/libglib-2.0.so.0\r\n#3  0x00007fd6b705804f in QEventDispatcherGlib::processEvents(QFlags<QEventLoop::ProcessEventsFlag>) () from /usr/lib/libQt5Core.so.5\r\n#4  0x00007fd6b700189a in QEventLoop::exec(QFlags<QEventLoop::ProcessEventsFlag>) () from /usr/lib/libQt5Core.so.5\r\n#5  0x00007fd6b6e23a73 in QThread::exec() () from /usr/lib/libQt5Core.so.5\r\n#6  0x00007fd6b6e286d8 in ?? () from /usr/lib/libQt5Core.so.5\r\n#7  0x00007fd6b64d6454 in start_thread () from /usr/lib/libpthread.so.0\r\n#8  0x00007fd6b4a587df in clone () from /usr/lib/libc.so.6\r\n\r\nThread 23 (Thread 0x7fd68f7fe700 (LWP 74)):\r\n#0  0x00007fd6b64dc10f in pthread_cond_wait@@GLIBC_2.3.2 () from /usr/lib/libpthread.so.0\r\n#1  0x00005617b3ba30f6 in boost::condition_variable::wait (m=..., this=0x5617b45234c8 <scriptcheckqueue+40>)\r\n    at /usr/include/boost/thread/pthread/condition_variable.hpp:76\r\n#2  CCheckQueue<CScriptCheck>::Loop (this=0x5617b45234a0 <scriptcheckqueue>, fMaster=false) at checkqueue.h:102\r\n#3  0x00007fd6b8c1c98d in ?? () from /usr/lib/libboost_thread.so.1.63.0\r\n#4  0x00007fd6b64d6454 in start_thread () from /usr/lib/libpthread.so.0\r\n#5  0x00007fd6b4a587df in clone () from /usr/lib/libc.so.6\r\n\r\nThread 22 (Thread 0x7fd68e7fc700 (LWP 76)):\r\n#0  0x00007fd6b64dc10f in pthread_cond_wait@@GLIBC_2.3.2 () from /usr/lib/libpthread.so.0\r\n#1  0x00005617b3ba30f6 in boost::condition_variable::wait (m=..., this=0x5617b45234c8 <scriptcheckqueue+40>)\r\n    at /usr/include/boost/thread/pthread/condition_variable.hpp:76\r\n#2  CCheckQueue<CScriptCheck>::Loop (this=0x5617b45234a0 <scriptcheckqueue>, fMaster=false) at checkqueue.h:102\r\n#3  0x00007fd6b8c1c98d in ?? () from /usr/lib/libboost_thread.so.1.63.0\r\n#4  0x00007fd6b64d6454 in start_thread () from /usr/lib/libpthread.so.0\r\n#5  0x00007fd6b4a587df in clone () from /usr/lib/libc.so.6\r\n\r\nThread 21 (Thread 0x7fd68effd700 (LWP 75)):\r\n#0  0x00007fd6b64dc10f in pthread_cond_wait@@GLIBC_2.3.2 () from /usr/lib/libpthread.so.0\r\n#1  0x00005617b3ba30f6 in boost::condition_variable::wait (m=..., this=0x5617b45234c8 <scriptcheckqueue+40>)\r\n---Type <return> to continue, or q <return> to quit---\r\n    at /usr/include/boost/thread/pthread/condition_variable.hpp:76\r\n#2  CCheckQueue<CScriptCheck>::Loop (this=0x5617b45234a0 <scriptcheckqueue>, fMaster=false) at checkqueue.h:102\r\n#3  0x00007fd6b8c1c98d in ?? () from /usr/lib/libboost_thread.so.1.63.0\r\n#4  0x00007fd6b64d6454 in start_thread () from /usr/lib/libpthread.so.0\r\n#5  0x00007fd6b4a587df in clone () from /usr/lib/libc.so.6\r\n\r\nThread 20 (Thread 0x7fd623a68700 (LWP 95)):\r\n#0  0x00007fd6b4a4f48d in poll () from /usr/lib/libc.so.6\r\n#1  0x00007fd6b2c6d786 in ?? () from /usr/lib/libglib-2.0.so.0\r\n#2  0x00007fd6b2c6d89c in g_main_context_iteration () from /usr/lib/libglib-2.0.so.0\r\n#3  0x00007fd6b705804f in QEventDispatcherGlib::processEvents(QFlags<QEventLoop::ProcessEventsFlag>) () from /usr/lib/libQt5Core.so.5\r\n#4  0x00007fd6b700189a in QEventLoop::exec(QFlags<QEventLoop::ProcessEventsFlag>) () from /usr/lib/libQt5Core.so.5\r\n#5  0x00007fd6b6e23a73 in QThread::exec() () from /usr/lib/libQt5Core.so.5\r\n#6  0x00007fd6b6e286d8 in ?? () from /usr/lib/libQt5Core.so.5\r\n#7  0x00007fd6b64d6454 in start_thread () from /usr/lib/libpthread.so.0\r\n#8  0x00007fd6b4a587df in clone () from /usr/lib/libc.so.6\r\n\r\nThread 19 (Thread 0x7fd64934f700 (LWP 88)):\r\n#0  0x00007fd6b49e775f in _int_free () from /usr/lib/libc.so.6\r\n#1  0x00005617b3d54b72 in __gnu_cxx::new_allocator<char>::deallocate (this=0x7fd638002dd8, __p=<optimized out>)\r\n    at /usr/include/c++/6.3.1/ext/new_allocator.h:110\r\n#2  std::allocator_traits<std::allocator<char> >::deallocate (__a=..., __n=<optimized out>, __p=<optimized out>)\r\n    at /usr/include/c++/6.3.1/bits/alloc_traits.h:442\r\n#3  std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_destroy (__size=<optimized out>,\r\n    this=0x7fd638002dd8) at /usr/include/c++/6.3.1/bits/basic_string.h:186\r\n#4  std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_dispose (this=0x7fd638002dd8)\r\n    at /usr/include/c++/6.3.1/bits/basic_string.h:181\r\n#5  std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::~basic_string (this=0x7fd638002dd8,\r\n    __in_chrg=<optimized out>) at /usr/include/c++/6.3.1/bits/basic_string.h:558\r\n#6  leveldb::Block::Iter::~Iter (this=0x7fd638002d90, __in_chrg=<optimized out>) at leveldb/table/block.cc:76\r\n#7  leveldb::Block::Iter::~Iter (this=0x7fd638002d90, __in_chrg=<optimized out>) at leveldb/table/block.cc:76\r\n#8  0x00005617b3d48fca in leveldb::IteratorWrapper::Set (iter=0x7fd638002160, this=0x7fd6380025f0) at ./leveldb/table/iterator_wrapper.h:29\r\n#9  leveldb::(anonymous namespace)::TwoLevelIterator::SetDataIterator (this=this@entry=0x7fd638002580,\r\n    data_iter=data_iter@entry=0x7fd638002160) at leveldb/table/two_level_iterator.cc:153\r\n#10 0x00005617b3d4a0f2 in leveldb::(anonymous namespace)::TwoLevelIterator::InitDataBlock (this=0x7fd638002580)\r\n    at leveldb/table/two_level_iterator.cc:167\r\n#11 0x00005617b3d4a618 in leveldb::(anonymous namespace)::TwoLevelIterator::SkipEmptyDataBlocksForward (this=0x7fd638002580)\r\n    at leveldb/table/two_level_iterator.cc:133\r\n#12 0x00005617b3d4516c in leveldb::IteratorWrapper::Next (this=<optimized out>) at ./leveldb/table/iterator_wrapper.h:45\r\n#13 leveldb::(anonymous namespace)::MergingIterator::Next (this=0x7fd638000ba0) at leveldb/table/merger.cc:81\r\n#14 0x00005617b3d2aa84 in leveldb::DBImpl::DoCompactionWork (this=this@entry=0x7fd6885fdb90, compact=compact@entry=0x7fd638000c50)\r\n    at leveldb/db/db_impl.cc:1006\r\n#15 0x00005617b3d2b332 in leveldb::DBImpl::BackgroundCompaction (this=this@entry=0x7fd6885fdb90) at leveldb/db/db_impl.cc:736\r\n#16 0x00005617b3d2bc12 in leveldb::DBImpl::BackgroundCall (this=0x7fd6885fdb90) at leveldb/db/db_impl.cc:674\r\n#17 0x00005617b3d4eb53 in leveldb::(anonymous namespace)::PosixEnv::BGThread (this=0x7fd6885c4220) at leveldb/util/env_posix.cc:582\r\n#18 leveldb::(anonymous namespace)::PosixEnv::BGThreadWrapper (arg=0x7fd6885c4220) at leveldb/util/env_posix.cc:521\r\n#19 0x00007fd6b64d6454 in start_thread () from /usr/lib/libpthread.so.0\r\n#20 0x00007fd6b4a587df in clone () from /usr/lib/libc.so.6\r\n\r\nThread 18 (Thread 0x7fd628db8700 (LWP 94)):\r\n#0  0x00007fd6b64dc4b8 in pthread_cond_timedwait@@GLIBC_2.3.2 () from /usr/lib/libpthread.so.0\r\n#1  0x00007fd6b8c1eb41 in boost::this_thread::hidden::sleep_for(timespec const&) () from /usr/lib/libboost_thread.so.1.63.0\r\n#2  0x00005617b3cef893 in boost::this_thread::sleep_for (ns=<synthetic pointer>...)\r\n    at /usr/include/boost/thread/pthread/thread_data.hpp:243\r\n#3  boost::this_thread::sleep_for<long, boost::ratio<1l, 1000l> > (d=...) at /usr/include/boost/thread/v2/thread.hpp:124\r\n#4  MilliSleep (n=n@entry=500) at utiltime.cpp:71\r\n#5  0x00005617b3c585da in ThreadFlushWalletDB () at wallet/walletdb.cpp:801\r\n#6  0x00007fd6b8c1c98d in ?? () from /usr/lib/libboost_thread.so.1.63.0\r\n#7  0x00007fd6b64d6454 in start_thread () from /usr/lib/libpthread.so.0\r\n#8  0x00007fd6b4a587df in clone () from /usr/lib/libc.so.6\r\n\r\nThread 17 (Thread 0x7fd69f0bc700 (LWP 56)):\r\n#0  0x00007fd6b64dc10f in pthread_cond_wait@@GLIBC_2.3.2 () from /usr/lib/libpthread.so.0\r\n#1  0x00007fd6a3958df3 in ?? () from /usr/lib/xorg/modules/dri/swrast_dri.so\r\n#2  0x00007fd6a3958c57 in ?? () from /usr/lib/xorg/modules/dri/swrast_dri.so\r\n#3  0x00007fd6b64d6454 in start_thread () from /usr/lib/libpthread.so.0\r\n#4  0x00007fd6b4a587df in clone () from /usr/lib/libc.so.6\r\n\r\nThread 16 (Thread 0x7fd694ea6700 (LWP 72)):\r\n#0  0x00007fd6b64dc10f in pthread_cond_wait@@GLIBC_2.3.2 () from /usr/lib/libpthread.so.0\r\n#1  0x00005617b3ba30f6 in boost::condition_variable::wait (m=..., this=0x5617b45234c8 <scriptcheckqueue+40>)\r\n    at /usr/include/boost/thread/pthread/condition_variable.hpp:76\r\n#2  CCheckQueue<CScriptCheck>::Loop (this=0x5617b45234a0 <scriptcheckqueue>, fMaster=false) at checkqueue.h:102\r\n#3  0x00007fd6b8c1c98d in ?? () from /usr/lib/libboost_thread.so.1.63.0\r\n#4  0x00007fd6b64d6454 in start_thread () from /usr/lib/libpthread.so.0\r\n#5  0x00007fd6b4a587df in clone () from /usr/lib/libc.so.6\r\n\r\nThread 15 (Thread 0x7fd69e0ba700 (LWP 58)):\r\n#0  0x00007fd6b64dc10f in pthread_cond_wait@@GLIBC_2.3.2 () from /usr/lib/libpthread.so.0\r\n#1  0x00007fd6a3958df3 in ?? () from /usr/lib/xorg/modules/dri/swrast_dri.so\r\n#2  0x00007fd6a3958c57 in ?? () from /usr/lib/xorg/modules/dri/swrast_dri.so\r\n#3  0x00007fd6b64d6454 in start_thread () from /usr/lib/libpthread.so.0\r\n#4  0x00007fd6b4a587df in clone () from /usr/lib/libc.so.6\r\n\r\nThread 14 (Thread 0x7fd6295b9700 (LWP 93)):\r\n#0  0x00007fd6b64dc4b8 in pthread_cond_timedwait@@GLIBC_2.3.2 () from /usr/lib/libpthread.so.0\r\n#1  0x00005617b3a8788d in __gthread_cond_timedwait (__abs_timeout=0x7fd6295b88a0, __mutex=<optimized out>, __cond=0x7fd688730010)\r\n    at /usr/include/c++/6.3.1/x86_64-pc-linux-gnu/bits/gthr-default.h:871\r\n#2  std::condition_variable::__wait_until_impl<std::chrono::duration<long, std::ratio<1l, 1000000000l> > > (\r\n    __atime=<synthetic pointer>..., __lock=..., this=0x7fd688730010) at /usr/include/c++/6.3.1/condition_variable:166\r\n#3  std::condition_variable::wait_until<std::chrono::_V2::steady_clock, std::chrono::duration<long, std::ratio<1l, 1000000000l> > > (\r\n    __atime=..., __lock=..., this=0x7fd688730010) at /usr/include/c++/6.3.1/condition_variable:119\r\n#4  std::condition_variable::wait_until<std::chrono::_V2::steady_clock, std::chrono::duration<long int, std::ratio<1l, 1000000000l> >, CConnman::ThreadMessageHandler()::<lambda()> > (__p=..., __atime=..., __lock=..., this=0x7fd688730010)\r\n    at /usr/include/c++/6.3.1/condition_variable:129\r\n#5  CConnman::ThreadMessageHandler (this=0x7fd6886dfc70) at net.cpp:1986\r\n#6  0x00005617b3a90710 in std::function<void ()>::operator()() const (this=0x7fd6295b8df0) at /usr/include/c++/6.3.1/functional:2127\r\n#7  TraceThread<std::function<void ()> >(char const*, std::function<void ()>) (name=<optimized out>, func=...) at util.h:218\r\n#8  0x00005617b3a8bf9b in std::_Bind_simple<void (*(char const*, std::function<void ()>))(char const*, std::function<void ()>)>::_M_invoke<0ul, 1ul>(std::_Index_tuple<0ul, 1ul>) (this=<optimized out>) at /usr/include/c++/6.3.1/functional:1391\r\n#9  std::_Bind_simple<void (*(char const*, std::function<void ()>))(char const*, std::function<void ()>)>::operator()() (\r\n    this=<optimized out>) at /usr/include/c++/6.3.1/functional:1380\r\n#10 std::thread::_State_impl<std::_Bind_simple<void (*(char const*, std::function<void ()>))(char const*, std::function<void ()>)> >::_M_run() (this=<optimized out>) at /usr/include/c++/6.3.1/thread:197\r\n#11 0x00007fd6b52e458f in std::execute_native_thread_routine (__p=0x7fd637cc2d90) at /build/gcc/src/gcc/libstdc++-v3/src/c++11/thread.cc:83\r\n#12 0x00007fd6b64d6454 in start_thread () from /usr/lib/libpthread.so.0\r\n#13 0x00007fd6b4a587df in clone () from /usr/lib/libc.so.6\r\n\r\nThread 13 (Thread 0x7fd66bfff700 (LWP 80)):\r\n#0  0x00007fd6b64dc10f in pthread_cond_wait@@GLIBC_2.3.2 () from /usr/lib/libpthread.so.0\r\n#1  0x00005617b3ba30f6 in boost::condition_variable::wait (m=..., this=0x5617b45234c8 <scriptcheckqueue+40>)\r\n    at /usr/include/boost/thread/pthread/condition_variable.hpp:76\r\n#2  CCheckQueue<CScriptCheck>::Loop (this=0x5617b45234a0 <scriptcheckqueue>, fMaster=false) at checkqueue.h:102\r\n#3  0x00007fd6b8c1c98d in ?? () from /usr/lib/libboost_thread.so.1.63.0\r\n#4  0x00007fd6b64d6454 in start_thread () from /usr/lib/libpthread.so.0\r\n#5  0x00007fd6b4a587df in clone () from /usr/lib/libc.so.6\r\n---Type <return> to continue, or q <return> to quit---\r\n\r\nThread 12 (Thread 0x7fd69e8bb700 (LWP 57)):\r\n#0  0x00007fd6b64dc10f in pthread_cond_wait@@GLIBC_2.3.2 () from /usr/lib/libpthread.so.0\r\n#1  0x00007fd6a3958df3 in ?? () from /usr/lib/xorg/modules/dri/swrast_dri.so\r\n#2  0x00007fd6a3958c57 in ?? () from /usr/lib/xorg/modules/dri/swrast_dri.so\r\n#3  0x00007fd6b64d6454 in start_thread () from /usr/lib/libpthread.so.0\r\n#4  0x00007fd6b4a587df in clone () from /usr/lib/libc.so.6\r\n\r\nThread 11 (Thread 0x7fd62adbc700 (LWP 90)):\r\n#0  0x00007fd6b4a510b3 in select () from /usr/lib/libc.so.6\r\n#1  0x00005617b3a8a978 in CConnman::ThreadSocketHandler (this=0x7fd6886dfc70) at net.cpp:1236\r\n#2  0x00005617b3a90710 in std::function<void ()>::operator()() const (this=0x7fd62adbbdf0) at /usr/include/c++/6.3.1/functional:2127\r\n#3  TraceThread<std::function<void ()> >(char const*, std::function<void ()>) (name=<optimized out>, func=...) at util.h:218\r\n#4  0x00005617b3a8bf9b in std::_Bind_simple<void (*(char const*, std::function<void ()>))(char const*, std::function<void ()>)>::_M_invoke<0ul, 1ul>(std::_Index_tuple<0ul, 1ul>) (this=<optimized out>) at /usr/include/c++/6.3.1/functional:1391\r\n#5  std::_Bind_simple<void (*(char const*, std::function<void ()>))(char const*, std::function<void ()>)>::operator()() (\r\n    this=<optimized out>) at /usr/include/c++/6.3.1/functional:1380\r\n#6  std::thread::_State_impl<std::_Bind_simple<void (*(char const*, std::function<void ()>))(char const*, std::function<void ()>)> >::_M_run() (this=<optimized out>) at /usr/include/c++/6.3.1/thread:197\r\n#7  0x00007fd6b52e458f in std::execute_native_thread_routine (__p=0x7fd63736c980) at /build/gcc/src/gcc/libstdc++-v3/src/c++11/thread.cc:83\r\n#8  0x00007fd6b64d6454 in start_thread () from /usr/lib/libpthread.so.0\r\n#9  0x00007fd6b4a587df in clone () from /usr/lib/libc.so.6\r\n\r\nThread 10 (Thread 0x7fd62bfff700 (LWP 89)):\r\n#0  0x00005617b3d5a6e6 in secp256k1_fe_sqr_inner (r=0x7fd62bffb300, a=0x87def3cbcbe90) at src/field_5x52_asm_impl.h:298\r\n#1  0x00005617b3d5f7c9 in secp256k1_fe_sqr (a=0x7fd62bffc540, r=0x7fd62bffb300) at src/field_5x52_impl.h:398\r\n#2  secp256k1_gej_double_var (r=r@entry=0x7fd62bffc540, a=a@entry=0x7fd62bffc540, rzr=rzr@entry=0x0) at src/group_impl.h:342\r\n#3  0x00005617b3d611b5 in secp256k1_gej_double_var (rzr=0x0, a=0x7fd62bffc540, r=0x7fd62bffc540) at src/ecmult_impl.h:404\r\n#4  secp256k1_ecmult (ctx=ctx@entry=0x7fd688005f90, r=r@entry=0x7fd62bffc540, a=a@entry=0x7fd62bffc4c0, na=na@entry=0x7fd62bffc410,\r\n    ng=ng@entry=0x7fd62bffc3f0) at src/ecmult_impl.h:371\r\n#5  0x00005617b3d671d5 in secp256k1_ecdsa_sig_verify (message=0x7fd62bffc390, pubkey=0x7fd62bffc460, sigs=0x7fd62bffc370,\r\n    sigr=0x7fd62bffc350, ctx=0x7fd688005f90) at src/ecdsa_impl.h:220\r\n#6  secp256k1_ecdsa_verify (ctx=0x7fd688005f90, sig=sig@entry=0x7fd62bffc640,\r\n    msg32=msg32@entry=0x7fd62bffc970 \"d\\202\\374\\306\\272\\030K\\320\\030v\\314`]\\034m]\\203\\061\\001c\\347\\336\\323\\300\\006S\\344hH\\020\\344\\301\\003\\203\\244\\274q\\256\\004\\202SM\\255^\\\"$\\345\\a\\374\\304X\\234{\\320N\\306X\\035q\\367\\362\\344\\232\\351\\022T\\020\\034\\326\\177\",\r\n    pubkey=pubkey@entry=0x7fd62bffc600) at src/secp256k1.c:307\r\n#7  0x00005617b3d00da1 in CPubKey::Verify (this=this@entry=0x7fd62bffc990, hash=..., vchSig=std::vector of length 70, capacity 71 = {...})\r\n    at pubkey.cpp:184\r\n#8  0x00005617b3d01a56 in TransactionSignatureChecker::VerifySignature (this=this@entry=0x7fd62bffcfa0,\r\n    vchSig=std::vector of length 70, capacity 71 = {...}, pubkey=..., sighash=...) at script/interpreter.cpp:1250\r\n#9  0x00005617b3b3e68b in CachingTransactionSignatureChecker::VerifySignature (this=0x7fd62bffcfa0,\r\n    vchSig=std::vector of length 70, capacity 71 = {...}, pubkey=..., sighash=...) at script/sigcache.cpp:110\r\n#10 0x00005617b3d09ba2 in TransactionSignatureChecker::CheckSig (this=0x7fd62bffcfa0, vchSigIn=..., vchPubKey=..., scriptCode=...,\r\n    sigversion=SIGVERSION_BASE) at script/interpreter.cpp:1268\r\n#11 0x00005617b3d027ec in EvalScript (stack=std::vector of length 2, capacity 4 = {...}, script=..., flags=flags@entry=65503, checker=...,\r\n    sigversion=<optimized out>, sigversion@entry=SIGVERSION_BASE, serror=serror@entry=0x7fd62bffd0dc) at script/interpreter.cpp:902\r\n#12 0x00005617b3d0a981 in VerifyScript (scriptSig=..., scriptPubKey=..., witness=0x7fd61c125878, flags=65503, checker=...,\r\n    serror=serror@entry=0x7fd62bffd0dc) at script/interpreter.cpp:1429\r\n#13 0x00005617b3b79783 in CScriptCheck::operator() (this=this@entry=0x7fd62bffd0a0) at validation.cpp:1358\r\n#14 0x00005617b3b7e143 in CheckInputs (tx=..., state=..., inputs=..., fScriptChecks=fScriptChecks@entry=true, flags=flags@entry=65503,\r\n    cacheStore=cacheStore@entry=true, txdata=..., pvChecks=0x0) at validation.cpp:1447\r\n#15 0x00005617b3b8f56c in AcceptToMemoryPoolWorker (pool=..., state=..., ptx=std::shared_ptr (count 2, weak 0) 0x7fd61c130a70,\r\n    fLimitFree=fLimitFree@entry=true, pfMissingInputs=pfMissingInputs@entry=0x0, nAcceptTime=nAcceptTime@entry=1488239795,\r\n    plTxnReplaced=0x0, fOverrideMempoolLimit=false, nAbsurdFee=@0x7fd62bffe6a8: 0,\r\n    vHashTxnToUncache=std::vector of length 1, capacity 1 = {...}) at validation.cpp:952\r\n#16 0x00005617b3b9168b in AcceptToMemoryPoolWithTime (pool=..., state=..., tx=std::shared_ptr (count 2, weak 0) 0x7fd61c130a70,\r\n    fLimitFree=fLimitFree@entry=true, pfMissingInputs=pfMissingInputs@entry=0x0, nAcceptTime=nAcceptTime@entry=1488239795,\r\n    plTxnReplaced=0x0, fOverrideMempoolLimit=false, nAbsurdFee=<optimized out>) at validation.cpp:1020\r\n#17 0x00005617b3b91c7c in LoadMempool () at validation.cpp:4219\r\n#18 0x00005617b3a4feed in ThreadImport (vImportFiles=std::vector of length 0, capacity 0) at init.cpp:676\r\n#19 0x00005617b3a680f4 in boost::_bi::list1<boost::_bi::value<std::vector<boost::filesystem::path, std::allocator<boost::filesystem::path> > > >::operator()<void (*)(std::vector<boost::filesystem::path, std::allocator<boost::filesystem::path> >), boost::_bi::list0> (\r\n    f=<optimized out>, a=<synthetic pointer>..., this=<optimized out>) at /usr/include/boost/bind/bind.hpp:259\r\n#20 boost::_bi::bind_t<void, void (*)(std::vector<boost::filesystem::path, std::allocator<boost::filesystem::path> >), boost::_bi::list1<boost::_bi::value<std::vector<boost::filesystem::path, std::allocator<boost::filesystem::path> > > > >::operator() (this=<optimized out>)\r\n    at /usr/include/boost/bind/bind.hpp:1294\r\n#21 boost::detail::thread_data<boost::_bi::bind_t<void, void (*)(std::vector<boost::filesystem::path, std::allocator<boost::filesystem::path> >), boost::_bi::list1<boost::_bi::value<std::vector<boost::filesystem::path, std::allocator<boost::filesystem::path> > > > > >::run (\r\n    this=<optimized out>) at /usr/include/boost/thread/detail/thread.hpp:116\r\n#22 0x00007fd6b8c1c98d in ?? () from /usr/lib/libboost_thread.so.1.63.0\r\n#23 0x00007fd6b64d6454 in start_thread () from /usr/lib/libpthread.so.0\r\n#24 0x00007fd6b4a587df in clone () from /usr/lib/libc.so.6\r\n\r\nThread 9 (Thread 0x7fd69d0b8700 (LWP 60)):\r\n#0  0x00007fd6b64dc10f in pthread_cond_wait@@GLIBC_2.3.2 () from /usr/lib/libpthread.so.0\r\n#1  0x00007fd6a3958df3 in ?? () from /usr/lib/xorg/modules/dri/swrast_dri.so\r\n#2  0x00007fd6a3958c57 in ?? () from /usr/lib/xorg/modules/dri/swrast_dri.so\r\n#3  0x00007fd6b64d6454 in start_thread () from /usr/lib/libpthread.so.0\r\n#4  0x00007fd6b4a587df in clone () from /usr/lib/libc.so.6\r\n\r\nThread 8 (Thread 0x7fd69f8bd700 (LWP 55)):\r\n#0  0x00007fd6b64dc10f in pthread_cond_wait@@GLIBC_2.3.2 () from /usr/lib/libpthread.so.0\r\n#1  0x00007fd6a3958df3 in ?? () from /usr/lib/xorg/modules/dri/swrast_dri.so\r\n#2  0x00007fd6a3958c57 in ?? () from /usr/lib/xorg/modules/dri/swrast_dri.so\r\n#3  0x00007fd6b64d6454 in start_thread () from /usr/lib/libpthread.so.0\r\n#4  0x00007fd6b4a587df in clone () from /usr/lib/libc.so.6\r\n\r\nThread 7 (Thread 0x7fd6a00be700 (LWP 54)):\r\n#0  0x00007fd6b64dc10f in pthread_cond_wait@@GLIBC_2.3.2 () from /usr/lib/libpthread.so.0\r\n#1  0x00007fd6a3958df3 in ?? () from /usr/lib/xorg/modules/dri/swrast_dri.so\r\n#2  0x00007fd6a3958c57 in ?? () from /usr/lib/xorg/modules/dri/swrast_dri.so\r\n#3  0x00007fd6b64d6454 in start_thread () from /usr/lib/libpthread.so.0\r\n#4  0x00007fd6b4a587df in clone () from /usr/lib/libc.so.6\r\n\r\nThread 6 (Thread 0x7fd69a8b3700 (LWP 65)):\r\n#0  0x00007fd6b64dc10f in pthread_cond_wait@@GLIBC_2.3.2 () from /usr/lib/libpthread.so.0\r\n#1  0x00007fd6a3958df3 in ?? () from /usr/lib/xorg/modules/dri/swrast_dri.so\r\n#2  0x00007fd6a3958c57 in ?? () from /usr/lib/xorg/modules/dri/swrast_dri.so\r\n#3  0x00007fd6b64d6454 in start_thread () from /usr/lib/libpthread.so.0\r\n#4  0x00007fd6b4a587df in clone () from /usr/lib/libc.so.6\r\n\r\nThread 5 (Thread 0x7fd697ea9700 (LWP 70)):\r\n#0  0x00007fd6b4a4f48d in poll () from /usr/lib/libc.so.6\r\n#1  0x00007fd6b2c6d786 in ?? () from /usr/lib/libglib-2.0.so.0\r\n#2  0x00007fd6b2c6d89c in g_main_context_iteration () from /usr/lib/libglib-2.0.so.0\r\n#3  0x00007fd6b705804f in QEventDispatcherGlib::processEvents(QFlags<QEventLoop::ProcessEventsFlag>) () from /usr/lib/libQt5Core.so.5\r\n#4  0x00007fd6b700189a in QEventLoop::exec(QFlags<QEventLoop::ProcessEventsFlag>) () from /usr/lib/libQt5Core.so.5\r\n#5  0x00007fd6b6e23a73 in QThread::exec() () from /usr/lib/libQt5Core.so.5\r\n#6  0x00007fd6b746d125 in ?? () from /usr/lib/libQt5DBus.so.5\r\n#7  0x00007fd6b6e286d8 in ?? () from /usr/lib/libQt5Core.so.5\r\n#8  0x00007fd6b64d6454 in start_thread () from /usr/lib/libpthread.so.0\r\n#9  0x00007fd6b4a587df in clone () from /usr/lib/libc.so.6\r\n\r\nThread 4 (Thread 0x7fd6aa7db700 (LWP 53)):\r\n#0  0x00007fd6b4a4f48d in poll () from /usr/lib/libc.so.6\r\n#1  0x00007fd6b12418e0 in ?? () from /usr/lib/libxcb.so.1\r\n---Type <return> to continue, or q <return> to quit---\r\n#2  0x00007fd6b1243679 in xcb_wait_for_event () from /usr/lib/libxcb.so.1\r\n#3  0x00007fd6acf42239 in ?? () from /usr/lib/libQt5XcbQpa.so.5\r\n#4  0x00007fd6b6e286d8 in ?? () from /usr/lib/libQt5Core.so.5\r\n#5  0x00007fd6b64d6454 in start_thread () from /usr/lib/libpthread.so.0\r\n#6  0x00007fd6b4a587df in clone () from /usr/lib/libc.so.6\r\n\r\nThread 3 (Thread 0x7fd69d8b9700 (LWP 59)):\r\n#0  0x00007fd6b64dc10f in pthread_cond_wait@@GLIBC_2.3.2 () from /usr/lib/libpthread.so.0\r\n#1  0x00007fd6a3958df3 in ?? () from /usr/lib/xorg/modules/dri/swrast_dri.so\r\n#2  0x00007fd6a3958c57 in ?? () from /usr/lib/xorg/modules/dri/swrast_dri.so\r\n#3  0x00007fd6b64d6454 in start_thread () from /usr/lib/libpthread.so.0\r\n#4  0x00007fd6b4a587df in clone () from /usr/lib/libc.so.6\r\n\r\nThread 2 (Thread 0x7fd62a5bb700 (LWP 91)):\r\n#0  0x00007fd6b64dc4b8 in pthread_cond_timedwait@@GLIBC_2.3.2 () from /usr/lib/libpthread.so.0\r\n#1  0x00005617b3ce5642 in __gthread_cond_timedwait (__abs_timeout=0x7fd62a5bab90, __mutex=<optimized out>, __cond=0x7fd688730070)\r\n    at /usr/include/c++/6.3.1/x86_64-pc-linux-gnu/bits/gthr-default.h:871\r\n#2  std::condition_variable::__wait_until_impl<std::chrono::duration<long, std::ratio<1l, 1000000000l> > > (__atime=...,\r\n    __lock=<synthetic pointer>..., this=0x7fd688730070) at /usr/include/c++/6.3.1/condition_variable:166\r\n#3  std::condition_variable::wait_until<std::chrono::duration<long, std::ratio<1l, 1000000000l> > > (__atime=...,\r\n    __lock=<synthetic pointer>..., this=0x7fd688730070) at /usr/include/c++/6.3.1/condition_variable:106\r\n#4  std::condition_variable::wait_until<std::chrono::_V2::system_clock, std::chrono::duration<long int, std::ratio<1l, 1000000000l> >, CThreadInterrupt::sleep_for(std::chrono::milliseconds)::<lambda()> > (__p=..., __atime=..., __lock=<synthetic pointer>..., this=0x7fd688730070)\r\n    at /usr/include/c++/6.3.1/condition_variable:129\r\n#5  std::condition_variable::wait_for<long int, std::ratio<1l, 1000l>, CThreadInterrupt::sleep_for(std::chrono::milliseconds)::<lambda()> >\r\n    (__p=..., __rtime=<synthetic pointer>..., __lock=<synthetic pointer>..., this=0x7fd688730070)\r\n    at /usr/include/c++/6.3.1/condition_variable:145\r\n#6  CThreadInterrupt::sleep_for (this=this@entry=0x7fd688730070, rel_time=...) at threadinterrupt.cpp:30\r\n#7  0x00005617b3ce56e0 in CThreadInterrupt::sleep_for (this=this@entry=0x7fd688730070, rel_time=...) at threadinterrupt.cpp:35\r\n#8  0x00005617b3a86b3a in CConnman::ThreadOpenAddedConnections (this=0x7fd6886dfc70) at net.cpp:1896\r\n#9  0x00005617b3a90710 in std::function<void ()>::operator()() const (this=0x7fd62a5badf0) at /usr/include/c++/6.3.1/functional:2127\r\n#10 TraceThread<std::function<void ()> >(char const*, std::function<void ()>) (name=<optimized out>, func=...) at util.h:218\r\n#11 0x00005617b3a8bf9b in std::_Bind_simple<void (*(char const*, std::function<void ()>))(char const*, std::function<void ()>)>::_M_invoke<0ul, 1ul>(std::_Index_tuple<0ul, 1ul>) (this=<optimized out>) at /usr/include/c++/6.3.1/functional:1391\r\n#12 std::_Bind_simple<void (*(char const*, std::function<void ()>))(char const*, std::function<void ()>)>::operator()() (\r\n    this=<optimized out>) at /usr/include/c++/6.3.1/functional:1380\r\n#13 std::thread::_State_impl<std::_Bind_simple<void (*(char const*, std::function<void ()>))(char const*, std::function<void ()>)> >::_M_run() (this=<optimized out>) at /usr/include/c++/6.3.1/thread:197\r\n#14 0x00007fd6b52e458f in std::execute_native_thread_routine (__p=0x7fd637360620) at /build/gcc/src/gcc/libstdc++-v3/src/c++11/thread.cc:83\r\n#15 0x00007fd6b64d6454 in start_thread () from /usr/lib/libpthread.so.0\r\n#16 0x00007fd6b4a587df in clone () from /usr/lib/libc.so.6\r\n\r\nThread 1 (Thread 0x7fd6b963f680 (LWP 52)):\r\n#0  0x00007fd6b6fc7fb2 in ?? () from /usr/lib/libQt5Core.so.5\r\n#1  0x00007fd6b6fccdd9 in ?? () from /usr/lib/libQt5Core.so.5\r\n#2  0x00007fd6b81ee197 in QTableView::setSortingEnabled(bool) () from /usr/lib/libQt5Widgets.so.5\r\n#3  0x00005617b3a315ec in TransactionView::setModel (this=0x5617b716bc50, _model=_model@entry=0x5617b6e77530) at qt/transactionview.cpp:205\r\n#4  0x00005617b39d549f in WalletView::setWalletModel (this=this@entry=0x5617b71334f0, _walletModel=0x5617b6e77530) at qt/walletview.cpp:121\r\n#5  0x00005617b39be9a3 in WalletFrame::addWallet (this=0x5617b631eff0, name=..., walletModel=<optimized out>) at qt/walletframe.cpp:49\r\n#6  0x00005617b393d35a in BitcoinApplication::initializeResult (this=0x7ffe55c82f60, retval=<optimized out>) at qt/bitcoin.cpp:475\r\n#7  0x00007fd6b702fba9 in QObject::event(QEvent*) () from /usr/lib/libQt5Core.so.5\r\n#8  0x00007fd6b77d9114 in QGuiApplication::event(QEvent*) () from /usr/lib/libQt5Gui.so.5\r\n#9  0x00007fd6b7f7714f in QApplication::event(QEvent*) () from /usr/lib/libQt5Widgets.so.5\r\n#10 0x00007fd6b7f7134c in QApplicationPrivate::notify_helper(QObject*, QEvent*) () from /usr/lib/libQt5Widgets.so.5\r\n#11 0x00007fd6b7f78b61 in QApplication::notify(QObject*, QEvent*) () from /usr/lib/libQt5Widgets.so.5\r\n#12 0x00007fd6b7003440 in QCoreApplication::notifyInternal2(QObject*, QEvent*) () from /usr/lib/libQt5Core.so.5\r\n#13 0x00007fd6b7005bcd in QCoreApplicationPrivate::sendPostedEvents(QObject*, int, QThreadData*) () from /usr/lib/libQt5Core.so.5\r\n#14 0x00007fd6b7057c43 in ?? () from /usr/lib/libQt5Core.so.5\r\n#15 0x00007fd6b2c6d587 in g_main_context_dispatch () from /usr/lib/libglib-2.0.so.0\r\n#16 0x00007fd6b2c6d7f0 in ?? () from /usr/lib/libglib-2.0.so.0\r\n#17 0x00007fd6b2c6d89c in g_main_context_iteration () from /usr/lib/libglib-2.0.so.0\r\n#18 0x00007fd6b705804f in QEventDispatcherGlib::processEvents(QFlags<QEventLoop::ProcessEventsFlag>) () from /usr/lib/libQt5Core.so.5\r\n#19 0x00007fd6b700189a in QEventLoop::exec(QFlags<QEventLoop::ProcessEventsFlag>) () from /usr/lib/libQt5Core.so.5\r\n#20 0x00007fd6b7009de4 in QCoreApplication::exec() () from /usr/lib/libQt5Core.so.5\r\n#21 0x00005617b392d319 in main (argc=<optimized out>, argv=0x7ffe55c83598) at qt/bitcoin.cpp:692\r\n(gdb)\r\n```"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/9881",
    "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
    "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/9881/labels{/name}",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/9881/comments",
    "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/9881/events",
    "html_url": "https://github.com/bitcoin/bitcoin/issues/9881",
    "id": 210595859,
    "number": 9881,
    "title": "v0.14.0rc2 crash on shutdown",
    "user": {
      "login": "dooglus",
      "id": 573356,
      "avatar_url": "https://avatars3.githubusercontent.com/u/573356?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dooglus",
      "html_url": "https://github.com/dooglus",
      "followers_url": "https://api.github.com/users/dooglus/followers",
      "following_url": "https://api.github.com/users/dooglus/following{/other_user}",
      "gists_url": "https://api.github.com/users/dooglus/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dooglus/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dooglus/subscriptions",
      "organizations_url": "https://api.github.com/users/dooglus/orgs",
      "repos_url": "https://api.github.com/users/dooglus/repos",
      "events_url": "https://api.github.com/users/dooglus/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dooglus/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 64585,
        "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Bug",
        "name": "Bug",
        "color": "FBBAAB",
        "default": false
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 3,
    "created_at": "2017-02-27T20:22:52Z",
    "updated_at": "2017-08-13T02:17:04Z",
    "closed_at": "2017-08-13T02:17:04Z",
    "author_association": "CONTRIBUTOR",
    "body": "I had rc2 running overnight. It was fully synced. My computer was being slow, which is sometimes caused by bitcoin-qt doing a lot of disk access. I clicked the X in the top right of the bitcoin-qt gui window to shut it down to see if that would help. Nothing happened - the gui window didn't go away. I figured I had misclicked (using a tap-to-click touchpad it happens) so I clicked the X again. bitcoin-qt crashed, like this:\r\n\r\n    (gdb) run\r\n    Starting program: /home/chris/Programs/bitcoin.git/src/qt/bitcoin-qt \r\n    [Thread debugging using libthread_db enabled]\r\n    Using host libthread_db library \"/lib/x86_64-linux-gnu/libthread_db.so.1\".\r\n    [New Thread 0x7fffe9d6b700 (LWP 7353)]\r\n    [New Thread 0x7fffdd8ff700 (LWP 7356)]\r\n    [New Thread 0x7fffd5ffe700 (LWP 7357)]\r\n    [New Thread 0x7fffd57ad700 (LWP 7358)]\r\n    [New Thread 0x7fffd4f5c700 (LWP 7359)]\r\n    [New Thread 0x7fffcffff700 (LWP 7360)]\r\n    [New Thread 0x7fffcf7ae700 (LWP 7367)]\r\n    [New Thread 0x7fffcef5d700 (LWP 7368)]\r\n    [New Thread 0x7fffce70c700 (LWP 7369)]\r\n    [New Thread 0x7fffcdebb700 (LWP 7370)]\r\n    [New Thread 0x7fffcd66a700 (LWP 7371)]\r\n    [New Thread 0x7fffb972f700 (LWP 7375)]\r\n    [New Thread 0x7fff9d18f700 (LWP 7399)]\r\n    [New Thread 0x7fff9c93e700 (LWP 7400)]\r\n    [New Thread 0x7fff97fff700 (LWP 7401)]\r\n    [New Thread 0x7fff977ae700 (LWP 7402)]\r\n    [New Thread 0x7fff96f5d700 (LWP 7403)]\r\n    [New Thread 0x7fff9670c700 (LWP 7404)]\r\n    [New Thread 0x7fff95ebb700 (LWP 7405)]\r\n    [New Thread 0x7fff95033700 (LWP 7407)]\r\n    [New Thread 0x7fff77fff700 (LWP 7408)]\r\n    [Thread 0x7fff97fff700 (LWP 7401) exited]\r\n    [Thread 0x7fff9d18f700 (LWP 7399) exited]\r\n    [Thread 0x7fff95033700 (LWP 7407) exited]\r\n    [Thread 0x7fffce70c700 (LWP 7369) exited]\r\n    [Thread 0x7fffcd66a700 (LWP 7371) exited]\r\n    [Thread 0x7fffcef5d700 (LWP 7368) exited]\r\n    [Thread 0x7fffcdebb700 (LWP 7370) exited]\r\n    [Thread 0x7fffcf7ae700 (LWP 7367) exited]\r\n    [Thread 0x7fff96f5d700 (LWP 7403) exited]\r\n    [Thread 0x7fff977ae700 (LWP 7402) exited]\r\n    [Thread 0x7fff9670c700 (LWP 7404) exited]\r\n    [Thread 0x7fff9c93e700 (LWP 7400) exited]\r\n    [Thread 0x7fffd5ffe700 (LWP 7357) exited]\r\n    [Thread 0x7fff95ebb700 (LWP 7405) exited]\r\n    [Thread 0x7fffd4f5c700 (LWP 7359) exited]\r\n    [Thread 0x7fffcffff700 (LWP 7360) exited]\r\n    [Thread 0x7fffd57ad700 (LWP 7358) exited]\r\n    [Thread 0x7fffdd8ff700 (LWP 7356) exited]\r\n    [Thread 0x7fff77fff700 (LWP 7408) exited]\r\n    [Thread 0x7fffe9d6b700 (LWP 7353) exited]\r\n    bitcoin-qt: /usr/include/boost/thread/pthread/recursive_mutex.hpp:101: boost::recursive_mutex::~recursive_mutex(): Assertion `!pthread_mutex_destroy(&m)' failed.\r\n\r\n    Program received signal SIGABRT, Aborted.\r\n    0x00007ffff3292067 in __GI_raise (sig=sig@entry=6) at ../nptl/sysdeps/unix/sysv/linux/raise.c:56\r\n    56\t../nptl/sysdeps/unix/sysv/linux/raise.c: No such file or directory.\r\n    (gdb) thread apply all where\r\n\r\n    Thread 13 (Thread 0x7fffb972f700 (LWP 7375)):\r\n    #0  pthread_cond_wait@@GLIBC_2.3.2 () at ../nptl/sysdeps/unix/sysv/linux/x86_64/pthread_cond_wait.S:185\r\n    #1  0x00005555559bbb7b in BGThread (this=0x7fffd84d1990) at leveldb/util/env_posix.cc:574\r\n    #2  leveldb::(anonymous namespace)::PosixEnv::BGThreadWrapper (arg=0x7fffd84d1990) at leveldb/util/env_posix.cc:521\r\n    #3  0x00007ffff4cc30a4 in start_thread (arg=0x7fffb972f700) at pthread_create.c:309\r\n    #4  0x00007ffff334562d in clone () at ../sysdeps/unix/sysv/linux/x86_64/clone.S:111\r\n\r\n    Thread 1 (Thread 0x7ffff7fb8780 (LWP 7340)):\r\n    #0  0x00007ffff3292067 in __GI_raise (sig=sig@entry=6) at ../nptl/sysdeps/unix/sysv/linux/raise.c:56\r\n    #1  0x00007ffff3293448 in __GI_abort () at abort.c:89\r\n    #2  0x00007ffff328b266 in __assert_fail_base (fmt=0x7ffff33c3f18 \"%s%s%s:%u: %s%sAssertion `%s' failed.\\n%n\", \r\n        assertion=assertion@entry=0x555555d9b940 \"!pthread_mutex_destroy(&m)\", file=file@entry=0x5555559ebc80 \"/usr/include/boost/thread/pthread/recursive_mutex.hpp\", \r\n        line=line@entry=101, \r\n        function=function@entry=0x555555ec1e20 <_ZZN5boost15recursive_mutexD4EvE19__PRETTY_FUNCTION__> \"boost::recursive_mutex::~recursive_mutex()\") at assert.c:92\r\n    #3  0x00007ffff328b312 in __GI___assert_fail (assertion=0x555555d9b940 \"!pthread_mutex_destroy(&m)\", \r\n        file=0x5555559ebc80 \"/usr/include/boost/thread/pthread/recursive_mutex.hpp\", line=101, \r\n        function=0x555555ec1e20 <_ZZN5boost15recursive_mutexD4EvE19__PRETTY_FUNCTION__> \"boost::recursive_mutex::~recursive_mutex()\") at assert.c:101\r\n    #4  0x00005555555c5601 in boost::recursive_mutex::~recursive_mutex (this=0x555556206220, __in_chrg=<optimized out>)\r\n        at /usr/include/boost/thread/pthread/recursive_mutex.hpp:101\r\n    #5  0x000055555594fc78 in ~recursive_mutex (this=0x555556206220, __in_chrg=<optimized out>) at util.cpp:165\r\n    #6  ~AnnotatedMixin (this=0x555556206220, __in_chrg=<optimized out>) at sync.h:55\r\n    #7  ~CCriticalSection (this=0x555556206220, __in_chrg=<optimized out>) at sync.h:95\r\n    #8  CInit::~CInit (this=<optimized out>, __in_chrg=<optimized out>) at util.cpp:164\r\n    #9  0x00007ffff3294b29 in __run_exit_handlers (status=0, listp=0x7ffff36025a8 <__exit_funcs>, run_list_atexit=run_list_atexit@entry=true) at exit.c:82\r\n    #10 0x00007ffff3294b75 in __GI_exit (status=<optimized out>) at exit.c:104\r\n    #11 0x00007ffff327eb4c in __libc_start_main (main=0x5555555c65c0 <main(int, char**)>, argc=1, argv=0x7fffffffe5b8, init=<optimized out>, fini=<optimized out>, \r\n        rtld_fini=<optimized out>, stack_end=0x7fffffffe5a8) at libc-start.c:321\r\n    #12 0x00005555555d7b08 in _start ()\r\n    (gdb) \r\n\r\nI don't have a lot of trust in my computer. It sometimes fails to run g++ correctly for example. See https://github.com/bitcoin/bitcoin/issues/9814#issuecomment-282585507 for other discussion of this. But this issue looks real to me."
  }
]
