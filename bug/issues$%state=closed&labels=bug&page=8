[
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/4066",
    "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
    "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/4066/labels{/name}",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/4066/comments",
    "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/4066/events",
    "html_url": "https://github.com/bitcoin/bitcoin/issues/4066",
    "id": 31682735,
    "number": 4066,
    "title": "failed on open 64bit version",
    "user": {
      "login": "FabioCarpi",
      "id": 6897978,
      "avatar_url": "https://avatars0.githubusercontent.com/u/6897978?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/FabioCarpi",
      "html_url": "https://github.com/FabioCarpi",
      "followers_url": "https://api.github.com/users/FabioCarpi/followers",
      "following_url": "https://api.github.com/users/FabioCarpi/following{/other_user}",
      "gists_url": "https://api.github.com/users/FabioCarpi/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/FabioCarpi/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/FabioCarpi/subscriptions",
      "organizations_url": "https://api.github.com/users/FabioCarpi/orgs",
      "repos_url": "https://api.github.com/users/FabioCarpi/repos",
      "events_url": "https://api.github.com/users/FabioCarpi/events{/privacy}",
      "received_events_url": "https://api.github.com/users/FabioCarpi/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 64585,
        "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Bug",
        "name": "Bug",
        "color": "FBBAAB",
        "default": false
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 11,
    "created_at": "2014-04-16T21:45:16Z",
    "updated_at": "2015-05-18T08:35:05Z",
    "closed_at": "2015-05-18T08:35:05Z",
    "author_association": "NONE",
    "body": "![capturar](https://cloud.githubusercontent.com/assets/6897978/2725741/62d1b204-c5b0-11e3-97c1-e906a95f525e.PNG)\n"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/4064",
    "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
    "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/4064/labels{/name}",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/4064/comments",
    "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/4064/events",
    "html_url": "https://github.com/bitcoin/bitcoin/issues/4064",
    "id": 31639549,
    "number": 4064,
    "title": "Can not synchronize to network using Bitcoin QT",
    "user": {
      "login": "jptrway",
      "id": 7314840,
      "avatar_url": "https://avatars3.githubusercontent.com/u/7314840?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jptrway",
      "html_url": "https://github.com/jptrway",
      "followers_url": "https://api.github.com/users/jptrway/followers",
      "following_url": "https://api.github.com/users/jptrway/following{/other_user}",
      "gists_url": "https://api.github.com/users/jptrway/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jptrway/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jptrway/subscriptions",
      "organizations_url": "https://api.github.com/users/jptrway/orgs",
      "repos_url": "https://api.github.com/users/jptrway/repos",
      "events_url": "https://api.github.com/users/jptrway/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jptrway/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 64585,
        "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Bug",
        "name": "Bug",
        "color": "FBBAAB",
        "default": false
      },
      {
        "id": 97470796,
        "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/UTXO%20Db%20and%20Indexes",
        "name": "UTXO Db and Indexes",
        "color": "fbca04",
        "default": false
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 4,
    "created_at": "2014-04-16T13:06:34Z",
    "updated_at": "2015-11-11T11:32:18Z",
    "closed_at": "2015-11-11T11:32:18Z",
    "author_association": "NONE",
    "body": "I am using Bitcoin QT. I do not think my wallet can synchronize to the network. I have left it on connecting for hours. I have only transferred 0.01 BTC to it but it would be nice to be able to use it.\n\nScreenshot:\n![screen shot 2014-04-16 at 6 03 35 am](https://cloud.githubusercontent.com/assets/7314840/2719838/8cd7c726-c567-11e3-8f5f-f3a58193520d.png)\n"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/4059",
    "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
    "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/4059/labels{/name}",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/4059/comments",
    "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/4059/events",
    "html_url": "https://github.com/bitcoin/bitcoin/issues/4059",
    "id": 31570184,
    "number": 4059,
    "title": "Incorrect ~/.bitcoin perms raises Boost exception, terminates bitcoin-qt",
    "user": {
      "login": "daninovak",
      "id": 7262007,
      "avatar_url": "https://avatars2.githubusercontent.com/u/7262007?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/daninovak",
      "html_url": "https://github.com/daninovak",
      "followers_url": "https://api.github.com/users/daninovak/followers",
      "following_url": "https://api.github.com/users/daninovak/following{/other_user}",
      "gists_url": "https://api.github.com/users/daninovak/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/daninovak/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/daninovak/subscriptions",
      "organizations_url": "https://api.github.com/users/daninovak/orgs",
      "repos_url": "https://api.github.com/users/daninovak/repos",
      "events_url": "https://api.github.com/users/daninovak/events{/privacy}",
      "received_events_url": "https://api.github.com/users/daninovak/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 64585,
        "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Bug",
        "name": "Bug",
        "color": "FBBAAB",
        "default": false
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 4,
    "created_at": "2014-04-15T16:44:32Z",
    "updated_at": "2014-11-25T13:44:43Z",
    "closed_at": "2014-11-25T13:44:43Z",
    "author_association": "NONE",
    "body": "Accidentally discovered this when migrating to another machine.\n- Debian Wheezy\n- Bitcoin 0.9.1\n- Change permissions on ~/.bitcoin to exclude running user\n\n---\n\nEXCEPTION: N5boost12interprocess22interprocess_exceptionE  \nPermission denied  \nbitcoin in Runaway exception  \n"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/4051",
    "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
    "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/4051/labels{/name}",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/4051/comments",
    "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/4051/events",
    "html_url": "https://github.com/bitcoin/bitcoin/issues/4051",
    "id": 31403253,
    "number": 4051,
    "title": "My Bicoind stuck with this call futex(0x1ef02ec, FUTEX_WAIT_PRIVATE, 1, NULL) and high cpu load",
    "user": {
      "login": "cmingxu",
      "id": 124767,
      "avatar_url": "https://avatars2.githubusercontent.com/u/124767?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cmingxu",
      "html_url": "https://github.com/cmingxu",
      "followers_url": "https://api.github.com/users/cmingxu/followers",
      "following_url": "https://api.github.com/users/cmingxu/following{/other_user}",
      "gists_url": "https://api.github.com/users/cmingxu/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cmingxu/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cmingxu/subscriptions",
      "organizations_url": "https://api.github.com/users/cmingxu/orgs",
      "repos_url": "https://api.github.com/users/cmingxu/repos",
      "events_url": "https://api.github.com/users/cmingxu/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cmingxu/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 64585,
        "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Bug",
        "name": "Bug",
        "color": "FBBAAB",
        "default": false
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 4,
    "created_at": "2014-04-13T12:20:34Z",
    "updated_at": "2015-10-27T11:02:19Z",
    "closed_at": "2015-10-27T11:02:19Z",
    "author_association": "NONE",
    "body": "Hi, i constantly came across this issue and i have to restart my bitcoind several times a day.\n\ni run a bitcoind with version 0.8.6 on a linux machine, it usually failed to give JSON-RPC any response(TIMEOUT).  when i check the process i found it hang with the call futex and have very high cpu load.\n\nit will be helpful if anybody have any clue, thanks in advanced\n"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/4034",
    "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
    "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/4034/labels{/name}",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/4034/comments",
    "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/4034/events",
    "html_url": "https://github.com/bitcoin/bitcoin/issues/4034",
    "id": 31159641,
    "number": 4034,
    "title": "-connect to unreachable node seems to slow down wallet after a while",
    "user": {
      "login": "Joukehofman",
      "id": 1539860,
      "avatar_url": "https://avatars3.githubusercontent.com/u/1539860?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Joukehofman",
      "html_url": "https://github.com/Joukehofman",
      "followers_url": "https://api.github.com/users/Joukehofman/followers",
      "following_url": "https://api.github.com/users/Joukehofman/following{/other_user}",
      "gists_url": "https://api.github.com/users/Joukehofman/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Joukehofman/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Joukehofman/subscriptions",
      "organizations_url": "https://api.github.com/users/Joukehofman/orgs",
      "repos_url": "https://api.github.com/users/Joukehofman/repos",
      "events_url": "https://api.github.com/users/Joukehofman/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Joukehofman/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 64585,
        "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Bug",
        "name": "Bug",
        "color": "FBBAAB",
        "default": false
      },
      {
        "id": 326918230,
        "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Resource%20usage",
        "name": "Resource usage",
        "color": "981023",
        "default": false
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 4,
    "created_at": "2014-04-09T14:04:51Z",
    "updated_at": "2018-03-09T03:32:44Z",
    "closed_at": "2018-03-09T03:32:44Z",
    "author_association": "NONE",
    "body": "I had a wallet connect to a node on \"localhost\" (ssh tunnel).  The tunnelled node became unreachable and over time the wallet seemed to slow down. And by slowing down I mean I was getting time-outs on RPC requests over ssl.\n\nI noticed the time outs were gone after restarting the wallet once, but gradually came back. Now that I restarted the wallet without the -connect to the unreachable node I have not had a time out since.\n\n(version 0.9.-something)\n"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/4013",
    "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
    "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/4013/labels{/name}",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/4013/comments",
    "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/4013/events",
    "html_url": "https://github.com/bitcoin/bitcoin/issues/4013",
    "id": 30941333,
    "number": 4013,
    "title": "bitcoin-qt.exe crash with disablewallet",
    "user": {
      "login": "PRabahy",
      "id": 429961,
      "avatar_url": "https://avatars2.githubusercontent.com/u/429961?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/PRabahy",
      "html_url": "https://github.com/PRabahy",
      "followers_url": "https://api.github.com/users/PRabahy/followers",
      "following_url": "https://api.github.com/users/PRabahy/following{/other_user}",
      "gists_url": "https://api.github.com/users/PRabahy/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/PRabahy/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/PRabahy/subscriptions",
      "organizations_url": "https://api.github.com/users/PRabahy/orgs",
      "repos_url": "https://api.github.com/users/PRabahy/repos",
      "events_url": "https://api.github.com/users/PRabahy/events{/privacy}",
      "received_events_url": "https://api.github.com/users/PRabahy/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 64585,
        "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Bug",
        "name": "Bug",
        "color": "FBBAAB",
        "default": false
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 2,
    "created_at": "2014-04-06T17:00:13Z",
    "updated_at": "2014-04-08T06:41:48Z",
    "closed_at": "2014-04-08T06:41:48Z",
    "author_association": "CONTRIBUTOR",
    "body": "When I try to run bitcoin-qt it hard crashes when I have \"disablewallet\" in bitcoin.conf. \n\nWhen I replace it with \"disablewallet=true\", it doesn't crash, but I still see my wallet and transactions.\n\nWhen I replace it with \"disablewallet=1\", it works as expected.\n\nhttps://en.bitcoin.it/wiki/Running_Bitcoin#Bitcoin.conf_Configuration_File implies that this should be possible, but doesn't give any examples. I believe that disablewallet=1 is correct, but I only discovered it through experimentation.\n\nProblem signature:\n  Problem Event Name:   APPCRASH\n  Application Name: bitcoin-qt.exe\n  Application Version:  0.9.0.0\n  Application Timestamp:    51a93980\n  Fault Module Name:    bitcoin-qt.exe\n  Fault Module Version: 0.9.0.0\n  Fault Module Timestamp:   51a93980\n  Exception Code:   40000015\n  Exception Offset: 0000000001147c58\n  OS Version:   6.1.7601.2.1.0.256.1\n  Locale ID:    1033\n  Additional Information 1: a6cb\n  Additional Information 2: a6cb566f5bbbc3b0aa6b451eb8aee48c\n  Additional Information 3: 6ac8\n  Additional Information 4: 6ac8e792c79d7d7cc05fa152f39b7f95\n\nRead our privacy statement online:\n  http://go.microsoft.com/fwlink/?linkid=104288&clcid=0x0409\n\nIf the online privacy statement is not available, please read our privacy statement offline:\n  C:\\Windows\\system32\\en-US\\erofflps.txt\n"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/4003",
    "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
    "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/4003/labels{/name}",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/4003/comments",
    "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/4003/events",
    "html_url": "https://github.com/bitcoin/bitcoin/issues/4003",
    "id": 30908197,
    "number": 4003,
    "title": "bitcoin-qt crashes every time I quit it",
    "user": {
      "login": "dooglus",
      "id": 573356,
      "avatar_url": "https://avatars3.githubusercontent.com/u/573356?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dooglus",
      "html_url": "https://github.com/dooglus",
      "followers_url": "https://api.github.com/users/dooglus/followers",
      "following_url": "https://api.github.com/users/dooglus/following{/other_user}",
      "gists_url": "https://api.github.com/users/dooglus/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dooglus/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dooglus/subscriptions",
      "organizations_url": "https://api.github.com/users/dooglus/orgs",
      "repos_url": "https://api.github.com/users/dooglus/repos",
      "events_url": "https://api.github.com/users/dooglus/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dooglus/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 64585,
        "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Bug",
        "name": "Bug",
        "color": "FBBAAB",
        "default": false
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 4,
    "created_at": "2014-04-05T04:03:17Z",
    "updated_at": "2014-05-13T06:52:35Z",
    "closed_at": "2014-05-13T06:52:35Z",
    "author_association": "CONTRIBUTOR",
    "body": "The wallet seems to run fine until I exit, and then I see:\n\n```\n[Thread 0x7fffa566a700 (LWP 9742) exited]\n[Thread 0x7fffa5ebb700 (LWP 9741) exited]\n[Thread 0x7fffa670c700 (LWP 9740) exited]\n\n\n************************\nEXCEPTION: St13runtime_error       \nCDB() : can't open database file wallet.dat, error -30973       \nbitcoin in Runaway exception       \n\nbitcoin: ../../src/allocators.h:41: LockedPageManagerBase<Locker>::~LockedPageManagerBase() [with Locker = MemoryPageLocker]: Assertion `this->GetLockedPageCount() == 0' failed.\n\nProgram received signal SIGABRT, Aborted.\n0x00007ffff4323f77 in __GI_raise (sig=sig@entry=6)\n    at ../nptl/sysdeps/unix/sysv/linux/raise.c:56\n56  ../nptl/sysdeps/unix/sysv/linux/raise.c: No such file or directory.\n```\n\nThis happens each time I close the wallet application.\n\nI think it started happening after my laptop refused to resume from suspending one time and I had to power it down in a less than correct manner.\n\nIs there some way I can 'fix' the wallet?\n"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/3997",
    "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
    "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/3997/labels{/name}",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/3997/comments",
    "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/3997/events",
    "html_url": "https://github.com/bitcoin/bitcoin/issues/3997",
    "id": 30721356,
    "number": 3997,
    "title": "crash in CMerkleTx::GetDepthInMainChainINTERNAL()",
    "user": {
      "login": "dooglus",
      "id": 573356,
      "avatar_url": "https://avatars3.githubusercontent.com/u/573356?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dooglus",
      "html_url": "https://github.com/dooglus",
      "followers_url": "https://api.github.com/users/dooglus/followers",
      "following_url": "https://api.github.com/users/dooglus/following{/other_user}",
      "gists_url": "https://api.github.com/users/dooglus/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dooglus/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dooglus/subscriptions",
      "organizations_url": "https://api.github.com/users/dooglus/orgs",
      "repos_url": "https://api.github.com/users/dooglus/repos",
      "events_url": "https://api.github.com/users/dooglus/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dooglus/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 64585,
        "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Bug",
        "name": "Bug",
        "color": "FBBAAB",
        "default": false
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 33,
    "created_at": "2014-04-02T20:16:29Z",
    "updated_at": "2014-04-24T17:02:58Z",
    "closed_at": "2014-04-22T11:35:47Z",
    "author_association": "CONTRIBUTOR",
    "body": "I've been running bitcoin-qt inside gdb for over a year now, because it used to crash pretty often.  It just crashed for the first time in over 6 months, a week or two after upgrading to the recent release.  I would guess this is a new issue introduced in 0.9.\n\nI built the code myself, from the git v0.9.0 tag, on a 64 bit Linux system.\n\nHere's what gdb said:\n\n```\nProgram received signal SIGSEGV, Segmentation fault.\nCMerkleTx::GetDepthInMainChainINTERNAL (this=this@entry=0x7fffb77d7ac0, \n    pindexRet=@0x7fffffffd148: 0x555556ca0120) at main.cpp:884\n884     if (!pindex || !chainActive.Contains(pindex))\n(gdb) where\n#0  CMerkleTx::GetDepthInMainChainINTERNAL (this=this@entry=0x7fffb77d7ac0, \n    pindexRet=@0x7fffffffd148: 0x555556ca0120) at main.cpp:884\n#1  0x000055555571dca6 in CMerkleTx::GetDepthInMainChain (\n    this=this@entry=0x7fffb77d7ac0, pindexRet=@0x7fffffffd148: 0x555556ca0120)\n    at main.cpp:901\n#2  0x00005555556b632d in GetDepthInMainChain (this=0x7fffb77d7ac0)\n    at ../../src/main.h:466\n#3  CWalletTx::IsTrusted (this=this@entry=0x7fffb77d7ac0)\n    at ../../src/wallet.h:665\n#4  0x00005555556b40cd in TransactionRecord::updateStatus (\n    this=this@entry=0x555556c00ca0, wtx=...) at transactionrecord.cpp:167\n#5  0x00005555556933cd in TransactionTablePriv::index (this=<optimized out>, \n    idx=idx@entry=6314) at transactiontablemodel.cpp:201\n#6  0x000055555569231e in TransactionTableModel::index (this=0x555556a5b340, \n    row=6314, column=0, parent=...) at transactiontablemodel.cpp:615\n#7  0x000055555568f398 in TransactionFilterProxy::filterAcceptsRow (this=\n    0x55555625ee30, sourceRow=6314, sourceParent=...)\n    at transactionfilterproxy.cpp:33\n```\n\nand here's debug.log (it looks like bitcoin-qt was only just getting started):\n\n```\n2014-03-31 04:41:51 Bitcoin version v0.9.0-1-gd824858-beta (2014-03-20 09:19:05 -0700)\n2014-03-31 04:41:51 Using OpenSSL version OpenSSL 1.0.1c 10 May 2012\n2014-03-31 04:41:51 Default data directory /home/chris/.bitcoin\n2014-03-31 04:41:51 Using data directory /home/chris/.bitcoin\n2014-03-31 04:41:51 Using at most 125 connections (1024 file descriptors available)\n2014-03-31 04:41:51 Using 2 threads for script verification\n2014-03-31 04:41:51 Using wallet wallet.dat\n2014-03-31 04:41:51 init message: Verifying wallet...\n2014-03-31 04:41:51 dbenv.open LogDir=/home/chris/.bitcoin/database ErrorFile=/home/chris/.bitcoin/db.log\n2014-03-31 04:42:16 Bound to [::]:8333\n2014-03-31 04:42:16 Bound to 0.0.0.0:8333\n2014-03-31 04:42:16 init message: Loading block index...\n2014-03-31 04:42:16 Opening LevelDB in /home/chris/.bitcoin/blocks/index\n2014-03-31 04:42:17 Opened LevelDB successfully\n2014-03-31 04:42:17 Opening LevelDB in /home/chris/.bitcoin/chainstate\n2014-03-31 04:42:18 Opened LevelDB successfully\n2014-03-31 04:42:36 LoadBlockIndexDB(): last block file = 89\n2014-03-31 04:42:36 LoadBlockIndexDB(): last block file info: CBlockFileInfo(blocks=338, size=67010312, heights=292948...293280, time=2014-03-28...2014-03-30)\n2014-03-31 04:42:36 LoadBlockIndexDB(): transaction index disabled\n2014-03-31 04:42:36 LoadBlockIndexDB(): hashBestChain=000000000000000052d11e4b468cf8e66152f4687ccf6f7b24a4eb8c7c183bbb height=293280 date=2014-03-30 20:05:47 progress=0.998126\n2014-03-31 04:42:36 init message: Verifying blocks...\n2014-03-31 04:42:36 Verifying last 288 blocks at level 2\n2014-03-31 04:43:30 No coin database inconsistencies in last 0 blocks (0 transactions)\n2014-03-31 04:43:30  block index           74479ms\n2014-03-31 04:43:30 init message: Loading wallet...\n2014-03-31 04:44:50 nFileVersion = 90000\n2014-03-31 04:44:50 Keys: 36667 plaintext, 0 encrypted, 0 w/ metadata, 36667 total\n2014-03-31 04:44:50  wallet                80181ms\n2014-03-31 04:44:50 init message: Loading addresses...\n2014-03-31 04:44:50 Loaded 18722 addresses from peers.dat  118ms\n2014-03-31 04:44:50 mapBlockIndex.size() = 293606\n2014-03-31 04:44:50 nBestHeight = 293280\n2014-03-31 04:44:50 setKeyPool.size() = 4996\n2014-03-31 04:44:50 mapWallet.size() = 30432\n2014-03-31 04:44:50 mapAddressBook.size() = 19485\n2014-03-31 04:44:50 ext-ip thread start\n2014-03-31 04:44:50 dnsseed thread start\n2014-03-31 04:44:50 net thread start\n2014-03-31 04:44:50 Loading addresses from DNS seeds (could take a while)\n2014-03-31 04:44:50 addcon thread start\n2014-03-31 04:44:50 msghand thread start\n2014-03-31 04:44:50 opencon thread start\n2014-03-31 04:44:50 dumpaddr thread start\n2014-03-31 04:44:50 init message: Done loading\n2014-03-31 04:44:51 ERROR: AcceptToMemoryPool : nonstandard transaction: dust\n2014-03-31 04:44:51 GetMyExternalIP() received [a.b.c.d] a.b.c.d:0\n2014-03-31 04:44:51 GetMyExternalIP() returned a.b.c.d\n2014-03-31 04:44:51 AddLocal(a.b.c.d:8333,4)\n2014-03-31 04:44:51 ext-ip thread exit\n2014-03-31 04:44:51 ERROR: AcceptToMemoryPool : nonstandard transaction: dust\n2014-03-31 04:44:51 ERROR: AcceptToMemoryPool : nonstandard transaction: dust\n2014-03-31 04:44:51 ERROR: AcceptToMemoryPool : nonstandard transaction: dust\n2014-03-31 04:44:51 receive version message: /Satoshi:0.8.6/: version 70001, blocks=293333, us=a.b.c.d:9089, them=e.f.g.h:8333, peer=e.f.g.h:8333\n2014-03-31 04:44:51 Added time data, samples 2, offset -7 (+0 minutes)\n2014-03-31 04:44:51 ERROR: AcceptToMemoryPool : nonstandard transaction: dust\n2014-03-31 04:44:51 Initialization result: 1\n2014-03-31 04:44:53 Pre-allocating up to position 0x5000000 in blk00089.dat\n2014-03-31 04:45:08 118 addresses found from DNS seeds\n2014-03-31 04:45:08 dnsseed thread exit\n```\n"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/3968",
    "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
    "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/3968/labels{/name}",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/3968/comments",
    "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/3968/events",
    "html_url": "https://github.com/bitcoin/bitcoin/issues/3968",
    "id": 30347383,
    "number": 3968,
    "title": "RPC sockets get stuck in CLOSE_WAIT state",
    "user": {
      "login": "espringe",
      "id": 201777,
      "avatar_url": "https://avatars2.githubusercontent.com/u/201777?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/espringe",
      "html_url": "https://github.com/espringe",
      "followers_url": "https://api.github.com/users/espringe/followers",
      "following_url": "https://api.github.com/users/espringe/following{/other_user}",
      "gists_url": "https://api.github.com/users/espringe/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/espringe/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/espringe/subscriptions",
      "organizations_url": "https://api.github.com/users/espringe/orgs",
      "repos_url": "https://api.github.com/users/espringe/repos",
      "events_url": "https://api.github.com/users/espringe/events{/privacy}",
      "received_events_url": "https://api.github.com/users/espringe/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 64585,
        "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Bug",
        "name": "Bug",
        "color": "FBBAAB",
        "default": false
      },
      {
        "id": 98279177,
        "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/RPC/REST/ZMQ",
        "name": "RPC/REST/ZMQ",
        "color": "0052cc",
        "default": false
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 12,
    "created_at": "2014-03-27T22:16:18Z",
    "updated_at": "2015-11-11T11:33:46Z",
    "closed_at": "2015-11-11T11:33:46Z",
    "author_association": "NONE",
    "body": "When RPC requests get interrupted, the sockets can end up stuck in CLOSE_WAIT state. After 3 are in this state, `bitcoind` is unable to respond to RPC requests. Happens with `0.8.6` and `0.9.0`. And lasts _far_ longer than `rpctimeout` would suggest.\n\n```\n$ lsof -p `pidof bitcoind` | grep 8332\nbitcoind 872 bitcoin   23u  IPv6  10179      0t0     TCP *:8332 (LISTEN)\nbitcoind 872 bitcoin   30u  IPv6  11153      0t0     TCP 107.101.212.239:8332->customer-GDL-125-2.megared.net.mx:61668 (CLOSE_WAIT)\nbitcoind 872 bitcoin   38u  IPv6  11243      0t0     TCP 107.101.212.239:8332->customer-GDL-125-2.megared.net.mx:61670 (CLOSE_WAIT)\n```\n\nGoogling this issue, it seems lots of people have been bitten by it -- without any real solutions\n"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/3966",
    "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
    "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/3966/labels{/name}",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/3966/comments",
    "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/3966/events",
    "html_url": "https://github.com/bitcoin/bitcoin/issues/3966",
    "id": 30290233,
    "number": 3966,
    "title": "Client keeps updating tip after Shutdown requested",
    "user": {
      "login": "laanwj",
      "id": 126646,
      "avatar_url": "https://avatars0.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 64585,
        "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Bug",
        "name": "Bug",
        "color": "FBBAAB",
        "default": false
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 5,
    "created_at": "2014-03-27T11:00:16Z",
    "updated_at": "2014-09-08T11:51:23Z",
    "closed_at": "2014-09-08T11:51:23Z",
    "author_association": "OWNER",
    "body": "I've shut down my client (on testnet) and it keeps running, printing messages like this:\n\n```\n2014-03-27 10:57:57 Pre-allocating up to position 0x1000000 in blk00006.dat\n2014-03-27 10:58:00 Pre-allocating up to position 0x100000 in rev00006.dat\n2014-03-27 10:58:00 UpdateTip: new best=00000000c92aeb1fbb19c781dea3f28248a8cb0d54c3776e207f1021455b76a6  height=208103  log2_work=58.297563  tx=1325101  date=2014-03-26 13:29:00 progress=0.999795\n```\n\nMy guess is that some newly introduced loop is ignoring interruptions.\n"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/3957",
    "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
    "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/3957/labels{/name}",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/3957/comments",
    "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/3957/events",
    "html_url": "https://github.com/bitcoin/bitcoin/issues/3957",
    "id": 30108431,
    "number": 3957,
    "title": "Missing blk00000.dat doesn't cause failure when retrieving blocks.",
    "user": {
      "login": "shadders",
      "id": 947848,
      "avatar_url": "https://avatars0.githubusercontent.com/u/947848?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/shadders",
      "html_url": "https://github.com/shadders",
      "followers_url": "https://api.github.com/users/shadders/followers",
      "following_url": "https://api.github.com/users/shadders/following{/other_user}",
      "gists_url": "https://api.github.com/users/shadders/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/shadders/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/shadders/subscriptions",
      "organizations_url": "https://api.github.com/users/shadders/orgs",
      "repos_url": "https://api.github.com/users/shadders/repos",
      "events_url": "https://api.github.com/users/shadders/events{/privacy}",
      "received_events_url": "https://api.github.com/users/shadders/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 64585,
        "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Bug",
        "name": "Bug",
        "color": "FBBAAB",
        "default": false
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 2,
    "created_at": "2014-03-25T09:39:34Z",
    "updated_at": "2014-06-01T15:48:45Z",
    "closed_at": "2014-06-01T15:48:45Z",
    "author_association": "NONE",
    "body": "Using bitcoind v0.9.0rc2-17-gd33f69a-beta (64-bit).  When using bitcoinj as a client to  to retrieve blocks from bitcoind with the wire protocol recent blocks were able to be retrieved as normal but when starting at the genesis block invalid blocks were being returned.\n\nThe following steps were taken:\n1/ complete ver/verack handshake\n2/ send getblocks message using genesis block hash as the locator\n3/ receive inv message with 500 block hashes.  The first 5 were manually validated as correct by checking blockchain.info\n4/ send getblocks message using the same inventory items from the previous inv message.\n5/ 500 block messages returned by bitcoind.  However every block 81 bytes long.  First byte was 0x02 (which is the wrong version for the genesis block) followed by 80 0x00 bytes.\n\nAfter much investigating it turns out blk00000.dat was missing.  Apparently rather than failing when unable to locate the block in the blockchain bitcoind was returning zeroed arrays of bytes.  Whilst a peer could probably recover from connecting to a bitcoind in this state as it will simply ignore the obviously invalid blocks it's not quite the behaviour you'd expect.  The client behaved completely normally as a client.  Guessing it would have continued to do so unless the wallet contained outputs from the missing blkxxxxx.dat.\n\nUnable to pinpoint when the file was deleted but likely it was several weeks ago and the client has been running happilly without it.\n\nPresumably the indexes where still present as the bitcoind was able to produce a valid inv response to getblocks.\n"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/3943",
    "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
    "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/3943/labels{/name}",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/3943/comments",
    "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/3943/events",
    "html_url": "https://github.com/bitcoin/bitcoin/issues/3943",
    "id": 29981579,
    "number": 3943,
    "title": "source build non 4.8 Bdb headers issue",
    "user": {
      "login": "anantshri",
      "id": 236843,
      "avatar_url": "https://avatars1.githubusercontent.com/u/236843?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/anantshri",
      "html_url": "https://github.com/anantshri",
      "followers_url": "https://api.github.com/users/anantshri/followers",
      "following_url": "https://api.github.com/users/anantshri/following{/other_user}",
      "gists_url": "https://api.github.com/users/anantshri/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/anantshri/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/anantshri/subscriptions",
      "organizations_url": "https://api.github.com/users/anantshri/orgs",
      "repos_url": "https://api.github.com/users/anantshri/repos",
      "events_url": "https://api.github.com/users/anantshri/events{/privacy}",
      "received_events_url": "https://api.github.com/users/anantshri/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 64585,
        "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Bug",
        "name": "Bug",
        "color": "FBBAAB",
        "default": false
      },
      {
        "id": 61889416,
        "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Build%20system",
        "name": "Build system",
        "color": "5319e7",
        "default": false
      },
      {
        "id": 149424,
        "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Wallet",
        "name": "Wallet",
        "color": "08a781",
        "default": false
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 3,
    "created_at": "2014-03-23T05:43:37Z",
    "updated_at": "2015-11-11T11:35:45Z",
    "closed_at": "2015-11-11T11:35:45Z",
    "author_association": "NONE",
    "body": "4.8 Bdb headers were not found however 4.8 so is found and hence the build still uses 4.8 so and hence making it incompatible with 5.1 db wallet.\n\nfound below in ./configure output.\n\nconfigure: WARNING: Found Berkeley DB other than 4.8; wallets opened by this build will not be portable!\nchecking for main in -ldb_cxx-4.8... yes\n\nI suppose the header files and so files should be of same version and in case its made for incompatible bdb then not to check for cxx.\n\ntook me 2 day to figure out the issue.\n"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/3916",
    "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
    "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/3916/labels{/name}",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/3916/comments",
    "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/3916/events",
    "html_url": "https://github.com/bitcoin/bitcoin/issues/3916",
    "id": 29835207,
    "number": 3916,
    "title": "Windows problem with datadir with unicode chars",
    "user": {
      "login": "laanwj",
      "id": 126646,
      "avatar_url": "https://avatars0.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 64585,
        "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Bug",
        "name": "Bug",
        "color": "FBBAAB",
        "default": false
      },
      {
        "id": 135946,
        "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/GUI",
        "name": "GUI",
        "color": "02d7e1",
        "default": false
      },
      {
        "id": 234877,
        "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Windows",
        "name": "Windows",
        "color": "884400",
        "default": false
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 2,
    "created_at": "2014-03-20T16:40:59Z",
    "updated_at": "2014-03-26T09:43:28Z",
    "closed_at": "2014-03-26T09:43:28Z",
    "author_association": "OWNER",
    "body": "When there are characters like é or è in the folder name (with the new -choosedatadir) it complains that the directory doesn't exist.\n\nProbably an unicode conversion issue somewhere (between Qt and Boost?)\n\nSee https://bitcointalk.org/index.php?topic=522014.msg5805438#msg5805438\n"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/3913",
    "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
    "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/3913/labels{/name}",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/3913/comments",
    "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/3913/events",
    "html_url": "https://github.com/bitcoin/bitcoin/issues/3913",
    "id": 29793532,
    "number": 3913,
    "title": "Clicked cancel on the preview transaction fee window, sent it anyways.",
    "user": {
      "login": "patrickmason",
      "id": 701015,
      "avatar_url": "https://avatars1.githubusercontent.com/u/701015?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/patrickmason",
      "html_url": "https://github.com/patrickmason",
      "followers_url": "https://api.github.com/users/patrickmason/followers",
      "following_url": "https://api.github.com/users/patrickmason/following{/other_user}",
      "gists_url": "https://api.github.com/users/patrickmason/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/patrickmason/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/patrickmason/subscriptions",
      "organizations_url": "https://api.github.com/users/patrickmason/orgs",
      "repos_url": "https://api.github.com/users/patrickmason/repos",
      "events_url": "https://api.github.com/users/patrickmason/events{/privacy}",
      "received_events_url": "https://api.github.com/users/patrickmason/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 64585,
        "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Bug",
        "name": "Bug",
        "color": "FBBAAB",
        "default": false
      },
      {
        "id": 135946,
        "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/GUI",
        "name": "GUI",
        "color": "02d7e1",
        "default": false
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 6,
    "created_at": "2014-03-20T04:40:00Z",
    "updated_at": "2014-10-02T19:27:05Z",
    "closed_at": "2014-10-02T19:27:05Z",
    "author_association": "NONE",
    "body": "I upgraded to the v0.9 64bit mac today.  When sending a transaction of .09, I decided not to pay the fee of .0002, clicked cancel, and it sent the transaction anyways.\n\nThis was the third or fourth time sending and canceling to the same address.\n"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/3905",
    "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
    "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/3905/labels{/name}",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/3905/comments",
    "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/3905/events",
    "html_url": "https://github.com/bitcoin/bitcoin/issues/3905",
    "id": 29764212,
    "number": 3905,
    "title": "datadir= doesn't function in conf file (Qt GUI)",
    "user": {
      "login": "darkhosis",
      "id": 2364197,
      "avatar_url": "https://avatars1.githubusercontent.com/u/2364197?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/darkhosis",
      "html_url": "https://github.com/darkhosis",
      "followers_url": "https://api.github.com/users/darkhosis/followers",
      "following_url": "https://api.github.com/users/darkhosis/following{/other_user}",
      "gists_url": "https://api.github.com/users/darkhosis/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/darkhosis/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/darkhosis/subscriptions",
      "organizations_url": "https://api.github.com/users/darkhosis/orgs",
      "repos_url": "https://api.github.com/users/darkhosis/repos",
      "events_url": "https://api.github.com/users/darkhosis/events{/privacy}",
      "received_events_url": "https://api.github.com/users/darkhosis/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 64585,
        "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Bug",
        "name": "Bug",
        "color": "FBBAAB",
        "default": false
      },
      {
        "id": 135946,
        "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/GUI",
        "name": "GUI",
        "color": "02d7e1",
        "default": false
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 8,
    "created_at": "2014-03-19T19:22:30Z",
    "updated_at": "2014-03-26T09:42:58Z",
    "closed_at": "2014-03-26T09:42:58Z",
    "author_association": "NONE",
    "body": "Could be Windows only.  Had to add -datadir=a:\\bitcoin to bitcoin-qt shortcut.\n\nIt's specified as:\n\ndatadir=a:\\bitcoin\n\nin the bitcoin.conf file.\n"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/3903",
    "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
    "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/3903/labels{/name}",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/3903/comments",
    "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/3903/events",
    "html_url": "https://github.com/bitcoin/bitcoin/issues/3903",
    "id": 29756082,
    "number": 3903,
    "title": "getbalance rpc call results in 100% cpu",
    "user": {
      "login": "ghost",
      "id": 10137,
      "avatar_url": "https://avatars3.githubusercontent.com/u/10137?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ghost",
      "html_url": "https://github.com/ghost",
      "followers_url": "https://api.github.com/users/ghost/followers",
      "following_url": "https://api.github.com/users/ghost/following{/other_user}",
      "gists_url": "https://api.github.com/users/ghost/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ghost/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ghost/subscriptions",
      "organizations_url": "https://api.github.com/users/ghost/orgs",
      "repos_url": "https://api.github.com/users/ghost/repos",
      "events_url": "https://api.github.com/users/ghost/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ghost/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 64585,
        "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Bug",
        "name": "Bug",
        "color": "FBBAAB",
        "default": false
      },
      {
        "id": 149424,
        "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Wallet",
        "name": "Wallet",
        "color": "08a781",
        "default": false
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 9,
    "created_at": "2014-03-19T17:48:49Z",
    "updated_at": "2014-05-09T08:14:16Z",
    "closed_at": "2014-05-09T08:14:16Z",
    "author_association": "NONE",
    "body": "bitcoind version: v0.9.0rc2-82-g98f4c6c-beta\n\ni haven't been able to run `bitcoind getbalance` on recent git versions. every time i try to, it results in 100% cpu and i have to kill and restart the daemon eventually. i've let it run for up to 10 minutes that way, but i can't afford to let it lock up my system for any longer than that to see how long it might take to finish, if it ever will. i'm wondering if this is related to #3661. i know my wallet has at least one double spend in it, because i've seen this message in my debug log: `ERROR: AcceptToMemoryPool : inputs already spent`.\n"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/3869",
    "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
    "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/3869/labels{/name}",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/3869/comments",
    "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/3869/events",
    "html_url": "https://github.com/bitcoin/bitcoin/issues/3869",
    "id": 29413570,
    "number": 3869,
    "title": "can't clear the 'amount' field on the 'receive' tab",
    "user": {
      "login": "dooglus",
      "id": 573356,
      "avatar_url": "https://avatars3.githubusercontent.com/u/573356?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dooglus",
      "html_url": "https://github.com/dooglus",
      "followers_url": "https://api.github.com/users/dooglus/followers",
      "following_url": "https://api.github.com/users/dooglus/following{/other_user}",
      "gists_url": "https://api.github.com/users/dooglus/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dooglus/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dooglus/subscriptions",
      "organizations_url": "https://api.github.com/users/dooglus/orgs",
      "repos_url": "https://api.github.com/users/dooglus/repos",
      "events_url": "https://api.github.com/users/dooglus/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dooglus/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 64585,
        "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Bug",
        "name": "Bug",
        "color": "FBBAAB",
        "default": false
      },
      {
        "id": 135946,
        "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/GUI",
        "name": "GUI",
        "color": "02d7e1",
        "default": false
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 2,
    "created_at": "2014-03-14T06:31:41Z",
    "updated_at": "2014-08-07T19:16:08Z",
    "closed_at": "2014-08-07T19:16:08Z",
    "author_association": "CONTRIBUTOR",
    "body": "On the 'receive' tab, if I hit tab to go to the 'amount' field, enter a number, hit tab to go to the 'message' field, then shift-tab back to the 'amount' field, the amount is selected.  If I hit backspace, the amount is deleted.  If I then hit tab again, the number I previously entered reappears in the 'amount' field.\n\nIt says at the top that all fields are optional, but once I've specified an amount I don't see a way of changing my mind and leaving it blank.\n"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/3858",
    "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
    "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/3858/labels{/name}",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/3858/comments",
    "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/3858/events",
    "html_url": "https://github.com/bitcoin/bitcoin/issues/3858",
    "id": 29312255,
    "number": 3858,
    "title": "A transaction paying to a key in the wallet gets conflicted (orphaned, but marked as -1) after a restart, if it's part of a chain of unconfirmed transactions",
    "user": {
      "login": "rdponticelli",
      "id": 1192483,
      "avatar_url": "https://avatars1.githubusercontent.com/u/1192483?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rdponticelli",
      "html_url": "https://github.com/rdponticelli",
      "followers_url": "https://api.github.com/users/rdponticelli/followers",
      "following_url": "https://api.github.com/users/rdponticelli/following{/other_user}",
      "gists_url": "https://api.github.com/users/rdponticelli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rdponticelli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rdponticelli/subscriptions",
      "organizations_url": "https://api.github.com/users/rdponticelli/orgs",
      "repos_url": "https://api.github.com/users/rdponticelli/repos",
      "events_url": "https://api.github.com/users/rdponticelli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rdponticelli/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 64585,
        "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Bug",
        "name": "Bug",
        "color": "FBBAAB",
        "default": false
      },
      {
        "id": 149424,
        "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Wallet",
        "name": "Wallet",
        "color": "08a781",
        "default": false
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 7,
    "created_at": "2014-03-12T23:03:34Z",
    "updated_at": "2014-09-25T10:25:25Z",
    "closed_at": "2014-09-25T10:25:25Z",
    "author_association": "CONTRIBUTOR",
    "body": "Probably it would be a desired behavior to save all the ancestors on the wallet on shutdown, or at least asking for them to other peers on launch.\n"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/3778",
    "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
    "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/3778/labels{/name}",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/3778/comments",
    "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/3778/events",
    "html_url": "https://github.com/bitcoin/bitcoin/issues/3778",
    "id": 28580114,
    "number": 3778,
    "title": "0.9.0rc2 crashes at startup on OS X 10.9.2",
    "user": {
      "login": "FelixWeis",
      "id": 551068,
      "avatar_url": "https://avatars2.githubusercontent.com/u/551068?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/FelixWeis",
      "html_url": "https://github.com/FelixWeis",
      "followers_url": "https://api.github.com/users/FelixWeis/followers",
      "following_url": "https://api.github.com/users/FelixWeis/following{/other_user}",
      "gists_url": "https://api.github.com/users/FelixWeis/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/FelixWeis/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/FelixWeis/subscriptions",
      "organizations_url": "https://api.github.com/users/FelixWeis/orgs",
      "repos_url": "https://api.github.com/users/FelixWeis/repos",
      "events_url": "https://api.github.com/users/FelixWeis/events{/privacy}",
      "received_events_url": "https://api.github.com/users/FelixWeis/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 64585,
        "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Bug",
        "name": "Bug",
        "color": "FBBAAB",
        "default": false
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": {
      "login": "laanwj",
      "id": 126646,
      "avatar_url": "https://avatars0.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "assignees": [
      {
        "login": "laanwj",
        "id": 126646,
        "avatar_url": "https://avatars0.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
        "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "milestone": null,
    "comments": 10,
    "created_at": "2014-03-02T14:06:40Z",
    "updated_at": "2014-03-14T03:06:03Z",
    "closed_at": "2014-03-14T01:01:10Z",
    "author_association": "CONTRIBUTOR",
    "body": "here's a crash report:\n\n```\nProcess:         Bitcoin-Qt [12597]\nPath:            /Applications/Bitcoin-Qt.app/Contents/MacOS/Bitcoin-Qt\nIdentifier:      org.bitcoinfoundation.Bitcoin-Qt\nVersion:         0.9 (0.9)\nCode Type:       X86-64 (Native)\nParent Process:  launchd [244]\nResponsible:     Bitcoin-Qt [12597]\nUser ID:         501\n\nDate/Time:       2014-03-02 14:58:20.761 +0100\nOS Version:      Mac OS X 10.9.2 (13C64)\nReport Version:  11\n\nCrashed Thread:  0  Dispatch queue: com.apple.main-thread\n\nException Type:  EXC_BAD_ACCESS (SIGSEGV)\nException Codes: KERN_PROTECTION_FAILURE at 0x00007fff549a1eb0\n\nVM Regions Near 0x7fff549a1eb0:\n    MALLOC_SMALL           00007f9b62800000-00007f9b64800000 [ 32.0M] rw-/rwx SM=PRV  \n--> STACK GUARD            00007fff511a2000-00007fff549a2000 [ 56.0M] ---/rwx SM=NUL  stack guard for thread 0\n    Stack                  00007fff549a2000-00007fff551a2000 [ 8192K] rw-/rwx SM=COW  thread 0\n\nThread 0 Crashed:: Dispatch queue: com.apple.main-thread\n0   com.apple.CoreText              0x00007fff80c2c6a0 TBaseFont::PageForGlyph(unsigned short) const + 26\n1   com.apple.CoreText              0x00007fff80c2c5bf TBaseFont::GetUnscaledAdvances(unsigned short const*, CGSize*, long) const + 117\n2   com.apple.CoreText              0x00007fff80c2c51d GetUnscaledAdvances(TFont const&, unsigned short const*, CGSize*, long, CTFontOrientation) + 253\n3   com.apple.CoreText              0x00007fff80c53b4a TFont::GetAdvancesForGlyphs(unsigned short const*, CGSize*, long, CTFontOrientation) const + 72\n4   com.apple.CoreText              0x00007fff80c88846 CTFontGetAdvancesForGlyphs + 272\n5   libqcocoa.dylib                 0x000000010e20db13 0x10e1c2000 + 310035\n6   QtGui                           0x000000010bc581ee QFontEngineMulti::stringToCMap(QChar const*, int, QGlyphLayout*, int*, QFlags<QFontEngine::ShaperFlag>) const + 78\n7   QtGui                           0x000000010bc61454 QFontMetrics::width(QChar) const + 276\n8   QtGui                           0x000000010bc6cbdd 0x10bba9000 + 801757\n9   QtGui                           0x000000010bc6588d 0x10bba9000 + 772237\n10  QtGui                           0x000000010bc64bd9 QFontDatabase::findFont(int, QFontPrivate const*, QFontDef const&, bool) + 345\n11  QtGui                           0x000000010bd05437 QFontEngineMultiQPA::loadEngine(int) + 103\n12  QtGui                           0x000000010bc5844c QFontEngineMulti::stringToCMap(QChar const*, int, QGlyphLayout*, int*, QFlags<QFontEngine::ShaperFlag>) const + 684\n13  QtGui                           0x000000010bc61454 QFontMetrics::width(QChar) const + 276\n14  QtGui                           0x000000010bc6cbdd 0x10bba9000 + 801757\n15  QtGui                           0x000000010bc6588d 0x10bba9000 + 772237\n16  QtGui                           0x000000010bc64bd9 QFontDatabase::findFont(int, QFontPrivate const*, QFontDef const&, bool) + 345\n17  QtGui                           0x000000010bd05437 QFontEngineMultiQPA::loadEngine(int) + 103\n18  QtGui                           0x000000010bc5844c QFontEngineMulti::stringToCMap(QChar const*, int, QGlyphLayout*, int*, QFlags<QFontEngine::ShaperFlag>) const + 684\n19  QtGui                           0x000000010bc61454 QFontMetrics::width(QChar) const + 276\n20  QtGui                           0x000000010bc6cbdd 0x10bba9000 + 801757\n21  QtGui                           0x000000010bc6588d 0x10bba9000 + 772237\n22  QtGui                           0x000000010bc64bd9 QFontDatabase::findFont(int, QFontPrivate const*, QFontDef const&, bool) + 345\n23  QtGui                           0x000000010bd05437 QFontEngineMultiQPA::loadEngine(int) + 103\n24  QtGui                           0x000000010bc5844c QFontEngineMulti::stringToCMap(QChar const*, int, QGlyphLayout*, int*, QFlags<QFontEngine::ShaperFlag>) const + 684\n25  QtGui                           0x000000010bc61454 QFontMetrics::width(QChar) const + 276\n26  QtGui                           0x000000010bc6cbdd 0x10bba9000 + 801757\n27  QtGui                           0x000000010bc6588d 0x10bba9000 + 772237\n28  QtGui                           0x000000010bc64bd9 QFontDatabase::findFont(int, QFontPrivate const*, QFontDef const&, bool) + 345\n29  QtGui                           0x000000010bd05437 QFontEngineMultiQPA::loadEngine(int) + 103\n30  QtGui                           0x000000010bc5844c QFontEngineMulti::stringToCMap(QChar const*, int, QGlyphLayout*, int*, QFlags<QFontEngine::ShaperFlag>) const + 684\n31  QtGui                           0x000000010bc61454 QFontMetrics::width(QChar) const + 276\n32  QtGui                           0x000000010bc6cbdd 0x10bba9000 + 801757\n33  QtGui                           0x000000010bc6588d 0x10bba9000 + 772237\n34  QtGui                           0x000000010bc64bd9 QFontDatabase::findFont(int, QFontPrivate const*, QFontDef const&, bool) + 345\n35  QtGui                           0x000000010bd05437 QFontEngineMultiQPA::loadEngine(int) + 103\n36  QtGui                           0x000000010bc5844c QFontEngineMulti::stringToCMap(QChar const*, int, QGlyphLayout*, int*, QFlags<QFontEngine::ShaperFlag>) const + 684\n37  QtGui                           0x000000010bc61454 QFontMetrics::width(QChar) const + 276\n38  QtGui                           0x000000010bc6cbdd 0x10bba9000 + 801757\n39  QtGui                           0x000000010bc6588d 0x10bba9000 + 772237\n40  QtGui                           0x000000010bc64bd9 QFontDatabase::findFont(int, QFontPrivate const*, QFontDef const&, bool) + 345\n41  QtGui                           0x000000010bd05437 QFontEngineMultiQPA::loadEngine(int) + 103\n42  QtGui                           0x000000010bc5844c QFontEngineMulti::stringToCMap(QChar const*, int, QGlyphLayout*, int*, QFlags<QFontEngine::ShaperFlag>) const + 684\n43  QtGui                           0x000000010bc61454 QFontMetrics::width(QChar) const + 276\n44  QtGui                           0x000000010bc6cbdd 0x10bba9000 + 801757\n45  QtGui                           0x000000010bc6588d 0x10bba9000 + 772237\n46  QtGui                           0x000000010bc64bd9 QFontDatabase::findFont(int, QFontPrivate const*, QFontDef const&, bool) + 345\n47  QtGui                           0x000000010bd05437 QFontEngineMultiQPA::loadEngine(int) + 103\n48  QtGui                           0x000000010bc5844c QFontEngineMulti::stringToCMap(QChar const*, int, QGlyphLayout*, int*, QFlags<QFontEngine::ShaperFlag>) const + 684\n49  QtGui                           0x000000010bc61454 QFontMetrics::width(QChar) const + 276\n50  QtGui                           0x000000010bc6cbdd 0x10bba9000 + 801757\n51  QtGui                           0x000000010bc6588d 0x10bba9000 + 772237\n52  QtGui                           0x000000010bc64bd9 QFontDatabase::findFont(int, QFontPrivate const*, QFontDef const&, bool) + 345\n53  QtGui                           0x000000010bd05437 QFontEngineMultiQPA::loadEngine(int) + 103\n54  QtGui                           0x000000010bc5844c QFontEngineMulti::stringToCMap(QChar const*, int, QGlyphLayout*, int*, QFlags<QFontEngine::ShaperFlag>) const + 684\n55  QtGui                           0x000000010bc61454 QFontMetrics::width(QChar) const + 276\n56  QtGui                           0x000000010bc6cbdd 0x10bba9000 + 801757\n57  QtGui                           0x000000010bc6588d 0x10bba9000 + 772237\n58  QtGui                           0x000000010bc64bd9 QFontDatabase::findFont(int, QFontPrivate const*, QFontDef const&, bool) + 345\n59  QtGui                           0x000000010bd05437 QFontEngineMultiQPA::loadEngine(int) + 103\n60  QtGui                           0x000000010bc5844c QFontEngineMulti::stringToCMap(QChar const*, int, QGlyphLayout*, int*, QFlags<QFontEngine::ShaperFlag>) const + 684\n61  QtGui                           0x000000010bc61454 QFontMetrics::width(QChar) const + 276\n62  QtGui                           0x000000010bc6cbdd 0x10bba9000 + 801757\n63  QtGui                           0x000000010bc6588d 0x10bba9000 + 772237\n64  QtGui                           0x000000010bc64bd9 QFontDatabase::findFont(int, QFontPrivate const*, QFontDef const&, bool) + 345\n65  QtGui                           0x000000010bd05437 QFontEngineMultiQPA::loadEngine(int) + 103\n66  QtGui                           0x000000010bc5844c QFontEngineMulti::stringToCMap(QChar const*, int, QGlyphLayout*, int*, QFlags<QFontEngine::ShaperFlag>) const + 684\n67  QtGui                           0x000000010bc61454 QFontMetrics::width(QChar) const + 276\n68  QtGui                           0x000000010bc6cbdd 0x10bba9000 + 801757\n69  QtGui                           0x000000010bc6588d 0x10bba9000 + 772237\n70  QtGui                           0x000000010bc64bd9 QFontDatabase::findFont(int, QFontPrivate const*, QFontDef const&, bool) + 345\n71  QtGui                           0x000000010bd05437 QFontEngineMultiQPA::loadEngine(int) + 103\n72  QtGui                           0x000000010bc5844c QFontEngineMulti::stringToCMap(QChar const*, int, QGlyphLayout*, int*, QFlags<QFontEngine::ShaperFlag>) const + 684\n73  QtGui                           0x000000010bc61454 QFontMetrics::width(QChar) const + 276\n74  QtGui                           0x000000010bc6cbdd 0x10bba9000 + 801757\n75  QtGui                           0x000000010bc6588d 0x10bba9000 + 772237\n76  QtGui                           0x000000010bc64bd9 QFontDatabase::findFont(int, QFontPrivate const*, QFontDef const&, bool) + 345\n77  QtGui                           0x000000010bd05437 QFontEngineMultiQPA::loadEngine(int) + 103\n78  QtGui                           0x000000010bc5844c QFontEngineMulti::stringToCMap(QChar const*, int, QGlyphLayout*, int*, QFlags<QFontEngine::ShaperFlag>) const + 684\n79  QtGui                           0x000000010bc61454 QFontMetrics::width(QChar) const + 276\n80  QtGui                           0x000000010bc6cbdd 0x10bba9000 + 801757\n81  QtGui                           0x000000010bc6588d 0x10bba9000 + 772237\n82  QtGui                           0x000000010bc64bd9 QFontDatabase::findFont(int, QFontPrivate const*, QFontDef const&, bool) + 345\n83  QtGui                           0x000000010bd05437 QFontEngineMultiQPA::loadEngine(int) + 103\n84  QtGui                           0x000000010bc5844c QFontEngineMulti::stringToCMap(QChar const*, int, QGlyphLayout*, int*, QFlags<QFontEngine::ShaperFlag>) const + 684\n85  QtGui                           0x000000010bc61454 QFontMetrics::width(QChar) const + 276\n86  QtGui                           0x000000010bc6cbdd 0x10bba9000 + 801757\n87  QtGui                           0x000000010bc6588d 0x10bba9000 + 772237\n88  QtGui                           0x000000010bc64bd9 QFontDatabase::findFont(int, QFontPrivate const*, QFontDef const&, bool) + 345\n89  QtGui                           0x000000010bd05437 QFontEngineMultiQPA::loadEngine(int) + 103\n90  QtGui                           0x000000010bc5844c QFontEngineMulti::stringToCMap(QChar const*, int, QGlyphLayout*, int*, QFlags<QFontEngine::ShaperFlag>) const + 684\n91  QtGui                           0x000000010bc61454 QFontMetrics::width(QChar) const + 276\n92  QtGui                           0x000000010bc6cbdd 0x10bba9000 + 801757\n93  QtGui                           0x000000010bc6588d 0x10bba9000 + 772237\n94  QtGui                           0x000000010bc64bd9 QFontDatabase::findFont(int, QFontPrivate const*, QFontDef const&, bool) + 345\n95  QtGui                           0x000000010bd05437 QFontEngineMultiQPA::loadEngine(int) + 103\n96  QtGui                           0x000000010bc5844c QFontEngineMulti::stringToCMap(QChar const*, int, QGlyphLayout*, int*, QFlags<QFontEngine::ShaperFlag>) const + 684\n97  QtGui                           0x000000010bc61454 QFontMetrics::width(QChar) const + 276\n98  QtGui                           0x000000010bc6cbdd 0x10bba9000 + 801757\n99  QtGui                           0x000000010bc6588d 0x10bba9000 + 772237\n100 QtGui                           0x000000010bc64bd9 QFontDatabase::findFont(int, QFontPrivate const*, QFontDef const&, bool) + 345\n101 QtGui                           0x000000010bd05437 QFontEngineMultiQPA::loadEngine(int) + 103\n102 QtGui                           0x000000010bc5844c QFontEngineMulti::stringToCMap(QChar const*, int, QGlyphLayout*, int*, QFlags<QFontEngine::ShaperFlag>) const + 684\n103 QtGui                           0x000000010bc61454 QFontMetrics::width(QChar) const + 276\n104 QtGui                           0x000000010bc6cbdd 0x10bba9000 + 801757\n105 QtGui                           0x000000010bc6588d 0x10bba9000 + 772237\n106 QtGui                           0x000000010bc64bd9 QFontDatabase::findFont(int, QFontPrivate const*, QFontDef const&, bool) + 345\n107 QtGui                           0x000000010bd05437 QFontEngineMultiQPA::loadEngine(int) + 103\n108 QtGui                           0x000000010bc5844c QFontEngineMulti::stringToCMap(QChar const*, int, QGlyphLayout*, int*, QFlags<QFontEngine::ShaperFlag>) const + 684\n109 QtGui                           0x000000010bc61454 QFontMetrics::width(QChar) const + 276\n110 QtGui                           0x000000010bc6cbdd 0x10bba9000 + 801757\n111 QtGui                           0x000000010bc6588d 0x10bba9000 + 772237\n112 QtGui                           0x000000010bc64bd9 QFontDatabase::findFont(int, QFontPrivate const*, QFontDef const&, bool) + 345\n113 QtGui                           0x000000010bd05437 QFontEngineMultiQPA::loadEngine(int) + 103\n114 QtGui                           0x000000010bc5844c QFontEngineMulti::stringToCMap(QChar const*, int, QGlyphLayout*, int*, QFlags<QFontEngine::ShaperFlag>) const + 684\n115 QtGui                           0x000000010bc61454 QFontMetrics::width(QChar) const + 276\n116 QtGui                           0x000000010bc6cbdd 0x10bba9000 + 801757\n117 QtGui                           0x000000010bc6588d 0x10bba9000 + 772237\n118 QtGui                           0x000000010bc64bd9 QFontDatabase::findFont(int, QFontPrivate const*, QFontDef const&, bool) + 345\n119 QtGui                           0x000000010bd05437 QFontEngineMultiQPA::loadEngine(int) + 103\n120 QtGui                           0x000000010bc5844c QFontEngineMulti::stringToCMap(QChar const*, int, QGlyphLayout*, int*, QFlags<QFontEngine::ShaperFlag>) const + 684\n121 QtGui                           0x000000010bc61454 QFontMetrics::width(QChar) const + 276\n122 QtGui                           0x000000010bc6cbdd 0x10bba9000 + 801757\n123 QtGui                           0x000000010bc6588d 0x10bba9000 + 772237\n124 QtGui                           0x000000010bc64bd9 QFontDatabase::findFont(int, QFontPrivate const*, QFontDef const&, bool) + 345\n125 QtGui                           0x000000010bd05437 QFontEngineMultiQPA::loadEngine(int) + 103\n126 QtGui                           0x000000010bc5844c QFontEngineMulti::stringToCMap(QChar const*, int, QGlyphLayout*, int*, QFlags<QFontEngine::ShaperFlag>) const + 684\n127 QtGui                           0x000000010bc61454 QFontMetrics::width(QChar) const + 276\n128 QtGui                           0x000000010bc6cbdd 0x10bba9000 + 801757\n129 QtGui                           0x000000010bc6588d 0x10bba9000 + 772237\n130 QtGui                           0x000000010bc64bd9 QFontDatabase::findFont(int, QFontPrivate const*, QFontDef const&, bool) + 345\n131 QtGui                           0x000000010bd05437 QFontEngineMultiQPA::loadEngine(int) + 103\n132 QtGui                           0x000000010bc5844c QFontEngineMulti::stringToCMap(QChar const*, int, QGlyphLayout*, int*, QFlags<QFontEngine::ShaperFlag>) const + 684\n133 QtGui                           0x000000010bc61454 QFontMetrics::width(QChar) const + 276\n134 QtGui                           0x000000010bc6cbdd 0x10bba9000 + 801757\n135 QtGui                           0x000000010bc6588d 0x10bba9000 + 772237\n136 QtGui                           0x000000010bc64bd9 QFontDatabase::findFont(int, QFontPrivate const*, QFontDef const&, bool) + 345\n137 QtGui                           0x000000010bd05437 QFontEngineMultiQPA::loadEngine(int) + 103\n138 QtGui                           0x000000010bc5844c QFontEngineMulti::stringToCMap(QChar const*, int, QGlyphLayout*, int*, QFlags<QFontEngine::ShaperFlag>) const + 684\n139 QtGui                           0x000000010bc61454 QFontMetrics::width(QChar) const + 276\n140 QtGui                           0x000000010bc6cbdd 0x10bba9000 + 801757\n141 QtGui                           0x000000010bc6588d 0x10bba9000 + 772237\n142 QtGui                           0x000000010bc64bd9 QFontDatabase::findFont(int, QFontPrivate const*, QFontDef const&, bool) + 345\n143 QtGui                           0x000000010bd05437 QFontEngineMultiQPA::loadEngine(int) + 103\n144 QtGui                           0x000000010bc5844c QFontEngineMulti::stringToCMap(QChar const*, int, QGlyphLayout*, int*, QFlags<QFontEngine::ShaperFlag>) const + 684\n145 QtGui                           0x000000010bc61454 QFontMetrics::width(QChar) const + 276\n146 QtGui                           0x000000010bc6cbdd 0x10bba9000 + 801757\n147 QtGui                           0x000000010bc6588d 0x10bba9000 + 772237\n148 QtGui                           0x000000010bc64bd9 QFontDatabase::findFont(int, QFontPrivate const*, QFontDef const&, bool) + 345\n149 QtGui                           0x000000010bd05437 QFontEngineMultiQPA::loadEngine(int) + 103\n150 QtGui                           0x000000010bc5844c QFontEngineMulti::stringToCMap(QChar const*, int, QGlyphLayout*, int*, QFlags<QFontEngine::ShaperFlag>) const + 684\n151 QtGui                           0x000000010bc61454 QFontMetrics::width(QChar) const + 276\n152 QtGui                           0x000000010bc6cbdd 0x10bba9000 + 801757\n153 QtGui                           0x000000010bc6588d 0x10bba9000 + 772237\n154 QtGui                           0x000000010bc64bd9 QFontDatabase::findFont(int, QFontPrivate const*, QFontDef const&, bool) + 345\n155 QtGui                           0x000000010bd05437 QFontEngineMultiQPA::loadEngine(int) + 103\n156 QtGui                           0x000000010bc5844c QFontEngineMulti::stringToCMap(QChar const*, int, QGlyphLayout*, int*, QFlags<QFontEngine::ShaperFlag>) const + 684\n157 QtGui                           0x000000010bc61454 QFontMetrics::width(QChar) const + 276\n158 QtGui                           0x000000010bc6cbdd 0x10bba9000 + 801757\n159 QtGui                           0x000000010bc6588d 0x10bba9000 + 772237\n160 QtGui                           0x000000010bc64bd9 QFontDatabase::findFont(int, QFontPrivate const*, QFontDef const&, bool) + 345\n161 QtGui                           0x000000010bd05437 QFontEngineMultiQPA::loadEngine(int) + 103\n162 QtGui                           0x000000010bc5844c QFontEngineMulti::stringToCMap(QChar const*, int, QGlyphLayout*, int*, QFlags<QFontEngine::ShaperFlag>) const + 684\n163 QtGui                           0x000000010bc61454 QFontMetrics::width(QChar) const + 276\n164 QtGui                           0x000000010bc6cbdd 0x10bba9000 + 801757\n165 QtGui                           0x000000010bc6588d 0x10bba9000 + 772237\n166 QtGui                           0x000000010bc64bd9 QFontDatabase::findFont(int, QFontPrivate const*, QFontDef const&, bool) + 345\n167 QtGui                           0x000000010bd05437 QFontEngineMultiQPA::loadEngine(int) + 103\n168 QtGui                           0x000000010bc5844c QFontEngineMulti::stringToCMap(QChar const*, int, QGlyphLayout*, int*, QFlags<QFontEngine::ShaperFlag>) const + 684\n169 QtGui                           0x000000010bc61454 QFontMetrics::width(QChar) const + 276\n170 QtGui                           0x000000010bc6cbdd 0x10bba9000 + 801757\n171 QtGui                           0x000000010bc6588d 0x10bba9000 + 772237\n172 QtGui                           0x000000010bc64bd9 QFontDatabase::findFont(int, QFontPrivate const*, QFontDef const&, bool) + 345\n173 QtGui                           0x000000010bd05437 QFontEngineMultiQPA::loadEngine(int) + 103\n174 QtGui                           0x000000010bc5844c QFontEngineMulti::stringToCMap(QChar const*, int, QGlyphLayout*, int*, QFlags<QFontEngine::ShaperFlag>) const + 684\n175 QtGui                           0x000000010bc61454 QFontMetrics::width(QChar) const + 276\n176 QtGui                           0x000000010bc6cbdd 0x10bba9000 + 801757\n177 QtGui                           0x000000010bc6588d 0x10bba9000 + 772237\n178 QtGui                           0x000000010bc64bd9 QFontDatabase::findFont(int, QFontPrivate const*, QFontDef const&, bool) + 345\n179 QtGui                           0x000000010bd05437 QFontEngineMultiQPA::loadEngine(int) + 103\n180 QtGui                           0x000000010bc5844c QFontEngineMulti::stringToCMap(QChar const*, int, QGlyphLayout*, int*, QFlags<QFontEngine::ShaperFlag>) const + 684\n181 QtGui                           0x000000010bc61454 QFontMetrics::width(QChar) const + 276\n182 QtGui                           0x000000010bc6cbdd 0x10bba9000 + 801757\n183 QtGui                           0x000000010bc6588d 0x10bba9000 + 772237\n184 QtGui                           0x000000010bc64bd9 QFontDatabase::findFont(int, QFontPrivate const*, QFontDef const&, bool) + 345\n185 QtGui                           0x000000010bd05437 QFontEngineMultiQPA::loadEngine(int) + 103\n186 QtGui                           0x000000010bc5844c QFontEngineMulti::stringToCMap(QChar const*, int, QGlyphLayout*, int*, QFlags<QFontEngine::ShaperFlag>) const + 684\n187 QtGui                           0x000000010bc61454 QFontMetrics::width(QChar) const + 276\n188 QtGui                           0x000000010bc6cbdd 0x10bba9000 + 801757\n189 QtGui                           0x000000010bc6588d 0x10bba9000 + 772237\n190 QtGui                           0x000000010bc64bd9 QFontDatabase::findFont(int, QFontPrivate const*, QFontDef const&, bool) + 345\n191 QtGui                           0x000000010bd05437 QFontEngineMultiQPA::loadEngine(int) + 103\n192 QtGui                           0x000000010bc5844c QFontEngineMulti::stringToCMap(QChar const*, int, QGlyphLayout*, int*, QFlags<QFontEngine::ShaperFlag>) const + 684\n193 QtGui                           0x000000010bc61454 QFontMetrics::width(QChar) const + 276\n194 QtGui                           0x000000010bc6cbdd 0x10bba9000 + 801757\n195 QtGui                           0x000000010bc6588d 0x10bba9000 + 772237\n196 QtGui                           0x000000010bc64bd9 QFontDatabase::findFont(int, QFontPrivate const*, QFontDef const&, bool) + 345\n197 QtGui                           0x000000010bd05437 QFontEngineMultiQPA::loadEngine(int) + 103\n198 QtGui                           0x000000010bc5844c QFontEngineMulti::stringToCMap(QChar const*, int, QGlyphLayout*, int*, QFlags<QFontEngine::ShaperFlag>) const + 684\n199 QtGui                           0x000000010bc61454 QFontMetrics::width(QChar) const + 276\n200 QtGui                           0x000000010bc6cbdd 0x10bba9000 + 801757\n201 QtGui                           0x000000010bc6588d 0x10bba9000 + 772237\n202 QtGui                           0x000000010bc64bd9 QFontDatabase::findFont(int, QFontPrivate const*, QFontDef const&, bool) + 345\n203 QtGui                           0x000000010bd05437 QFontEngineMultiQPA::loadEngine(int) + 103\n204 QtGui                           0x000000010bc5844c QFontEngineMulti::stringToCMap(QChar const*, int, QGlyphLayout*, int*, QFlags<QFontEngine::ShaperFlag>) const + 684\n205 QtGui                           0x000000010bc61454 QFontMetrics::width(QChar) const + 276\n206 QtGui                           0x000000010bc6cbdd 0x10bba9000 + 801757\n207 QtGui                           0x000000010bc6588d 0x10bba9000 + 772237\n208 QtGui                           0x000000010bc64bd9 QFontDatabase::findFont(int, QFontPrivate const*, QFontDef const&, bool) + 345\n209 QtGui                           0x000000010bd05437 QFontEngineMultiQPA::loadEngine(int) + 103\n210 QtGui                           0x000000010bc5844c QFontEngineMulti::stringToCMap(QChar const*, int, QGlyphLayout*, int*, QFlags<QFontEngine::ShaperFlag>) const + 684\n211 QtGui                           0x000000010bc61454 QFontMetrics::width(QChar) const + 276\n212 QtGui                           0x000000010bc6cbdd 0x10bba9000 + 801757\n213 QtGui                           0x000000010bc6588d 0x10bba9000 + 772237\n214 QtGui                           0x000000010bc64bd9 QFontDatabase::findFont(int, QFontPrivate const*, QFontDef const&, bool) + 345\n215 QtGui                           0x000000010bd05437 QFontEngineMultiQPA::loadEngine(int) + 103\n216 QtGui                           0x000000010bc5844c QFontEngineMulti::stringToCMap(QChar const*, int, QGlyphLayout*, int*, QFlags<QFontEngine::ShaperFlag>) const + 684\n217 QtGui                           0x000000010bc61454 QFontMetrics::width(QChar) const + 276\n218 QtGui                           0x000000010bc6cbdd 0x10bba9000 + 801757\n219 QtGui                           0x000000010bc6588d 0x10bba9000 + 772237\n220 QtGui                           0x000000010bc64bd9 QFontDatabase::findFont(int, QFontPrivate const*, QFontDef const&, bool) + 345\n221 QtGui                           0x000000010bd05437 QFontEngineMultiQPA::loadEngine(int) + 103\n222 QtGui                           0x000000010bc5844c QFontEngineMulti::stringToCMap(QChar const*, int, QGlyphLayout*, int*, QFlags<QFontEngine::ShaperFlag>) const + 684\n223 QtGui                           0x000000010bc61454 QFontMetrics::width(QChar) const + 276\n224 QtGui                           0x000000010bc6cbdd 0x10bba9000 + 801757\n225 QtGui                           0x000000010bc6588d 0x10bba9000 + 772237\n226 QtGui                           0x000000010bc64bd9 QFontDatabase::findFont(int, QFontPrivate const*, QFontDef const&, bool) + 345\n227 QtGui                           0x000000010bd05437 QFontEngineMultiQPA::loadEngine(int) + 103\n228 QtGui                           0x000000010bc5844c QFontEngineMulti::stringToCMap(QChar const*, int, QGlyphLayout*, int*, QFlags<QFontEngine::ShaperFlag>) const + 684\n229 QtGui                           0x000000010bc61454 QFontMetrics::width(QChar) const + 276\n230 QtGui                           0x000000010bc6cbdd 0x10bba9000 + 801757\n231 QtGui                           0x000000010bc6588d 0x10bba9000 + 772237\n232 QtGui                           0x000000010bc64bd9 QFontDatabase::findFont(int, QFontPrivate const*, QFontDef const&, bool) + 345\n233 QtGui                           0x000000010bd05437 QFontEngineMultiQPA::loadEngine(int) + 103\n234 QtGui                           0x000000010bc5844c QFontEngineMulti::stringToCMap(QChar const*, int, QGlyphLayout*, int*, QFlags<QFontEngine::ShaperFlag>) const + 684\n235 QtGui                           0x000000010bc61454 QFontMetrics::width(QChar) const + 276\n236 QtGui                           0x000000010bc6cbdd 0x10bba9000 + 801757\n237 QtGui                           0x000000010bc6588d 0x10bba9000 + 772237\n238 QtGui                           0x000000010bc64bd9 QFontDatabase::findFont(int, QFontPrivate const*, QFontDef const&, bool) + 345\n239 QtGui                           0x000000010bd05437 QFontEngineMultiQPA::loadEngine(int) + 103\n240 QtGui                           0x000000010bc5844c QFontEngineMulti::stringToCMap(QChar const*, int, QGlyphLayout*, int*, QFlags<QFontEngine::ShaperFlag>) const + 684\n241 QtGui                           0x000000010bc61454 QFontMetrics::width(QChar) const + 276\n242 QtGui                           0x000000010bc6cbdd 0x10bba9000 + 801757\n243 QtGui                           0x000000010bc6588d 0x10bba9000 + 772237\n244 QtGui                           0x000000010bc64bd9 QFontDatabase::findFont(int, QFontPrivate const*, QFontDef const&, bool) + 345\n245 QtGui                           0x000000010bd05437 QFontEngineMultiQPA::loadEngine(int) + 103\n246 QtGui                           0x000000010bc5844c QFontEngineMulti::stringToCMap(QChar const*, int, QGlyphLayout*, int*, QFlags<QFontEngine::ShaperFlag>) const + 684\n247 QtGui                           0x000000010bc61454 QFontMetrics::width(QChar) const + 276\n248 QtGui                           0x000000010bc6cbdd 0x10bba9000 + 801757\n249 QtGui                           0x000000010bc6588d 0x10bba9000 + 772237\n250 QtGui                           0x000000010bc64bd9 QFontDatabase::findFont(int, QFontPrivate const*, QFontDef const&, bool) + 345\n251 QtGui                           0x000000010bd05437 QFontEngineMultiQPA::loadEngine(int) + 103\n252 QtGui                           0x000000010bc5844c QFontEngineMulti::stringToCMap(QChar const*, int, QGlyphLayout*, int*, QFlags<QFontEngine::ShaperFlag>) const + 684\n253 QtGui                           0x000000010bc61454 QFontMetrics::width(QChar) const + 276\n254 QtGui                           0x000000010bc6cbdd 0x10bba9000 + 801757\n255 QtGui                           0x000000010bc6588d 0x10bba9000 + 772237\n256 QtGui                           0x000000010bc64bd9 QFontDatabase::findFont(int, QFontPrivate const*, QFontDef const&, bool) + 345\n257 QtGui                           0x000000010bd05437 QFontEngineMultiQPA::loadEngine(int) + 103\n258 QtGui                           0x000000010bc5844c QFontEngineMulti::stringToCMap(QChar const*, int, QGlyphLayout*, int*, QFlags<QFontEngine::ShaperFlag>) const + 684\n259 QtGui                           0x000000010bc61454 QFontMetrics::width(QChar) const + 276\n260 QtGui                           0x000000010bc6cbdd 0x10bba9000 + 801757\n261 QtGui                           0x000000010bc6588d 0x10bba9000 + 772237\n262 QtGui                           0x000000010bc64bd9 QFontDatabase::findFont(int, QFontPrivate const*, QFontDef const&, bool) + 345\n263 QtGui                           0x000000010bd05437 QFontEngineMultiQPA::loadEngine(int) + 103\n264 QtGui                           0x000000010bc5844c QFontEngineMulti::stringToCMap(QChar const*, int, QGlyphLayout*, int*, QFlags<QFontEngine::ShaperFlag>) const + 684\n265 QtGui                           0x000000010bc61454 QFontMetrics::width(QChar) const + 276\n266 QtGui                           0x000000010bc6cbdd 0x10bba9000 + 801757\n267 QtGui                           0x000000010bc6588d 0x10bba9000 + 772237\n268 QtGui                           0x000000010bc64bd9 QFontDatabase::findFont(int, QFontPrivate const*, QFontDef const&, bool) + 345\n269 QtGui                           0x000000010bd05437 QFontEngineMultiQPA::loadEngine(int) + 103\n270 QtGui                           0x000000010bc5844c QFontEngineMulti::stringToCMap(QChar const*, int, QGlyphLayout*, int*, QFlags<QFontEngine::ShaperFlag>) const + 684\n271 QtGui                           0x000000010bc61454 QFontMetrics::width(QChar) const + 276\n272 QtGui                           0x000000010bc6cbdd 0x10bba9000 + 801757\n273 QtGui                           0x000000010bc6588d 0x10bba9000 + 772237\n274 QtGui                           0x000000010bc64bd9 QFontDatabase::findFont(int, QFontPrivate const*, QFontDef const&, bool) + 345\n275 QtGui                           0x000000010bd05437 QFontEngineMultiQPA::loadEngine(int) + 103\n276 QtGui                           0x000000010bc5844c QFontEngineMulti::stringToCMap(QChar const*, int, QGlyphLayout*, int*, QFlags<QFontEngine::ShaperFlag>) const + 684\n277 QtGui                           0x000000010bc61454 QFontMetrics::width(QChar) const + 276\n278 QtGui                           0x000000010bc6cbdd 0x10bba9000 + 801757\n279 QtGui                           0x000000010bc6588d 0x10bba9000 + 772237\n280 QtGui                           0x000000010bc64bd9 QFontDatabase::findFont(int, QFontPrivate const*, QFontDef const&, bool) + 345\n281 QtGui                           0x000000010bd05437 QFontEngineMultiQPA::loadEngine(int) + 103\n282 QtGui                           0x000000010bc5844c QFontEngineMulti::stringToCMap(QChar const*, int, QGlyphLayout*, int*, QFlags<QFontEngine::ShaperFlag>) const + 684\n283 QtGui                           0x000000010bc61454 QFontMetrics::width(QChar) const + 276\n284 QtGui                           0x000000010bc6cbdd 0x10bba9000 + 801757\n285 QtGui                           0x000000010bc6588d 0x10bba9000 + 772237\n286 QtGui                           0x000000010bc64bd9 QFontDatabase::findFont(int, QFontPrivate const*, QFontDef const&, bool) + 345\n287 QtGui                           0x000000010bd05437 QFontEngineMultiQPA::loadEngine(int) + 103\n288 QtGui                           0x000000010bc5844c QFontEngineMulti::stringToCMap(QChar const*, int, QGlyphLayout*, int*, QFlags<QFontEngine::ShaperFlag>) const + 684\n289 QtGui                           0x000000010bc61454 QFontMetrics::width(QChar) const + 276\n290 QtGui                           0x000000010bc6cbdd 0x10bba9000 + 801757\n291 QtGui                           0x000000010bc6588d 0x10bba9000 + 772237\n292 QtGui                           0x000000010bc64bd9 QFontDatabase::findFont(int, QFontPrivate const*, QFontDef const&, bool) + 345\n293 QtGui                           0x000000010bd05437 QFontEngineMultiQPA::loadEngine(int) + 103\n294 QtGui                           0x000000010bc5844c QFontEngineMulti::stringToCMap(QChar const*, int, QGlyphLayout*, int*, QFlags<QFontEngine::ShaperFlag>) const + 684\n295 QtGui                           0x000000010bc61454 QFontMetrics::width(QChar) const + 276\n296 QtGui                           0x000000010bc6cbdd 0x10bba9000 + 801757\n297 QtGui                           0x000000010bc6588d 0x10bba9000 + 772237\n298 QtGui                           0x000000010bc64bd9 QFontDatabase::findFont(int, QFontPrivate const*, QFontDef const&, bool) + 345\n299 QtGui                           0x000000010bd05437 QFontEngineMultiQPA::loadEngine(int) + 103\n300 QtGui                           0x000000010bc5844c QFontEngineMulti::stringToCMap(QChar const*, int, QGlyphLayout*, int*, QFlags<QFontEngine::ShaperFlag>) const + 684\n301 QtGui                           0x000000010bc61454 QFontMetrics::width(QChar) const + 276\n302 QtGui                           0x000000010bc6cbdd 0x10bba9000 + 801757\n303 QtGui                           0x000000010bc6588d 0x10bba9000 + 772237\n304 QtGui                           0x000000010bc64bd9 QFontDatabase::findFont(int, QFontPrivate const*, QFontDef const&, bool) + 345\n305 QtGui                           0x000000010bd05437 QFontEngineMultiQPA::loadEngine(int) + 103\n306 QtGui                           0x000000010bc5844c QFontEngineMulti::stringToCMap(QChar const*, int, QGlyphLayout*, int*, QFlags<QFontEngine::ShaperFlag>) const + 684\n307 QtGui                           0x000000010bc61454 QFontMetrics::width(QChar) const + 276\n308 QtGui                           0x000000010bc6cbdd 0x10bba9000 + 801757\n309 QtGui                           0x000000010bc6588d 0x10bba9000 + 772237\n310 QtGui                           0x000000010bc64bd9 QFontDatabase::findFont(int, QFontPrivate const*, QFontDef const&, bool) + 345\n311 QtGui                           0x000000010bd05437 QFontEngineMultiQPA::loadEngine(int) + 103\n312 QtGui                           0x000000010bc5844c QFontEngineMulti::stringToCMap(QChar const*, int, QGlyphLayout*, int*, QFlags<QFontEngine::ShaperFlag>) const + 684\n313 QtGui                           0x000000010bc61454 QFontMetrics::width(QChar) const + 276\n314 QtGui                           0x000000010bc6cbdd 0x10bba9000 + 801757\n315 QtGui                           0x000000010bc6588d 0x10bba9000 + 772237\n316 QtGui                           0x000000010bc64bd9 QFontDatabase::findFont(int, QFontPrivate const*, QFontDef const&, bool) + 345\n317 QtGui                           0x000000010bd05437 QFontEngineMultiQPA::loadEngine(int) + 103\n318 QtGui                           0x000000010bc5844c QFontEngineMulti::stringToCMap(QChar const*, int, QGlyphLayout*, int*, QFlags<QFontEngine::ShaperFlag>) const + 684\n319 QtGui                           0x000000010bc61454 QFontMetrics::width(QChar) const + 276\n320 QtGui                           0x000000010bc6cbdd 0x10bba9000 + 801757\n321 QtGui                           0x000000010bc6588d 0x10bba9000 + 772237\n322 QtGui                           0x000000010bc64bd9 QFontDatabase::findFont(int, QFontPrivate const*, QFontDef const&, bool) + 345\n323 QtGui                           0x000000010bd05437 QFontEngineMultiQPA::loadEngine(int) + 103\n324 QtGui                           0x000000010bc5844c QFontEngineMulti::stringToCMap(QChar const*, int, QGlyphLayout*, int*, QFlags<QFontEngine::ShaperFlag>) const + 684\n325 QtGui                           0x000000010bc61454 QFontMetrics::width(QChar) const + 276\n326 QtGui                           0x000000010bc6cbdd 0x10bba9000 + 801757\n327 QtGui                           0x000000010bc6588d 0x10bba9000 + 772237\n328 QtGui                           0x000000010bc64bd9 QFontDatabase::findFont(int, QFontPrivate const*, QFontDef const&, bool) + 345\n329 QtGui                           0x000000010bd05437 QFontEngineMultiQPA::loadEngine(int) + 103\n330 QtGui                           0x000000010bc5844c QFontEngineMulti::stringToCMap(QChar const*, int, QGlyphLayout*, int*, QFlags<QFontEngine::ShaperFlag>) const + 684\n331 QtGui                           0x000000010bc61454 QFontMetrics::width(QChar) const + 276\n332 QtGui                           0x000000010bc6cbdd 0x10bba9000 + 801757\n333 QtGui                           0x000000010bc6588d 0x10bba9000 + 772237\n334 QtGui                           0x000000010bc64bd9 QFontDatabase::findFont(int, QFontPrivate const*, QFontDef const&, bool) + 345\n335 QtGui                           0x000000010bd05437 QFontEngineMultiQPA::loadEngine(int) + 103\n336 QtGui                           0x000000010bc5844c QFontEngineMulti::stringToCMap(QChar const*, int, QGlyphLayout*, int*, QFlags<QFontEngine::ShaperFlag>) const + 684\n337 QtGui                           0x000000010bc61454 QFontMetrics::width(QChar) const + 276\n338 QtGui                           0x000000010bc6cbdd 0x10bba9000 + 801757\n339 QtGui                           0x000000010bc6588d 0x10bba9000 + 772237\n340 QtGui                           0x000000010bc64bd9 QFontDatabase::findFont(int, QFontPrivate const*, QFontDef const&, bool) + 345\n341 QtGui                           0x000000010bd05437 QFontEngineMultiQPA::loadEngine(int) + 103\n342 QtGui                           0x000000010bc5844c QFontEngineMulti::stringToCMap(QChar const*, int, QGlyphLayout*, int*, QFlags<QFontEngine::ShaperFlag>) const + 684\n343 QtGui                           0x000000010bc61454 QFontMetrics::width(QChar) const + 276\n344 QtGui                           0x000000010bc6cbdd 0x10bba9000 + 801757\n345 QtGui                           0x000000010bc6588d 0x10bba9000 + 772237\n346 QtGui                           0x000000010bc64bd9 QFontDatabase::findFont(int, QFontPrivate const*, QFontDef const&, bool) + 345\n347 QtGui                           0x000000010bd05437 QFontEngineMultiQPA::loadEngine(int) + 103\n348 QtGui                           0x000000010bc5844c QFontEngineMulti::stringToCMap(QChar const*, int, QGlyphLayout*, int*, QFlags<QFontEngine::ShaperFlag>) const + 684\n349 QtGui                           0x000000010bc61454 QFontMetrics::width(QChar) const + 276\n350 QtGui                           0x000000010bc6cbdd 0x10bba9000 + 801757\n351 QtGui                           0x000000010bc6588d 0x10bba9000 + 772237\n352 QtGui                           0x000000010bc64bd9 QFontDatabase::findFont(int, QFontPrivate const*, QFontDef const&, bool) + 345\n353 QtGui                           0x000000010bd05437 QFontEngineMultiQPA::loadEngine(int) + 103\n354 QtGui                           0x000000010bc5844c QFontEngineMulti::stringToCMap(QChar const*, int, QGlyphLayout*, int*, QFlags<QFontEngine::ShaperFlag>) const + 684\n355 QtGui                           0x000000010bc61454 QFontMetrics::width(QChar) const + 276\n356 QtGui                           0x000000010bc6cbdd 0x10bba9000 + 801757\n357 QtGui                           0x000000010bc6588d 0x10bba9000 + 772237\n358 QtGui                           0x000000010bc64bd9 QFontDatabase::findFont(int, QFontPrivate const*, QFontDef const&, bool) + 345\n359 QtGui                           0x000000010bd05437 QFontEngineMultiQPA::loadEngine(int) + 103\n360 QtGui                           0x000000010bc5844c QFontEngineMulti::stringToCMap(QChar const*, int, QGlyphLayout*, int*, QFlags<QFontEngine::ShaperFlag>) const + 684\n361 QtGui                           0x000000010bc61454 QFontMetrics::width(QChar) const + 276\n362 QtGui                           0x000000010bc6cbdd 0x10bba9000 + 801757\n363 QtGui                           0x000000010bc6588d 0x10bba9000 + 772237\n364 QtGui                           0x000000010bc64bd9 QFontDatabase::findFont(int, QFontPrivate const*, QFontDef const&, bool) + 345\n365 QtGui                           0x000000010bd05437 QFontEngineMultiQPA::loadEngine(int) + 103\n366 QtGui                           0x000000010bc5844c QFontEngineMulti::stringToCMap(QChar const*, int, QGlyphLayout*, int*, QFlags<QFontEngine::ShaperFlag>) const + 684\n367 QtGui                           0x000000010bc61454 QFontMetrics::width(QChar) const + 276\n368 QtGui                           0x000000010bc6cbdd 0x10bba9000 + 801757\n369 QtGui                           0x000000010bc6588d 0x10bba9000 + 772237\n370 QtGui                           0x000000010bc64bd9 QFontDatabase::findFont(int, QFontPrivate const*, QFontDef const&, bool) + 345\n371 QtGui                           0x000000010bd05437 QFontEngineMultiQPA::loadEngine(int) + 103\n372 QtGui                           0x000000010bc5844c QFontEngineMulti::stringToCMap(QChar const*, int, QGlyphLayout*, int*, QFlags<QFontEngine::ShaperFlag>) const + 684\n373 QtGui                           0x000000010bc61454 QFontMetrics::width(QChar) const + 276\n374 QtGui                           0x000000010bc6cbdd 0x10bba9000 + 801757\n375 QtGui                           0x000000010bc6588d 0x10bba9000 + 772237\n376 QtGui                           0x000000010bc64bd9 QFontDatabase::findFont(int, QFontPrivate const*, QFontDef const&, bool) + 345\n377 QtGui                           0x000000010bd05437 QFontEngineMultiQPA::loadEngine(int) + 103\n378 QtGui                           0x000000010bc5844c QFontEngineMulti::stringToCMap(QChar const*, int, QGlyphLayout*, int*, QFlags<QFontEngine::ShaperFlag>) const + 684\n379 QtGui                           0x000000010bc61454 QFontMetrics::width(QChar) const + 276\n380 QtGui                           0x000000010bc6cbdd 0x10bba9000 + 801757\n381 QtGui                           0x000000010bc6588d 0x10bba9000 + 772237\n382 QtGui                           0x000000010bc64bd9 QFontDatabase::findFont(int, QFontPrivate const*, QFontDef const&, bool) + 345\n383 QtGui                           0x000000010bd05437 QFontEngineMultiQPA::loadEngine(int) + 103\n384 QtGui                           0x000000010bc5844c QFontEngineMulti::stringToCMap(QChar const*, int, QGlyphLayout*, int*, QFlags<QFontEngine::ShaperFlag>) const + 684\n385 QtGui                           0x000000010bc61454 QFontMetrics::width(QChar) const + 276\n386 QtGui                           0x000000010bc6cbdd 0x10bba9000 + 801757\n387 QtGui                           0x000000010bc6588d 0x10bba9000 + 772237\n388 QtGui                           0x000000010bc64bd9 QFontDatabase::findFont(int, QFontPrivate const*, QFontDef const&, bool) + 345\n389 QtGui                           0x000000010bd05437 QFontEngineMultiQPA::loadEngine(int) + 103\n390 QtGui                           0x000000010bc5844c QFontEngineMulti::stringToCMap(QChar const*, int, QGlyphLayout*, int*, QFlags<QFontEngine::ShaperFlag>) const + 684\n391 QtGui                           0x000000010bc61454 QFontMetrics::width(QChar) const + 276\n392 QtGui                           0x000000010bc6cbdd 0x10bba9000 + 801757\n393 QtGui                           0x000000010bc6588d 0x10bba9000 + 772237\n394 QtGui                           0x000000010bc64bd9 QFontDatabase::findFont(int, QFontPrivate const*, QFontDef const&, bool) + 345\n395 QtGui                           0x000000010bd05437 QFontEngineMultiQPA::loadEngine(int) + 103\n396 QtGui                           0x000000010bc5844c QFontEngineMulti::stringToCMap(QChar const*, int, QGlyphLayout*, int*, QFlags<QFontEngine::ShaperFlag>) const + 684\n397 QtGui                           0x000000010bc61454 QFontMetrics::width(QChar) const + 276\n398 QtGui                           0x000000010bc6cbdd 0x10bba9000 + 801757\n399 QtGui                           0x000000010bc6588d 0x10bba9000 + 772237\n400 QtGui                           0x000000010bc64bd9 QFontDatabase::findFont(int, QFontPrivate const*, QFontDef const&, bool) + 345\n401 QtGui                           0x000000010bd05437 QFontEngineMultiQPA::loadEngine(int) + 103\n402 QtGui                           0x000000010bc5844c QFontEngineMulti::stringToCMap(QChar const*, int, QGlyphLayout*, int*, QFlags<QFontEngine::ShaperFlag>) const + 684\n403 QtGui                           0x000000010bc61454 QFontMetrics::width(QChar) const + 276\n404 QtGui                           0x000000010bc6cbdd 0x10bba9000 + 801757\n405 QtGui                           0x000000010bc6588d 0x10bba9000 + 772237\n406 QtGui                           0x000000010bc64bd9 QFontDatabase::findFont(int, QFontPrivate const*, QFontDef const&, bool) + 345\n407 QtGui                           0x000000010bd05437 QFontEngineMultiQPA::loadEngine(int) + 103\n408 QtGui                           0x000000010bc5844c QFontEngineMulti::stringToCMap(QChar const*, int, QGlyphLayout*, int*, QFlags<QFontEngine::ShaperFlag>) const + 684\n409 QtGui                           0x000000010bc61454 QFontMetrics::width(QChar) const + 276\n410 QtGui                           0x000000010bc6cbdd 0x10bba9000 + 801757\n411 QtGui                           0x000000010bc6588d 0x10bba9000 + 772237\n412 QtGui                           0x000000010bc64bd9 QFontDatabase::findFont(int, QFontPrivate const*, QFontDef const&, bool) + 345\n413 QtGui                           0x000000010bd05437 QFontEngineMultiQPA::loadEngine(int) + 103\n414 QtGui                           0x000000010bc5844c QFontEngineMulti::stringToCMap(QChar const*, int, QGlyphLayout*, int*, QFlags<QFontEngine::ShaperFlag>) const + 684\n415 QtGui                           0x000000010bc61454 QFontMetrics::width(QChar) const + 276\n416 QtGui                           0x000000010bc6cbdd 0x10bba9000 + 801757\n417 QtGui                           0x000000010bc6588d 0x10bba9000 + 772237\n418 QtGui                           0x000000010bc64bd9 QFontDatabase::findFont(int, QFontPrivate const*, QFontDef const&, bool) + 345\n419 QtGui                           0x000000010bd05437 QFontEngineMultiQPA::loadEngine(int) + 103\n420 QtGui                           0x000000010bc5844c QFontEngineMulti::stringToCMap(QChar const*, int, QGlyphLayout*, int*, QFlags<QFontEngine::ShaperFlag>) const + 684\n421 QtGui                           0x000000010bc61454 QFontMetrics::width(QChar) const + 276\n422 QtGui                           0x000000010bc6cbdd 0x10bba9000 + 801757\n423 QtGui                           0x000000010bc6588d 0x10bba9000 + 772237\n424 QtGui                           0x000000010bc64bd9 QFontDatabase::findFont(int, QFontPrivate const*, QFontDef const&, bool) + 345\n425 QtGui                           0x000000010bd05437 QFontEngineMultiQPA::loadEngine(int) + 103\n426 QtGui                           0x000000010bc5844c QFontEngineMulti::stringToCMap(QChar const*, int, QGlyphLayout*, int*, QFlags<QFontEngine::ShaperFlag>) const + 684\n427 QtGui                           0x000000010bc61454 QFontMetrics::width(QChar) const + 276\n428 QtGui                           0x000000010bc6cbdd 0x10bba9000 + 801757\n429 QtGui                           0x000000010bc6588d 0x10bba9000 + 772237\n430 QtGui                           0x000000010bc64bd9 QFontDatabase::findFont(int, QFontPrivate const*, QFontDef const&, bool) + 345\n431 QtGui                           0x000000010bd05437 QFontEngineMultiQPA::loadEngine(int) + 103\n432 QtGui                           0x000000010bc5844c QFontEngineMulti::stringToCMap(QChar const*, int, QGlyphLayout*, int*, QFlags<QFontEngine::ShaperFlag>) const + 684\n433 QtGui                           0x000000010bc61454 QFontMetrics::width(QChar) const + 276\n434 QtGui                           0x000000010bc6cbdd 0x10bba9000 + 801757\n435 QtGui                           0x000000010bc6588d 0x10bba9000 + 772237\n436 QtGui                           0x000000010bc64bd9 QFontDatabase::findFont(int, QFontPrivate const*, QFontDef const&, bool) + 345\n437 QtGui                           0x000000010bd05437 QFontEngineMultiQPA::loadEngine(int) + 103\n438 QtGui                           0x000000010bc5844c QFontEngineMulti::stringToCMap(QChar const*, int, QGlyphLayout*, int*, QFlags<QFontEngine::ShaperFlag>) const + 684\n439 QtGui                           0x000000010bc61454 QFontMetrics::width(QChar) const + 276\n440 QtGui                           0x000000010bc6cbdd 0x10bba9000 + 801757\n441 QtGui                           0x000000010bc6588d 0x10bba9000 + 772237\n442 QtGui                           0x000000010bc64bd9 QFontDatabase::findFont(int, QFontPrivate const*, QFontDef const&, bool) + 345\n443 QtGui                           0x000000010bd05437 QFontEngineMultiQPA::loadEngine(int) + 103\n444 QtGui                           0x000000010bc5844c QFontEngineMulti::stringToCMap(QChar const*, int, QGlyphLayout*, int*, QFlags<QFontEngine::ShaperFlag>) const + 684\n445 QtGui                           0x000000010bc61454 QFontMetrics::width(QChar) const + 276\n446 QtGui                           0x000000010bc6cbdd 0x10bba9000 + 801757\n447 QtGui                           0x000000010bc6588d 0x10bba9000 + 772237\n448 QtGui                           0x000000010bc64bd9 QFontDatabase::findFont(int, QFontPrivate const*, QFontDef const&, bool) + 345\n449 QtGui                           0x000000010bd05437 QFontEngineMultiQPA::loadEngine(int) + 103\n450 QtGui                           0x000000010bc5844c QFontEngineMulti::stringToCMap(QChar const*, int, QGlyphLayout*, int*, QFlags<QFontEngine::ShaperFlag>) const + 684\n451 QtGui                           0x000000010bc61454 QFontMetrics::width(QChar) const + 276\n452 QtGui                           0x000000010bc6cbdd 0x10bba9000 + 801757\n453 QtGui                           0x000000010bc6588d 0x10bba9000 + 772237\n454 QtGui                           0x000000010bc64bd9 QFontDatabase::findFont(int, QFontPrivate const*, QFontDef const&, bool) + 345\n455 QtGui                           0x000000010bd05437 QFontEngineMultiQPA::loadEngine(int) + 103\n456 QtGui                           0x000000010bc5844c QFontEngineMulti::stringToCMap(QChar const*, int, QGlyphLayout*, int*, QFlags<QFontEngine::ShaperFlag>) const + 684\n457 QtGui                           0x000000010bc61454 QFontMetrics::width(QChar) const + 276\n458 QtGui                           0x000000010bc6cbdd 0x10bba9000 + 801757\n459 QtGui                           0x000000010bc6588d 0x10bba9000 + 772237\n460 QtGui                           0x000000010bc64bd9 QFontDatabase::findFont(int, QFontPrivate const*, QFontDef const&, bool) + 345\n461 QtGui                           0x000000010bd05437 QFontEngineMultiQPA::loadEngine(int) + 103\n462 QtGui                           0x000000010bc5844c QFontEngineMulti::stringToCMap(QChar const*, int, QGlyphLayout*, int*, QFlags<QFontEngine::ShaperFlag>) const + 684\n463 QtGui                           0x000000010bc61454 QFontMetrics::width(QChar) const + 276\n464 QtGui                           0x000000010bc6cbdd 0x10bba9000 + 801757\n465 QtGui                           0x000000010bc6588d 0x10bba9000 + 772237\n466 QtGui                           0x000000010bc64bd9 QFontDatabase::findFont(int, QFontPrivate const*, QFontDef const&, bool) + 345\n467 QtGui                           0x000000010bd05437 QFontEngineMultiQPA::loadEngine(int) + 103\n468 QtGui                           0x000000010bc5844c QFontEngineMulti::stringToCMap(QChar const*, int, QGlyphLayout*, int*, QFlags<QFontEngine::ShaperFlag>) const + 684\n469 QtGui                           0x000000010bc61454 QFontMetrics::width(QChar) const + 276\n470 QtGui                           0x000000010bc6cbdd 0x10bba9000 + 801757\n471 QtGui                           0x000000010bc6588d 0x10bba9000 + 772237\n472 QtGui                           0x000000010bc64bd9 QFontDatabase::findFont(int, QFontPrivate const*, QFontDef const&, bool) + 345\n473 QtGui                           0x000000010bd05437 QFontEngineMultiQPA::loadEngine(int) + 103\n474 QtGui                           0x000000010bc5844c QFontEngineMulti::stringToCMap(QChar const*, int, QGlyphLayout*, int*, QFlags<QFontEngine::ShaperFlag>) const + 684\n475 QtGui                           0x000000010bc61454 QFontMetrics::width(QChar) const + 276\n476 QtGui                           0x000000010bc6cbdd 0x10bba9000 + 801757\n477 QtGui                           0x000000010bc6588d 0x10bba9000 + 772237\n478 QtGui                           0x000000010bc64bd9 QFontDatabase::findFont(int, QFontPrivate const*, QFontDef const&, bool) + 345\n479 QtGui                           0x000000010bd05437 QFontEngineMultiQPA::loadEngine(int) + 103\n480 QtGui                           0x000000010bc5844c QFontEngineMulti::stringToCMap(QChar const*, int, QGlyphLayout*, int*, QFlags<QFontEngine::ShaperFlag>) const + 684\n481 QtGui                           0x000000010bc61454 QFontMetrics::width(QChar) const + 276\n482 QtGui                           0x000000010bc6cbdd 0x10bba9000 + 801757\n483 QtGui                           0x000000010bc6588d 0x10bba9000 + 772237\n484 QtGui                           0x000000010bc64bd9 QFontDatabase::findFont(int, QFontPrivate const*, QFontDef const&, bool) + 345\n485 QtGui                           0x000000010bd05437 QFontEngineMultiQPA::loadEngine(int) + 103\n486 QtGui                           0x000000010bc5844c QFontEngineMulti::stringToCMap(QChar const*, int, QGlyphLayout*, int*, QFlags<QFontEngine::ShaperFlag>) const + 684\n487 QtGui                           0x000000010bc61454 QFontMetrics::width(QChar) const + 276\n488 QtGui                           0x000000010bc6cbdd 0x10bba9000 + 801757\n489 QtGui                           0x000000010bc6588d 0x10bba9000 + 772237\n490 QtGui                           0x000000010bc64bd9 QFontDatabase::findFont(int, QFontPrivate const*, QFontDef const&, bool) + 345\n491 QtGui                           0x000000010bd05437 QFontEngineMultiQPA::loadEngine(int) + 103\n492 QtGui                           0x000000010bc5844c QFontEngineMulti::stringToCMap(QChar const*, int, QGlyphLayout*, int*, QFlags<QFontEngine::ShaperFlag>) const + 684\n493 QtGui                           0x000000010bc61454 QFontMetrics::width(QChar) const + 276\n494 QtGui                           0x000000010bc6cbdd 0x10bba9000 + 801757\n495 QtGui                           0x000000010bc6588d 0x10bba9000 + 772237\n496 QtGui                           0x000000010bc64bd9 QFontDatabase::findFont(int, QFontPrivate const*, QFontDef const&, bool) + 345\n497 QtGui                           0x000000010bd05437 QFontEngineMultiQPA::loadEngine(int) + 103\n498 QtGui                           0x000000010bc5844c QFontEngineMulti::stringToCMap(QChar const*, int, QGlyphLayout*, int*, QFlags<QFontEngine::ShaperFlag>) const + 684\n499 QtGui                           0x000000010bc61454 QFontMetrics::width(QChar) const + 276\n500 QtGui                           0x000000010bc6cbdd 0x10bba9000 + 801757\n501 QtGui                           0x000000010bc6588d 0x10bba9000 + 772237\n502 QtGui                           0x000000010bc64bd9 QFontDatabase::findFont(int, QFontPrivate const*, QFontDef const&, bool) + 345\n503 QtGui                           0x000000010bd05437 QFontEngineMultiQPA::loadEngine(int) + 103\n504 QtGui                           0x000000010bc5844c QFontEngineMulti::stringToCMap(QChar const*, int, QGlyphLayout*, int*, QFlags<QFontEngine::ShaperFlag>) const + 684\n505 QtGui                           0x000000010bc61454 QFontMetrics::width(QChar) const + 276\n506 QtGui                           0x000000010bc6cbdd 0x10bba9000 + 801757\n507 QtGui                           0x000000010bc6588d 0x10bba9000 + 772237\n508 QtGui                           0x000000010bc64bd9 QFontDatabase::findFont(int, QFontPrivate const*, QFontDef const&, bool) + 345\n509 QtGui                           0x000000010bd05437 QFontEngineMultiQPA::loadEngine(int) + 103\n510 QtGui                           0x000000010bc5844c QFontEngineMulti::stringToCMap(QChar const*, int, QGlyphLayout*, int*, QFlags<QFontEngine::ShaperFlag>) const + 684\n511 QtGui                           0x000000010bc61454 QFontMetrics::width(QChar) const + 276\n\nThread 1:: Dispatch queue: com.apple.libdispatch-manager\n0   libsystem_kernel.dylib          0x00007fff86842662 kevent64 + 10\n1   libdispatch.dylib               0x00007fff88c5e43d _dispatch_mgr_invoke + 239\n2   libdispatch.dylib               0x00007fff88c5e152 _dispatch_mgr_thread + 52\n\nThread 2:\n0   libsystem_kernel.dylib          0x00007fff86841e6a __workq_kernreturn + 10\n1   libsystem_pthread.dylib         0x00007fff8e237f08 _pthread_wqthread + 330\n2   libsystem_pthread.dylib         0x00007fff8e23afb9 start_wqthread + 13\n\nThread 3:\n0   libsystem_kernel.dylib          0x00007fff86841e6a __workq_kernreturn + 10\n1   libsystem_pthread.dylib         0x00007fff8e237f08 _pthread_wqthread + 330\n2   libsystem_pthread.dylib         0x00007fff8e23afb9 start_wqthread + 13\n\nThread 4:\n0   libsystem_kernel.dylib          0x00007fff86841e6a __workq_kernreturn + 10\n1   libsystem_pthread.dylib         0x00007fff8e237f08 _pthread_wqthread + 330\n2   libsystem_pthread.dylib         0x00007fff8e23afb9 start_wqthread + 13\n\nThread 5:: QThread\n0   libsystem_kernel.dylib          0x00007fff868419aa __select + 10\n1   QtCore                          0x000000010c155cd5 qt_safe_select(int, fd_set*, fd_set*, fd_set*, timeval const*) + 69\n2   QtCore                          0x000000010c156bac QEventDispatcherUNIXPrivate::doSelect(QFlags<QEventLoop::ProcessEventsFlag>, timeval*) + 668\n3   QtCore                          0x000000010c157afb QEventDispatcherUNIX::processEvents(QFlags<QEventLoop::ProcessEventsFlag>) + 219\n4   QtCore                          0x000000010c10d983 QEventLoop::exec(QFlags<QEventLoop::ProcessEventsFlag>) + 371\n5   QtCore                          0x000000010bf8e1bd QThread::exec() + 109\n6   QtCore                          0x000000010bf91a3a 0x10bf6b000 + 158266\n7   libsystem_pthread.dylib         0x00007fff8e236899 _pthread_body + 138\n8   libsystem_pthread.dylib         0x00007fff8e23672a _pthread_start + 137\n9   libsystem_pthread.dylib         0x00007fff8e23afc9 thread_start + 13\n\nThread 6:: QThread\n0   libsystem_kernel.dylib          0x00007fff868419aa __select + 10\n1   QtCore                          0x000000010c155cd5 qt_safe_select(int, fd_set*, fd_set*, fd_set*, timeval const*) + 69\n2   QtCore                          0x000000010c156bac QEventDispatcherUNIXPrivate::doSelect(QFlags<QEventLoop::ProcessEventsFlag>, timeval*) + 668\n3   QtCore                          0x000000010c157afb QEventDispatcherUNIX::processEvents(QFlags<QEventLoop::ProcessEventsFlag>) + 219\n4   QtCore                          0x000000010c10d983 QEventLoop::exec(QFlags<QEventLoop::ProcessEventsFlag>) + 371\n5   QtCore                          0x000000010bf8e1bd QThread::exec() + 109\n6   QtCore                          0x000000010bf91a3a 0x10bf6b000 + 158266\n7   libsystem_pthread.dylib         0x00007fff8e236899 _pthread_body + 138\n8   libsystem_pthread.dylib         0x00007fff8e23672a _pthread_start + 137\n9   libsystem_pthread.dylib         0x00007fff8e23afc9 thread_start + 13\n\nThread 0 crashed with X86 Thread State (64-bit):\n  rax: 0x0000000000000000  rbx: 0x00007fff549a2568  rcx: 0x0000000000000000  rdx: 0x0000000000000000\n  rdi: 0x00007fff549a2070  rsi: 0x00007f9b6245a6a0  rbp: 0x00007fff549a2040  rsp: 0x00007fff549a1ea0\n   r8: 0x0000000000000001   r9: 0x0000000000000005  r10: 0x0000000000000004  r11: 0x0000000000000004\n  r12: 0x00007fff81316d00  r13: 0x0000000000000000  r14: 0x00007f9b6245a6a0  r15: 0x00007f9b6245a6a0\n  rip: 0x00007fff80c2c6a0  rfl: 0x0000000000010206  cr2: 0x00007fff549a1eb0\n\nLogical CPU:     2\nError Code:      0x00000006\nTrap Number:     14\n```\n"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/3702",
    "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
    "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/3702/labels{/name}",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/3702/comments",
    "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/3702/events",
    "html_url": "https://github.com/bitcoin/bitcoin/issues/3702",
    "id": 27802508,
    "number": 3702,
    "title": "Shift overflow bug",
    "user": {
      "login": "gavinandresen",
      "id": 331997,
      "avatar_url": "https://avatars0.githubusercontent.com/u/331997?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gavinandresen",
      "html_url": "https://github.com/gavinandresen",
      "followers_url": "https://api.github.com/users/gavinandresen/followers",
      "following_url": "https://api.github.com/users/gavinandresen/following{/other_user}",
      "gists_url": "https://api.github.com/users/gavinandresen/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gavinandresen/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gavinandresen/subscriptions",
      "organizations_url": "https://api.github.com/users/gavinandresen/orgs",
      "repos_url": "https://api.github.com/users/gavinandresen/repos",
      "events_url": "https://api.github.com/users/gavinandresen/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gavinandresen/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 64585,
        "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Bug",
        "name": "Bug",
        "color": "FBBAAB",
        "default": false
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": {
      "login": "laanwj",
      "id": 126646,
      "avatar_url": "https://avatars0.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "assignees": [
      {
        "login": "laanwj",
        "id": 126646,
        "avatar_url": "https://avatars0.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
        "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "milestone": null,
    "comments": 3,
    "created_at": "2014-02-18T15:42:23Z",
    "updated_at": "2014-02-19T08:04:14Z",
    "closed_at": "2014-02-19T08:04:14Z",
    "author_association": "CONTRIBUTOR",
    "body": "clang is telling me:\n\n```\ninit.cpp:782:41: warning: signed shift result (0x100000000) requires 34 bits to represent, but 'int' only has 32 bits\n```\n\nGit blame points the finger at:\n\n```\n82e96006 src/init.cpp      (Philip Kaufmann          2014-02-16 22:00:12 +0100  780)     if (nTotalCache < (nMinDbCache << 20))\n```\n"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/3673",
    "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
    "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/3673/labels{/name}",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/3673/comments",
    "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/3673/events",
    "html_url": "https://github.com/bitcoin/bitcoin/issues/3673",
    "id": 27590679,
    "number": 3673,
    "title": "Wallet re-lock can happen in the middle of RPC call",
    "user": {
      "login": "laanwj",
      "id": 126646,
      "avatar_url": "https://avatars0.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 64585,
        "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Bug",
        "name": "Bug",
        "color": "FBBAAB",
        "default": false
      },
      {
        "id": 149424,
        "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Wallet",
        "name": "Wallet",
        "color": "08a781",
        "default": false
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 2,
    "created_at": "2014-02-14T11:58:21Z",
    "updated_at": "2016-09-29T15:20:17Z",
    "closed_at": "2016-09-29T15:20:17Z",
    "author_association": "OWNER",
    "body": "Not sure if this is expected: when the wallet unlock times out, this can be in the middle of an operation, resulting in different errors,\n\n```\n<***> Ik zie zo een sendfrom\n<***>     [code] => -4\n<***>     [message] => Signing transaction failed\n<***> Die komt regelmatig voor\n<***> Deze ook, ook met sendfrom\n<***>     [code] => -13\n<***>     [message] => Error: Please enter the wallet passphrase with walletpassphrase first.\n<***> Of deze, ook met sendfrom\n<***>     [code] => -1\n<***>     [message] => CWallet::GenerateNewKey() : AddKey failed\n<wumpus> ja die -13 zou je verwachten idd\n```\n\nAs the cs_wallet lock is always held before calling wallet RPCs, a possible solution would be to aquire cs_wallet in LockWallet (https://github.com/bitcoin/bitcoin/blob/master/src/rpcwallet.cpp#L1545).\n"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/3670",
    "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
    "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/3670/labels{/name}",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/3670/comments",
    "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/3670/events",
    "html_url": "https://github.com/bitcoin/bitcoin/issues/3670",
    "id": 27566736,
    "number": 3670,
    "title": "importwallet method is working or not?",
    "user": {
      "login": "dbitcoin",
      "id": 5002023,
      "avatar_url": "https://avatars3.githubusercontent.com/u/5002023?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dbitcoin",
      "html_url": "https://github.com/dbitcoin",
      "followers_url": "https://api.github.com/users/dbitcoin/followers",
      "following_url": "https://api.github.com/users/dbitcoin/following{/other_user}",
      "gists_url": "https://api.github.com/users/dbitcoin/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dbitcoin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dbitcoin/subscriptions",
      "organizations_url": "https://api.github.com/users/dbitcoin/orgs",
      "repos_url": "https://api.github.com/users/dbitcoin/repos",
      "events_url": "https://api.github.com/users/dbitcoin/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dbitcoin/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 64585,
        "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Bug",
        "name": "Bug",
        "color": "FBBAAB",
        "default": false
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 2,
    "created_at": "2014-02-14T01:05:46Z",
    "updated_at": "2014-02-17T10:50:34Z",
    "closed_at": "2014-02-17T10:50:34Z",
    "author_association": "NONE",
    "body": "When I try use importwallet method bitcoind always crash.\nCompiled from latest git sources (Bitcoin version v0.9.0rc1-47-g6056c87-beta).\n\n```\n*** glibc detected *** ./bitcoind: free(): invalid pointer: 0x00007fd11a766200 ***\n======= Backtrace: =========\n/lib/x86_64-linux-gnu/libc.so.6(+0x7eb96)[0x7fd117f6db96]\n/usr/lib/x86_64-linux-gnu/libstdc++.so.6(_ZNSt6locale5_ImplD1Ev+0x5a)[0x7fd118a42a7a]\n/usr/lib/x86_64-linux-gnu/libstdc++.so.6(_ZNSt6localeD1Ev+0x2d)[0x7fd118a42c4d]\n./bitcoind(_Z12importwalletRKSt6vectorIN11json_spirit10Value_implINS0_13Config_vectorISsEEEESaIS4_EEb+0xe7d)[0x7fd11a37dc3d]\n./bitcoind(+0x143381)[0x7fd11a2b2381]\n./bitcoind(+0x146cda)[0x7fd11a2b5cda]\n./bitcoind(+0x147a58)[0x7fd11a2b6a58]\n./bitcoind(_ZN5boost4asio6detail25reactive_socket_accept_opINS0_12basic_socketINS0_2ip3tcpENS0_21stream_socket_serviceIS5_EEEES5_NS_3_bi6bind_tIvPFvNS_10shared_ptrINS0_21basic_socket_acceptorIS5_NS0_23socket_acceptor_serviceIS5_EEEEEERNS0_3ssl13basic_contextINSH_15context_serviceEEEbP18AcceptedConnectionRKNS_6system10error_codeEENS9_5list5INS9_5valueISG_EENS_17reference_wrapperISK_EENSV_IbEENSV_IP22AcceptedConnectionImplIS5_EEEPFNS_3argILi1EEEvEEEEEE11do_completeEPNS1_15task_io_serviceEPNS1_25task_io_service_operationESP_m+0x186)[0x7fd11a2c4e76]\n./bitcoind(+0x14fa46)[0x7fd11a2bea46]\n./bitcoind(_ZN5boost4asio10io_service3runEv+0x38)[0x7fd11a2bec28]\n/usr/lib/libboost_thread.so.1.46.1(thread_proxy+0x69)[0x7fd1196b6ce9]\n/lib/x86_64-linux-gnu/libpthread.so.0(+0x7e9a)[0x7fd1182b6e9a]\n/lib/x86_64-linux-gnu/libc.so.6(clone+0x6d)[0x7fd117fe33fd]\n```\n"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/3665",
    "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
    "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/3665/labels{/name}",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/3665/comments",
    "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/3665/events",
    "html_url": "https://github.com/bitcoin/bitcoin/issues/3665",
    "id": 27512300,
    "number": 3665,
    "title": "[BIP 70] submit payment ignores expire time",
    "user": {
      "login": "rvzanten",
      "id": 624015,
      "avatar_url": "https://avatars1.githubusercontent.com/u/624015?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rvzanten",
      "html_url": "https://github.com/rvzanten",
      "followers_url": "https://api.github.com/users/rvzanten/followers",
      "following_url": "https://api.github.com/users/rvzanten/following{/other_user}",
      "gists_url": "https://api.github.com/users/rvzanten/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rvzanten/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rvzanten/subscriptions",
      "organizations_url": "https://api.github.com/users/rvzanten/orgs",
      "repos_url": "https://api.github.com/users/rvzanten/repos",
      "events_url": "https://api.github.com/users/rvzanten/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rvzanten/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 64585,
        "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Bug",
        "name": "Bug",
        "color": "FBBAAB",
        "default": false
      },
      {
        "id": 135946,
        "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/GUI",
        "name": "GUI",
        "color": "02d7e1",
        "default": false
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 4,
    "created_at": "2014-02-13T11:48:36Z",
    "updated_at": "2016-03-11T09:08:08Z",
    "closed_at": "2016-03-11T09:08:08Z",
    "author_association": "NONE",
    "body": "When an user loads up a Bitcoin Payment Request and the current time has past the expire time of the BPR you get the message: 'Payment request expired'. Right.\nBut when an user loads the BPR in time and wants to submit the payment when the time of the BPR has expired the user is not prevented from sending.\n\nThe user should be prevented or at least get a warning he is about to send funds to an address of a expired BPR.\n"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/3639",
    "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
    "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/3639/labels{/name}",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/3639/comments",
    "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/3639/events",
    "html_url": "https://github.com/bitcoin/bitcoin/issues/3639",
    "id": 27138751,
    "number": 3639,
    "title": "bitcoind --help wants write access to file system",
    "user": {
      "login": "ViliusSutkus",
      "id": 812793,
      "avatar_url": "https://avatars3.githubusercontent.com/u/812793?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ViliusSutkus",
      "html_url": "https://github.com/ViliusSutkus",
      "followers_url": "https://api.github.com/users/ViliusSutkus/followers",
      "following_url": "https://api.github.com/users/ViliusSutkus/following{/other_user}",
      "gists_url": "https://api.github.com/users/ViliusSutkus/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ViliusSutkus/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ViliusSutkus/subscriptions",
      "organizations_url": "https://api.github.com/users/ViliusSutkus/orgs",
      "repos_url": "https://api.github.com/users/ViliusSutkus/repos",
      "events_url": "https://api.github.com/users/ViliusSutkus/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ViliusSutkus/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 64585,
        "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Bug",
        "name": "Bug",
        "color": "FBBAAB",
        "default": false
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 2,
    "created_at": "2014-02-07T14:40:30Z",
    "updated_at": "2014-11-29T10:03:10Z",
    "closed_at": "2014-11-29T10:03:10Z",
    "author_association": "NONE",
    "body": "Step 1: Have read-only /root\nStep 2: btc ~ # bitcoind --help\nterminate called after throwing an instance of 'boost::filesystem::filesystem_error'\n  what():  boost::filesystem::create_directory: Read-only file system: \"/root/.bitcoin\"\nAborted\nbtc ~ # \n"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/3631",
    "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
    "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/3631/labels{/name}",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/3631/comments",
    "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/3631/events",
    "html_url": "https://github.com/bitcoin/bitcoin/issues/3631",
    "id": 26982820,
    "number": 3631,
    "title": "Oversize transaction: Coin selection ignoring large unspent, coalescing small unspents",
    "user": {
      "login": "jbreher",
      "id": 1360399,
      "avatar_url": "https://avatars2.githubusercontent.com/u/1360399?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jbreher",
      "html_url": "https://github.com/jbreher",
      "followers_url": "https://api.github.com/users/jbreher/followers",
      "following_url": "https://api.github.com/users/jbreher/following{/other_user}",
      "gists_url": "https://api.github.com/users/jbreher/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jbreher/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jbreher/subscriptions",
      "organizations_url": "https://api.github.com/users/jbreher/orgs",
      "repos_url": "https://api.github.com/users/jbreher/repos",
      "events_url": "https://api.github.com/users/jbreher/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jbreher/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 64585,
        "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Bug",
        "name": "Bug",
        "color": "FBBAAB",
        "default": false
      },
      {
        "id": 149424,
        "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Wallet",
        "name": "Wallet",
        "color": "08a781",
        "default": false
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 2,
    "created_at": "2014-02-05T17:53:03Z",
    "updated_at": "2016-02-16T15:17:02Z",
    "closed_at": "2016-02-16T15:17:02Z",
    "author_association": "NONE",
    "body": "Through discussion on forum, I am led to believe that QT should should endeavor to use unspent outputs large enough to keep transaction below threshold that would incur additional transaction fee. This does not seem to be working for me. Please see\n\nhttps://bitcointalk.org/index.php?topic=449385.msg4946463#msg4946463\n\nfor evidence of large unspent, able to cover entire transaciton, and\n\nhttps://blockchain.info/tx/966b82abb713551355342c6764db56b57e28cb8eafbb823de530f2fc9b306d74?show_adv=true\n\nfor how the transaction was made up of seven small unspents instead.\n\nBitcoin-QT v0.8.6-beta on OS X 10.7.5\n"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/3628",
    "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
    "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/3628/labels{/name}",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/3628/comments",
    "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/3628/events",
    "html_url": "https://github.com/bitcoin/bitcoin/issues/3628",
    "id": 26964481,
    "number": 3628,
    "title": "BIP 70 payment request signatures not checked",
    "user": {
      "login": "jgarzik",
      "id": 494411,
      "avatar_url": "https://avatars2.githubusercontent.com/u/494411?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jgarzik",
      "html_url": "https://github.com/jgarzik",
      "followers_url": "https://api.github.com/users/jgarzik/followers",
      "following_url": "https://api.github.com/users/jgarzik/following{/other_user}",
      "gists_url": "https://api.github.com/users/jgarzik/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jgarzik/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jgarzik/subscriptions",
      "organizations_url": "https://api.github.com/users/jgarzik/orgs",
      "repos_url": "https://api.github.com/users/jgarzik/repos",
      "events_url": "https://api.github.com/users/jgarzik/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jgarzik/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 64585,
        "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Bug",
        "name": "Bug",
        "color": "FBBAAB",
        "default": false
      },
      {
        "id": 135946,
        "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/GUI",
        "name": "GUI",
        "color": "02d7e1",
        "default": false
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 5,
    "created_at": "2014-02-05T14:38:23Z",
    "updated_at": "2015-05-18T11:15:40Z",
    "closed_at": "2015-05-18T11:15:40Z",
    "author_association": "CONTRIBUTOR",
    "body": "getMerchant() appears to check the signature, but getMerchant() caller appears to ignore the result?  Testing seems to indicate it makes no matter if payment request signature is invalid or missing.\n"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/3612",
    "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
    "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/3612/labels{/name}",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/3612/comments",
    "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/3612/events",
    "html_url": "https://github.com/bitcoin/bitcoin/issues/3612",
    "id": 26743231,
    "number": 3612,
    "title": "Gitian-built 0.9.0rc1 : windows bitcoin-qt.exe mismatch",
    "user": {
      "login": "gavinandresen",
      "id": 331997,
      "avatar_url": "https://avatars0.githubusercontent.com/u/331997?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gavinandresen",
      "html_url": "https://github.com/gavinandresen",
      "followers_url": "https://api.github.com/users/gavinandresen/followers",
      "following_url": "https://api.github.com/users/gavinandresen/following{/other_user}",
      "gists_url": "https://api.github.com/users/gavinandresen/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gavinandresen/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gavinandresen/subscriptions",
      "organizations_url": "https://api.github.com/users/gavinandresen/orgs",
      "repos_url": "https://api.github.com/users/gavinandresen/repos",
      "events_url": "https://api.github.com/users/gavinandresen/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gavinandresen/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 64585,
        "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Bug",
        "name": "Bug",
        "color": "FBBAAB",
        "default": false
      },
      {
        "id": 61889416,
        "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Build%20system",
        "name": "Build system",
        "color": "5319e7",
        "default": false
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 8,
    "created_at": "2014-02-01T17:39:42Z",
    "updated_at": "2014-02-22T08:57:48Z",
    "closed_at": "2014-02-22T08:57:48Z",
    "author_association": "CONTRIBUTOR",
    "body": "I'm successfully reproducibly gitian-building Linux 0.9.0rc1:\n\n```\n    20b208827262ad4a4afb2419e60bf27c16e96406e3df518f77d56771e22ab13f  bin/32/bitcoin-cli\n    9c30a979a2282e8326a2bec06352a3bf67f141c019d833bd1039d5de7e37cdae  bin/32/bitcoin-qt\n    4c98b5904854b0616938f53dbb682559b4f583ff3aea18353cf86725013c1cc7  bin/32/bitcoind\n    557671b4ae41fb4561d83360e9da917a5b29a1c315fcf470d16230e4a5e64548  bin/32/test_bitcoin\n    9c364ebb6ccad2c0944ebc6f07dfc0d7ef5c61a06045d107cb3dd9f477fb8b83  bin/32/test_bitcoin-qt\n    20a93099050df6176afa3a5745b15e54be88831bd7deb91398038d6b57013917  bin/64/bitcoin-cli\n    7a5dcc2344558f751499e57412145a286127f2c4a3922618023b6606a28cc5f9  bin/64/bitcoin-qt\n    6fe77a9610c6b85c550a970e51c65b21bb2b23ba05837f6091cd27840605fb45  bin/64/bitcoind\n    b62e830e6560fba96075964d406f9948b53fafd6c9009cd98caa1b87c4e87171  bin/64/test_bitcoin\n    b0470e352c303409135894783cb7cd1f99c79e14b56582218d25dd7f9c7f7587  bin/64/test_bitcoin-qt\n    a6e1b52393807db50061430454f9d0f38b3d6485bafe7f63998f8aaa3b465347  src/bitcoin-0.9.0.tar.gz\n```\n\nBut two separate Windows builds do not match:\n\n```\n==> /tmp/bitcoin-res.yml <==\n--- !omap\n- out_manifest: |\n    a3e13e99152d53c870eaa8bfbea1afb5c6da8b0a2e550a4c2914041c31a45a08  32/bitcoin-0.9.0-win32-setup.exe\n    798b82c18b29fb25dc77ec30121942619533c43d43cacaa857b7a336dfcf781f  32/bitcoin-cli.exe\n    198233f3b91dc9e7e24e2688478f6a1aed0074e0f06ed84a18abc8ef937a6e62  32/bitcoin-qt.exe\n    4c5f7737530016e971ab8e51df424c931ceebdb2d76f37df59c742d4c4f88871  32/bitcoind.exe\n    9f8e04398fd0e4e77400ebcbce7e443527d539286ddf5e59826eb902b9f8c536  32/test_bitcoin-qt.exe\n    6cc535dd7b85db172b1de99f3d9966927d38b7cbb96e912f2dc5b13c13de859a  32/test_bitcoin.exe\n    911c1e0e90b2b133868dd9e316d90b38df51de56d6c8fd6dbcd4fac422161679  64/bitcoin-0.9.0-win64-setup.exe\n    c3bd6dffc332587e6ecb065828711a40d61de6630e5c23e2ca185858e3d6e0dc  64/bitcoin-cli.exe\n\n==> /tmp/bitcoin-res2.yml <==\n--- !omap\n- out_manifest: |\n    d85996c5e77d3a1022f7bde478614de1d602ec3580a7abc0ed87841b2c85486c  32/bitcoin-0.9.0-win32-setup.exe\n    798b82c18b29fb25dc77ec30121942619533c43d43cacaa857b7a336dfcf781f  32/bitcoin-cli.exe\n    b86a9ba01100763e9936cc70f99b307a2009f168f1173e9ca1284d11ca57441a  32/bitcoin-qt.exe\n    4c5f7737530016e971ab8e51df424c931ceebdb2d76f37df59c742d4c4f88871  32/bitcoind.exe\n    9f8e04398fd0e4e77400ebcbce7e443527d539286ddf5e59826eb902b9f8c536  32/test_bitcoin-qt.exe\n    6cc535dd7b85db172b1de99f3d9966927d38b7cbb96e912f2dc5b13c13de859a  32/test_bitcoin.exe\n    39f36eefa382deb1f76f3eb3b817dbf1a590be0063328a0d4c6d8d872e849089  64/bitcoin-0.9.0-win64-setup.exe\n    c3bd6dffc332587e6ecb065828711a40d61de6630e5c23e2ca185858e3d6e0dc  64/bitcoin-cli.exe\n```\n\nThe bitcoin-qt.exes (and, therefore, the -setup.exes) are the only mismatches.  I haven't looked into what is different.\n"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/3610",
    "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
    "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/3610/labels{/name}",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/3610/comments",
    "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/3610/events",
    "html_url": "https://github.com/bitcoin/bitcoin/issues/3610",
    "id": 26684605,
    "number": 3610,
    "title": "boost-linux.yml missing g++ dependency",
    "user": {
      "login": "gavinandresen",
      "id": 331997,
      "avatar_url": "https://avatars0.githubusercontent.com/u/331997?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gavinandresen",
      "html_url": "https://github.com/gavinandresen",
      "followers_url": "https://api.github.com/users/gavinandresen/followers",
      "following_url": "https://api.github.com/users/gavinandresen/following{/other_user}",
      "gists_url": "https://api.github.com/users/gavinandresen/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gavinandresen/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gavinandresen/subscriptions",
      "organizations_url": "https://api.github.com/users/gavinandresen/orgs",
      "repos_url": "https://api.github.com/users/gavinandresen/repos",
      "events_url": "https://api.github.com/users/gavinandresen/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gavinandresen/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 64585,
        "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Bug",
        "name": "Bug",
        "color": "FBBAAB",
        "default": false
      },
      {
        "id": 61889416,
        "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Build%20system",
        "name": "Build system",
        "color": "5319e7",
        "default": false
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 10,
    "created_at": "2014-01-31T14:33:59Z",
    "updated_at": "2014-02-03T17:59:50Z",
    "closed_at": "2014-02-03T17:59:50Z",
    "author_association": "CONTRIBUTOR",
    "body": "I'm setting up VirtualBox gitian VMs from scratch, and building the first dependency (boost-linux.yml) failed because of missing \"g++\".\n\napt-get install g++ into my base VM fixes it, but I think the .yml file (or maybe several of our gitian-descriptor .yml files) needs g++ as a required package.\n"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/3581",
    "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
    "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/3581/labels{/name}",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/3581/comments",
    "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/3581/events",
    "html_url": "https://github.com/bitcoin/bitcoin/issues/3581",
    "id": 26274257,
    "number": 3581,
    "title": "getaddednodeinfo RPC call returns JSON object with duplicate keys",
    "user": {
      "login": "davecgh",
      "id": 2115102,
      "avatar_url": "https://avatars3.githubusercontent.com/u/2115102?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/davecgh",
      "html_url": "https://github.com/davecgh",
      "followers_url": "https://api.github.com/users/davecgh/followers",
      "following_url": "https://api.github.com/users/davecgh/following{/other_user}",
      "gists_url": "https://api.github.com/users/davecgh/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/davecgh/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/davecgh/subscriptions",
      "organizations_url": "https://api.github.com/users/davecgh/orgs",
      "repos_url": "https://api.github.com/users/davecgh/repos",
      "events_url": "https://api.github.com/users/davecgh/events{/privacy}",
      "received_events_url": "https://api.github.com/users/davecgh/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 64585,
        "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Bug",
        "name": "Bug",
        "color": "FBBAAB",
        "default": false
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 4,
    "created_at": "2014-01-24T21:59:59Z",
    "updated_at": "2014-01-29T13:47:11Z",
    "closed_at": "2014-01-29T13:47:11Z",
    "author_association": "CONTRIBUTOR",
    "body": "As the title states, the `getaddednodeinfo` RPC call, when invoked with the `dns` flag set to false, returns a JSON object with duplicate keys:\n\n> bitcoind getaddednodeinfo false\n> {\n>    \"addednode\" : \"1.2.3.4\",\n>    \"addednode\" : \"5.6.7.8\"\n> }\n\nMost parsers will not handle this correctly.  For example, paste `{\"addednode\":\"1.2.3.4\",\"addednode\":\"5.6.7.8\"}` into http://jsonlint.com/ and look at the result.\n\nI would suggest that is changed to an array of strings `[\"1.2.3.4\",\"5.6.7.8\"]`.\n\n``` irc\n15:48 < gavinandresen> davec: can you file a bug?  That should definitely get fixed.\n15:49 < davec> gavinandresen: will do\n15:51 < gavinandresen> davec: you sure it is broken?  According to the help, getaddednodeinfo returns an array of objects\n15:54 < davec> > bitcoind getaddednodeinfo false\n15:54 < davec> > {\n15:54 < davec> >    \"addednode\" : \"1.2.3.4\",\n15:54 < davec> >    \"addednode\" : \"5.6.7.8\"\n15:54 < davec> > }\n15:54 < davec> gavinandresen: with the dns flag set to true, it is an array of objs\n15:55 < gavinandresen> davec: ah, yeah.  Definitely file a bug, getaddednodeinfo false should just return an aray of IP strings.\n```\n"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/3563",
    "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
    "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/3563/labels{/name}",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/3563/comments",
    "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/3563/events",
    "html_url": "https://github.com/bitcoin/bitcoin/issues/3563",
    "id": 25963950,
    "number": 3563,
    "title": "Unable to close sign/verify message dialogs",
    "user": {
      "login": "fanquake",
      "id": 863730,
      "avatar_url": "https://avatars2.githubusercontent.com/u/863730?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fanquake",
      "html_url": "https://github.com/fanquake",
      "followers_url": "https://api.github.com/users/fanquake/followers",
      "following_url": "https://api.github.com/users/fanquake/following{/other_user}",
      "gists_url": "https://api.github.com/users/fanquake/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fanquake/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
      "organizations_url": "https://api.github.com/users/fanquake/orgs",
      "repos_url": "https://api.github.com/users/fanquake/repos",
      "events_url": "https://api.github.com/users/fanquake/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fanquake/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 64585,
        "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Bug",
        "name": "Bug",
        "color": "FBBAAB",
        "default": false
      },
      {
        "id": 234879,
        "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/MacOSX",
        "name": "MacOSX",
        "color": "660000",
        "default": false
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 4,
    "created_at": "2014-01-21T04:22:35Z",
    "updated_at": "2014-06-28T13:21:53Z",
    "closed_at": "2014-06-28T13:21:53Z",
    "author_association": "MEMBER",
    "body": "Compiled on OS X 10.8.5 with Qt 5.0.2, when using the compiled bitcoin-qt your unable to close the sign or verify message dialog boxes. \n\nAfter recompiling with Qt 4.8.5 the issue disappears. \n"
  }
]
